<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>新闻管理</title>
    <link href="../../Styles/Common/toastr.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div id='loading'><img src="../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <input id="context" name="dd" type="text" value="" style="display:none" />
    <script src="../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../Scripts/Api/Idepment.js" type="text/javascript"></script>
    <script src="../../Scripts/Common/toastr.js" type="text/javascript"></script>
    <script src="../../Scripts/Common/ShowTip.js"></script>
    <script type="text/javascript">

        Class('App', 'linb.Com', {

            Instance: {

                initialize: function () {

                    this.autoDestroy = true;

                    this.properties = {};
                },

                iniComponents: function () {
                    // [[code created by jsLinb UI Builder
                    var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                    append(
                (new linb.DataBinder)
                .setHost(host, "binder")
                .setName("binder")
            );

                    append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setOverflow("auto")
                .setCaption("新闻")
                .setImage("../../Image/opeimage/page.gif")
            );

                    host.pane.append(
                (new linb.UI.ToolBar)
                .setHost(host, "toolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "保存" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_toolbar_onclick")
            );

                    host.pane.append(
                (new linb.UI.Input)
                .setHost(host, "tname")
                .setDataBinder("binder")
                .setDataField("tname")
                .setLeft(70)
                .setTop(51)
                .setWidth(550)
                .setHeight(48)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999'>标题</span>")
                .setLabelHAlign("left")
            );

                    host.pane.append(
                (new linb.UI.ComboInput)
                .setHost(host, "ntype")
                .setDataBinder("binder")
                .setDataField("ntype")
                .setLeft(70)
                .setTop(101)
                .setWidth(240)
                .setHeight(48)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999'>类型</span>")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "公告", "caption": "公告" }, { "id": "通知", "caption": "通知" }, { "id": "新闻", "caption": "新闻"}])
                .setValue("新闻")
            );

                    host.pane.append(
                (new linb.UI.ComboInput)
                .setHost(host, "nshow")
                .setDataBinder("binder")
                .setDataField("nshow")
                .setLeft(350)
                .setTop(100)
                .setWidth(271)
                .setHeight(48)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999'>状态</span>")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "a", "caption": "显示" }, { "id": "b", "caption": "关闭"}])
            );

                    host.pane.append(
                (new linb.UI.Input)
                .setHost(host, "ndate")
                .setDataBinder("binder")
                .setDataField("ndate")
                .setReadonly(true)
                .setLeft(350)
                .setTop(150)
                .setWidth(270)
                .setHeight(48)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999'>发布日期</span>")
                .setLabelHAlign("left")
            );

                    host.pane.append(
                (new linb.UI.Input)
                .setHost(host, "nfbr")
                .setDataBinder("binder")
                .setDataField("nfbr")
                .setLeft(70)
                .setTop(150)
                .setWidth(240)
                .setHeight(48)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999'>发布人</span>")
                .setLabelHAlign("left")
            );

                    host.pane.append(
                (new linb.UI.Input)
                .setHost(host, "nid")
                .setDataBinder("binder")
                .setDataField("nid")
                .setLeft(51)
                .setTop(201)
                .setWidth(630)
                .setHeight(28)
                .setDisplay("none")
                .setLabelSize(60)
                .setLabelCaption("阅览者")
                .setValue("0")
                .onFocus("_nreader_onfocus")
            );

                    host.pane.append(
                (new linb.UI.Pane)
                .setHost(host, "p1")
                .setLeft(70)
                .setTop(280)
                .setWidth(1040)
                .setHeight(800)
            );

                    host.pane.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl")
                .setLeft(70)
                .setTop(260)
                .setCaption("<span style='font-size:14px;color:#999999'>内容</span>")
                .setCustomStyle({ "KEY": "font-size:12px" })
            );

                    host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "rdlg")
                .setLeft(380)
                .setTop(250)
                .setWidth(550)
                .setHeight(400)
                .setDisplay("none")
                .setCaption("部门")
                .setMinBtn(false)
                .setMaxBtn(false)
            );

                    host.rdlg.append(
                (new linb.UI.Pane)
                .setHost(host, "otool")
                .setDock("top")
                .setHeight(31)
            );

                    host.otool.append(
                (new linb.UI.ToolBar)
                .setHost(host, "rtoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_rtoolbar_onclick")
            );

                    host.rdlg.append(
                (new linb.UI.TreeBar)
                .setHost(host, "dtreebar")
                .setItems([{ "id": "node1", "sub": ["node11", { "id": "node12", "image": "img/demo.gif" }, "node13", "node14"], "caption": "node1" }, { "id": "node2", "sub": ["node21", "node22", "node23", "node24"], "caption": "node2"}])
                .setSelMode("multibycheckbox")
                .setValue("")
                .onItemSelected("_dtreebar_onitemselected")
                .beforeExpend("_dtreebar_beforeexpend")
            );

                    host.pane.append(
                (new linb.UI.Input)
                .setHost(host, "sdep")
                .setDataBinder("binder")
                .setDataField("sdep")
                .setReadonly(true)
                .setLeft(350)
                .setTop(200)
                .setWidth(270)
                .setHeight(48)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999'>阅览部门</span>")
                .setLabelHAlign("left")
                .onFocus("_nreader_onfocus")
            );

                    host.pane.append(
                (new linb.UI.ComboInput)
                .setHost(host, "nreader")
                .setDataBinder("binder")
                .setDataField("nreader")
                .setLeft(70)
                .setTop(200)
                .setWidth(240)
                .setHeight(48)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999'>阅览类型</span>")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "all", "caption": "全部" }, { "id": "seldep", "caption": "指定部门"}])
                .setValue("all")
                .onChange("_nreader_onchange")
            );

                    return children;
                    // ]]code created by jsLinb UI Builder
                },

                iniExComs: function (com, threadid) {
                },

                customAppend: function (parent, subId, left, top) {

                    return false;
                },

                events: { "onReady": "_onready" },
                _onready: function () {
                    ns = this; sdep = 0, sdcode = "";
                    preurl = "../../UIServer/NewsMessage/News.aspx"
                    ns.p1.setHtml("<iframe name='Ued' src='../TextEditor/LianVEditor.htm' width='1020' height='800' frameborder='no'  allowtransparency='yes' marginwidth='0' marginheight='0' border='0'></iframe>")
                    var Request = new Object();
                    Request = GetRequest();
                    if (Request["Sid"] != null) {
                        var cp = Request["Sid"].toString();
                        InitNew(cp)
                    }
                    else {
                        InitNew("0")
                    }
                },

                _toolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    if (item.id == "a1") {
                        SaveNews();
                    }
                    else {
                        GoBack()
                    }
                },
                _nreader_onfocus: function (profile) {
                    var ns = this, uictrl = profile.boxing();
                    if (sdep == 1) {
                        ns.rdlg.setDisplay("block");
                        IdepItems("", ns.dtreebar)
                        ns.dtreebar.setUIValue(sdcode)
                    }
                },
                _rtoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    var dv = ns.dtreebar.getUIValue()
                    ns.sdep.setValue(dv);
                    ns.rdlg.setDisplay("none")
                },
                _nreader_onchange: function (profile, oldValue, newValue) {
                    var ns = this, uictrl = profile.boxing();
                    if (newValue == "seldep") {
                        sdep = 1;
                    }
                    else {
                        sdep = 0;
                        ns.sdep.setValue("");
                    }
                },

                _dtreebar_onitemselected: function (profile, item, e, src, type) {
                    var ns = this, uictrl = profile.boxing();
                    IdepCItems(item, ns.dtreebar);
                },
                _dtreebar_beforeexpend: function (profile, item) {
                    var ns = this, uictrl = profile.boxing();
                    IdepCItems(item, ns.dtreebar);
                    
                }
            },
            Static: {
                viewSize: { "width": 1024, "height": 768 }
            }
        });
        linb.UI.setTheme(themes);
        linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
        function InitNew(v) {
            var o = { "id": v }
            var url = preurl + "/InitNews"
            var b = AjaxExb(url, o);
            var r = BackVad(b, "", false)
            if (r) {
                InitKj(r)
            }
            else {
                InitUnKj()
            }
        }
        function InitKj(r) {
            ns.tname.setValue(r.ntitle)
            ns.ndate.setValue(r.cdate)
            ns.nfbr.setValue(r.maker)
            ns.ntype.setValue(r.ntype)
            ns.nid.setValue(r.id)
            if (r.nvrange == "all" || r.nvrange == "") {
                ns.nreader.setValue("all")
                sdep = 0;
            }
            else {
                ns.nreader.setValue("seldep")
                sdep = 1;
                ns.sdep.setValue(r.sdcode);
            }
            sdcode=r.sdcode;
            ns.nshow.setValue(r.nstate == true ? "a" : "b")
            $("#context").val(r.ncontent)
        }
        function InitUnKj() {
            ns.tname.setValue()
            ns.ndate.setValue()
            ns.nfbr.setValue()
            ns.ntype.setValue("新闻")
            ns.nid.setValue(0)
            ns.nreader.setValue("all")
            ns.nshow.setValue("a")
            $("#context").val()
        }
        function SaveNews() {
            var url = preurl + "/SaveNews"
            var cont = window.Ued.getContent();
            if (cont == "") {
                alert("请输入内容")
                return false;
            }
            var db = linb.DataBinder.getFromName("binder");
            var arg1 = db.updateDataFromUI().getData();
            var arg2 = { "ntext": cont }
            var o = $.extend(arg1, arg2);
            var b = AjaxExb(url, o)
            BackVad(b, "GoBack()", false)
        }

    </script>
</body>
</html>
