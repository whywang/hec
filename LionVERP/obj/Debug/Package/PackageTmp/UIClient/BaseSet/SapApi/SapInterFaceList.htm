<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>平台管理</title>
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/Idepment.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/ISettlement.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/IPricetype.js" type="text/javascript"></script>
     <script type="text/javascript">

         Class('App', 'linb.Com', {

             Instance: {

                 initialize: function () {

                     this.autoDestroy = true;

                     this.properties = {};
                 },

                 iniComponents: function () {

                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "binder")
                .setName("binder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "panel")
                .setZIndex(1)
                .setCaption("Sap接口管理")
            );

                     host.panel.append(
                (new linb.UI.ToolBar)
                .setHost(host, "toolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除"}], "caption": "grp1"}])
                .onClick("_toolbar_onclick")
            );

                     host.panel.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "treegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 80, "type": "input", "caption": "名称" }, { "id": "col2", "width": 80, "type": "input", "caption": "编码" }, { "id": "col3", "width": 300, "type": "input", "caption": "地址" }, { "id": "col4", "width": 120, "type": "input", "caption": "用户" }, { "id": "col2", "width": 100, "type": "input", "caption": "密码" }, { "id": "col3", "width": 200, "type": "input", "caption": "服务名称" }, { "id": "col4", "width": 200, "type": "input", "caption": "服务方法"}])
                .setValue("")
            );

                     host.panel.append(
                (new linb.UI.Dialog)
                .setHost(host, "apidlg")
                .setLeft(252)
                .setTop(119)
                .setWidth(600)
                .setHeight(425)
                .setCaption("SAP接口")
                .setMinBtn(false)
                .setMaxBtn(false)
                .setDisplay("none")
            );

                     host.apidlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "stoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_stoolbar_onclick")
            );

                     host.apidlg.append(
                (new linb.UI.Input)
                .setHost(host, "sname")
                .setDataBinder("binder")
                .setDataField("sname")
                .setLeft(50)
                .setTop(50)
                .setWidth(460)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;称")
            );

                     host.apidlg.append(
                (new linb.UI.Input)
                .setHost(host, "scode")
                .setDataBinder("binder")
                .setDataField("scode")
                .setLeft(50)
                .setTop(100)
                .setWidth(460)
                .setHeight(25)
                .setLabelSize(60)
                .setReadonly(true)
                .setLabelCaption("编&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;码")
            );

                     host.apidlg.append(
                (new linb.UI.Input)
                .setHost(host, "surl")
                .setDataBinder("binder")
                .setDataField("surl")
                .setLeft(50)
                .setTop(150)
                .setWidth(460)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("地&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;址")
            );

                     host.apidlg.append(
                (new linb.UI.Input)
                .setHost(host, "suser")
                .setDataBinder("binder")
                .setDataField("suser")
                .setLeft(50)
                .setTop(200)
                .setWidth(460)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("用&nbsp;户&nbsp;名&nbsp;")
            );

                     host.apidlg.append(
                (new linb.UI.Input)
                .setHost(host, "spwd")
                .setDataBinder("binder")
                .setDataField("spwd")
                .setLeft(50)
                .setTop(250)
                .setWidth(460)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("密&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;码")
            );

                     host.apidlg.append(
                (new linb.UI.Input)
                .setHost(host, "sfwname")
                .setDataBinder("binder")
                .setDataField("sfwname")
                .setLeft(50)
                .setTop(300)
                .setWidth(460)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("服务名称")
            );

                     host.apidlg.append(
                (new linb.UI.Input)
                .setHost(host, "smethod")
                .setDataBinder("binder")
                .setDataField("smethod")
                .setLeft(50)
                .setTop(350)
                .setWidth(460)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("服务方法")
            );
                     host.apidlg.append(
                (new linb.UI.Input)
                .setHost(host, "sid")
                .setDataBinder("binder")
                .setDataField("sid")
                .setLeft(50)
                .setTop(350)
                .setWidth(460)
                .setHeight(25)
                .setLabelSize(60)
                .setDisplay("none")
                .setLabelCaption("服务方法")
            );

                     return children;

                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },

                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this;
                     preurl = "../../../UIServer/BaseSet/SapApi/SapApiList.aspx";
                     QueryList();
                 },

                 _toolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var sv = ns.treegrid.getUIValue();
                     if (item.id == "a1") {
                         ns.apidlg.setDisplay("block");
                         InitApi("")
                     }
                     if (item.id == "a3") {
                         if (sv == null || sv == "") {
                             linb.message("请选择接口")
                             return;
                         }
                         ns.apidlg.setDisplay("block");
                         InitApi(sv)
                     }
                     if (item.id == "a4") {
                         if (sv == null || sv == "") {
                             linb.message("请选择接口")
                             return;
                         }
                     }
                 },
                 _stoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveApi();
                     }
                     ns.apidlg.setDisplay("none");
                 }
             },
             Static: {
                 viewSize: { "width": 1280, "height": 1024 }
             }
         });
         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function InitApi(v) {
             var o = { "scode": v }
             var url = preurl + "/InitApi"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                  ns.sname.setValue(r.sname);
                  ns.scode.setValue(r.scode)
                  ns.surl.setValue(r.surl)
                  ns.suser.setValue(r.suser)
                  ns.spwd.setValue(r.spwd)
                  ns.sfwname.setValue(r.sfwname)
                  ns.smethod.setValue(r.sfwmethod)
                  ns.sid.setValue(r.id)
             }
             else {
                  
             }
         }
         function DelApi(v) {
             var o = { "scode": v }
             var url = preturl + "/DelApi"
             var b = AjaxExb(url, o);
             BackVad(b, "QueryList()", false)
         }
         function SaveApi() {
             var url = preurl + "/SaveApi"
             var db = linb.DataBinder.getFromName("binder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o);
             BackVad(b, "QueryList()", false)
         }
         function QueryList() {
             var url = preurl + "/QueryList";
             var b = AjaxEb(url);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.treegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[1], "cells": [{ "value": cel[0] }, { "value": cel[1] }, { "value": cel[2] }, { "value": cel[3] }, { "value": cel[4] }, { "value": cel[5] }, { "value": cel[6]}] })
                 }
                 ns.treegrid.setRows(arr)
             }
         }
         function ReLoad() {
             QueryList();
             ns.fdlg.setDisplay("none")
         }
     </script>
</body>
</html>
