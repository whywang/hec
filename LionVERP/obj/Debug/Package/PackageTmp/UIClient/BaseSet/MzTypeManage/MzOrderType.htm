<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>木作菜单管理</title>
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/Ieventmenu.js" type="text/javascript"></script>
     <script type="text/javascript">

         Class('App', 'linb.Com', {

             Instance: {

                 initialize: function () {

                     this.autoDestroy = true;

                     this.properties = {};
                 },

                 iniComponents: function () {
                     // [[code created by jsLinb UI Builder
                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "binder")
                .setName("binder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("木作单类型表单")
            );

                     host.pane.append(
                (new linb.UI.ToolBar)
                .setHost(host, "toolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除"}], "caption": "grp1"}])
                .onClick("_toolbar_onclick")
            );

                     host.pane.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "treegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 140, "type": "input", "caption": "订单类型" }, { "id": "col2", "width": 120, "type": "input", "caption": "编码" }, { "id": "col3", "width": 140, "type": "input", "caption": "表单" }, { "id": "col3", "width": 140, "type": "input", "caption": "表单类型"}])
                .setValue("")
                .onRowSelected("_treegrid_onrowselected")
            );

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "dlg")
                .setLeft(170)
                .setTop(80)
                .setWidth(530)
                .setDisplay("none")
                .setCaption("订单类型")
                .setMinBtn(false)
                .setMaxBtn(false)
            );

                     host.dlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "stoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_stoolbar_onclick")
            );

                     host.dlg.append(
                (new linb.UI.Input)
                .setHost(host, "mtname")
                .setDataBinder("binder")
                .setDataField("mtname")
                .setLeft(50)
                .setTop(50)
                .setWidth(350)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("木作类型")
            );

                     host.dlg.append(
                (new linb.UI.Input)
                .setHost(host, "mtcode")
                .setDataBinder("binder")
                .setDataField("mtcode")
                .setReadonly(true)
                .setLeft(50)
                .setTop(100)
                .setWidth(350)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("类型编码")
            );

                     host.dlg.append(
                (new linb.UI.Input)
                .setHost(host, "id")
                .setDataBinder("binder")
                .setDataField("id")
                .setLeft(50)
                .setTop(150)
                .setWidth(350)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
                .setValue("0")
            );

                     host.dlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "emcode")
                .setDataBinder("binder")
                .setDataField("emcode")
                .setLeft(50)
                .setTop(150)
                .setWidth(335)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("流程表单")
                .setType("listbox")
            );

                     host.dlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "otype")
                .setDataBinder("binder")
                .setDataField("otype")
                .setLeft(50)
                .setTop(200)
                .setWidth(335)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("单据类型")
                .setType("listbox")
                .setItems([{ "id": "xs", "caption": "销售" }, { "id": "sk", "caption": "收款" }, { "id": "sc", "caption": "生产" }, { "id": "rk", "caption": "入库" }, { "id": "fh", "caption": "发货"}])
            );

                     return children;
                     // ]]code created by jsLinb UI Builder
                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },

                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this;
                     preurl = "../../../MzOrderType";
                     IeventmenuItems("1", "", "", "", ns.emcode)
                     QueryList()
                 },


                 _stoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveMzType();
                         ns.dlg.setDisplay("none");
                     }
                     else {
                         ns.dlg.setDisplay("none");
                     }
                 },
                 _toolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var sv = ns.treegrid.getUIValue();
                     if (item.id == "a1") {
                         ns.dlg.setDisplay("block");
                         InitMzType("");
                     }
                     if (item.id == "a3") {
                         if (sv == "" || sv == null) {
                             linb.message("请选择记录");
                             return;
                         }
                         ns.dlg.setDisplay("block");
                         InitMzType(sv);
                     }
                     if (item.id == "a4") {
                         if (sv != "" && sv != null) {
                             IDelFun("DelMzType('" + ov + "')")
                         }
                         else {
                             linb.message("请选择单据类型")
                         }
                     }
                 },
                 _treegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.treegrid.setValue(row.id)
                 }
             }
         });
         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function InitMzType(tv) {
             var o = { "mtcode": tv }
             var url = preurl + "/InitMzType"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 InitKj(r)
             }
             else {
                 InitUnKj()
             }
         }
         function InitKj(r) {
             ns.emcode.setValue(r.emcode)
             ns.mtname.setValue(r.mtname)
             ns.mtcode.setValue(r.mtcode)
             ns.otype.setValue(r.otype)
             ns.id.setValue(r.id)
         }
         function InitUnKj() {
             ns.emcode.setValue("")
             ns.mtname.setValue("")
             ns.mtcode.setValue("")
             ns.id.setValue(0)
         }
         function SaveMzType() {

             var url = preurl + "/SaveMzType"
             var db = linb.DataBinder.getFromName("binder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "QueryList()", false)
         }
         function DelMzType(tv) {
             var o = { "mtcode": tv }
             var url = preurl + "/DelMzType"
             var b = AjaxExb(url, o);
             BackVad(b, "QueryList()", false)
         }
         function QueryList() {
             var url = preurl + "/QueryList";
             var b = AjaxEb(url);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.treegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[0] }, { "value": cel[2] }, { "value": cel[3]}] })
                 }
                 ns.treegrid.setRows(arr)
             }
         }
         
     </script>
</body>
</html>

