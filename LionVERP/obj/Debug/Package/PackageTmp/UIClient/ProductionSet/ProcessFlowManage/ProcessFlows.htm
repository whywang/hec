<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>配套产品</title>
    <link href="../../../Styles/Common/toastr.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." /></div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/IInventory.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/toastr.js" type="text/javascript"></script>
     <script type="text/javascript">

         Class('App', 'linb.Com', {

             Instance: {

                 initialize: function () {

                     this.autoDestroy = true;

                     this.properties = {};
                 },

                 iniComponents: function () {

                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "binder")
                .setName("binder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("产品工艺设置")
            );

                     host.pane.append(
                (new linb.UI.ToolBar)
                .setHost(host, "stoolbar")
                 .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "设置", "image": "../../../Image/opeimage/set.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "重置", "image": "../../../Image/opeimage/reset.gif"}], "caption": "grp1"}])
                 .onClick("_stoolbar_onclick")
            );

                     host.pane.append(
                (new linb.UI.Layout)
                .setHost(host, "ly")
                .setItems([{ "id": "before", "pos": "before", "min": 10, "size": 350, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "before1", "pos": "before", "min": 10, "size": 350, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "ppt")
                .setDock("top")
                .setHeight(40)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.ppt.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl1")
                .setLeft(20)
                .setTop(10)
                .setCaption("<span style='font-size:14px;font-weight:bolder;color:#666666'>产品类别</span>")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "ppl")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "ppr")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "ppm")
                .setDock("fill")
                .setCustomStyle({ "KEY": "background:#ffffff" })
            , "before");

                     host.ppm.append(
                (new linb.UI.TreeBar)
                .setHost(host, "ptreebar")
                .onItemSelected("_ptreebar_onitemselected")
                .beforeExpend("_ptreebar_beforeexpend")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pct")
                .setDock("top")
                .setHeight(70)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before1");

                     host.pct.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl2")
                .setLeft(20)
                .setTop(40)
                .setCaption("<span style='font-size:14px;font-weight:bolder;color:#666666'>工艺路线</span>")
            );

                     host.pct.append(
                (new linb.UI.ToolBar)
                .setHost(host, "ltoolbar")
                .onClick("_ltoolbar_onclick")
               .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增", "image": "../../../Image/opeimage/add.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑", "image": "../../../Image/opeimage/edit.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除", "image": "../../../Image/opeimage/del.gif"}], "caption": "grp1"}])
                 );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pcl")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before1");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pcr")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before1");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pcm")
                .setDock("fill")
                .setCustomStyle({ "KEY": "background:#ffffff" })
            , "before1");

                     host.pcm.append(
                (new linb.UI.TreeBar)
                .setHost(host, "gltreebar")
                .onItemSelected("_gltreebar_onitemselected")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pgt")
                .setDock("top")
                .setHeight(40)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.pgt.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl3")
                .setLeft(10)
                .setTop(10)
                .setCaption("<span style='font-size:14px;font-weight:bolder;color:#666666'>工艺</span>")
            );

                     host.ly.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "gtreegrid")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 140, "type": "input", "caption": "工艺" }, { "id": "col3", "width": 80, "type": "input", "caption": "序号"}])
            , "main");

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "gdlg")
                .setLeft(180)
                .setTop(150)
                .setWidth(700)
                .setHeight(540)
                .setCaption("工艺路线")
                .setMinBtn(false)
                .setMaxBtn(false)
                .setDisplay("none")
            );

                     host.gdlg.append(
                (new linb.UI.Pane)
                .setHost(host, "pt")
                .setDock("top")
                .setHeight(30)
            );

                     host.pt.append(
                (new linb.UI.ToolBar)
                .setHost(host, "lstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_lstoolbar_onclick")
            );

                     host.gdlg.append(
                (new linb.UI.Pane)
                .setHost(host, "pbt")
                .setDock("top")
                .setHeight(95)
                .setCustomStyle({ "KEY": "border-bottom:5px solid #f2f2f2" })
            );

                     host.pbt.append(
                (new linb.UI.Input)
                .setHost(host, "lname")
                .setDataBinder("binder")
                .setDataField("lname")
                .setLeft(50)
                .setTop(20)
                .setWidth(280)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("工艺路线")
                .setLabelHAlign("left")
            );

                     host.pbt.append(
                (new linb.UI.Input)
                .setHost(host, "lcode")
                .setDataBinder("binder")
                .setDataField("lcode")
                .setLeft(360)
                .setTop(20)
                .setWidth(280)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("路线编码")
                .setLabelHAlign("left")
            );
                     host.pbt.append(
                (new linb.UI.Input)
                .setHost(host, "lid")
                .setDataBinder("binder")
                .setDataField("lid")
                .setLeft(360)
                .setTop(20)
                .setWidth(280)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("路线编码")
                .setLabelHAlign("left")
                .setValue(0)
                .setDisplay("none")
            );

                     host.gdlg.append(
                (new linb.UI.Pane)
                .setHost(host, "plm")
                .setDock("fill")
            );

                     host.plm.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "etreegrid")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setEditable(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "gname", "type": "label", "width": 160, "caption": "工艺名称" }, { "id": "gcode", "type": "label", "width": 120, "caption": "工艺编码" }, { "id": "number", "type": "number", "width": 100, "caption": "排序号" }, { "id": "number", "type": "number", "width": 100, "caption": "用时(小时)"}])
            );

                     return children;

                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },


                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this;
                     preurl = "../../../ProductionProcessLine";
                     IinvItems("", ns.ptreebar);
                     QueryLineList();
                 },
                 _stoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var sv = ns.ptreebar.getUIValue();
                     var lv = ns.gltreebar.getUIValue();
                     if (sv == "" || sv == null) {
                         linb.warn("请选择产品类别");
                         return;
                     }
                     if (item.id == "a1") {
                         if (lv == "" || lv == null) {
                             linb.warn("请选择工艺路线");
                             return;
                         }
                         SetProcessLine(sv, lv)
                     }
                     if (item.id == "a3") {
                         linb.confirms("确定删除？","ReSetProcessLine('" + sv + "')")
                     }
                 },
                 _ptreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     IinvCItems(item, ns.ptreebar);
                     GetProcessLine(item.id);
                 },
                 _ptreebar_beforeexpend: function (profile, item) {
                     var ns = this, uictrl = profile.boxing();
                     IinvCItems(item, ns.ptreebar);
                 },
                 _gltreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.gltreebar.setUIValue(item.id)
                     QueryLinePoint(item.id)
                 },
                 _ltoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var sv = ns.gltreebar.getUIValue();
                     if (item.id == "a1") {
                         ns.gdlg.setDisplay("block");
                         InitProcessLine("")
                     }
                     if (item.id == "a3") {
                         if (sv != null && sv != "") {
                             ns.gdlg.setDisplay("block");
                             InitProcessLine(sv)
                         }
                         else {
                             linb.warn("请选择工艺类别")
                         }
                     }
                     if (item.id == "a4") {
                         if (sv != null && sv != "") {
                             linb.confirms("确定删除？", "DelProcessLine('" + sv + "')")
                         }
                         else {
                             linb.warn("请选择工艺类别")
                         }
                     }
                 },
                 _lstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveProcessLine()
                     }
                     ns.gdlg.setDisplay("none");
                 }
             },
             Static: {
                 viewSize: { "width": 1024, "height": 768 }
             }
         });
         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function InitProcessLine(v) {
             var o = { "lcode": v }
             var url = preurl + "/InitLine"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.lname.setValue(r.lname)
                 ns.lcode.setValue(r.lcode)
                 ns.lid.setValue(r.id)
                 GyQueryList(v)
             }
         }
         function GyQueryList(v) {
             var o = { "lcode": v }
             var url = preurl + "/QueryGyAllList";
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.etreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[0] }, { "value": cel[2] }, { "value": cel[3]}] })
                 }
                 ns.etreegrid.setRows(arr)
             }
         }
         function SaveProcessLine() {
             var prow = ns.etreegrid.getRows("min")
             var arg1 = { "prow": prow }
             var url = preurl + "/SaveLine"
             var db = linb.DataBinder.getFromName("binder");
             var arg2 = db.updateDataFromUI().getData();
             var o = $.extend(arg1, arg2);
             var b = AjaxExb(url, o)
             BackVad(b, "", false)
         }
         function DelProcessLine(v) {
             var o = { "lcode": v }
             var url = preurl + "/DelLine"
             var b = AjaxExb(url, o);
             BackVad(b, "QueryLineList()", false)
         }
         function QueryLineList() {
             var url = preurl + "/QueryList";
             var b = AjaxEb(url);
             ns.gltreebar.setItems();
             var r = BackVad(b, "", false)
             if (r) {
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "caption": cel[1] });
                 }
                 ns.gltreebar.setItems(arr)
             }
         }
         function QueryLinePoint(lv) {
             var o = { "lcode": lv }
             var url = preurl + "/QueryLinePoint";
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.gtreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[0] }, { "value": cel[1] }, { "value": cel[2]}] })
                 }
                 ns.gtreegrid.setRows(arr)
             }
         }

         function InitProcess(pv, jv) {
             var o = { "ccode": pv, "gcode": jv }
             var url = preurl + "/InitGy"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.gname.setValue(r.gname)
                 ns.gcode.setValue(r.gcode)
                 ns.gcname.setValue(r.pcname)
                 ns.gccode.setValue(r.pccode)
                 ns.gid.setValue(r.id)
             }
         }
         function SaveProcess() {
             var sv = ns.ctreebar.getUIValue();
             var url = preurl + "/SaveGy"
             var db = linb.DataBinder.getFromName("gbinder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "QueryList('" + sv + "')", false)
         }
         function DelProcess(v) {
             var sv = ns.ctreebar.getUIValue();
             var o = { "gcode": v }
             var url = preurl + "/DelProcess"
             var b = AjaxExb(url, o);
             BackVad(b, "QueryList('" + sv + "')", false)
         }
         function QueryList() {
             var url = preurl + "/QueryGyAllList";
             var b = AjaxEb(url);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.gtreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[0] }, { "value": cel[2]}] })
                 }
                 ns.gtreegrid.setRows(arr)
             }
         }

         function SetProcessLine(pv, lv) {
             var o = { "pcode": pv, "lcode": lv }
             var url = preurl + "/SetProcessLine"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
         }
         function ReSetProcessLine(pv, lv) {
             var o = { "pcode": pv }
             var url = preurl + "/ReSetProcessLine"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
         }
         function GetProcessLine(pv) {
             var o = { "pcode": pv }
             var url = preurl + "/GetProcessLine"
             var b = AjaxExb(url, o);
             if (b) {
                 ns.gltreebar.setUIValue(b)
             }
             else {
                 linb.warn("未设置");
                 ns.gltreebar.setUIValue("")
             }
         }
     </script>
</body>
</html>
