<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>配套产品</title>
    <script src="../../../Scripts/Common/toastr.js" type="text/javascript"></script>
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <link href="../../../Styles/Common/toastr.css" rel="stylesheet" type="text/css" />
 
     <script type="text/javascript">
         Class('App', 'linb.Com', {

             Instance: {

                 initialize: function () {

                     this.autoDestroy = true;

                     this.properties = {};
                 },

                 iniComponents: function () {

                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "cbinder")
                .setName("cbinder")
            );

                     append(
                (new linb.DataBinder)
                .setHost(host, "gbinder")
                .setName("gbinder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("产品工艺")
            );

                     host.pane.append(
                (new linb.UI.Layout)
                .setHost(host, "ly")
                .setItems([{ "id": "before", "pos": "before", "min": 350, "size": 350, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            );

                     host.ly.append(
                (new linb.UI.ToolBar)
                .setHost(host, "ctoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除"}], "caption": "grp1"}])
                .onClick("_ctoolbar_onclick")
            , "before");

                     host.ly.append(
                (new linb.UI.ToolBar)
                .setHost(host, "gtoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除"}], "caption": "grp1"}])
                .onClick("_gtoolbar_onclick")
            , "main");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pca")
                .setDock("fill")
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.pca.append(
                (new linb.UI.Pane)
                .setHost(host, "pct")
                .setDock("top")
                .setHeight(40)
                .setDisplay("block")
            );

                     host.pct.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl1")
                .setLeft(20)
                .setTop(10)
                .setCaption("<span style='font-size:14px;font-weight:bolder;color:#666666'>工艺类别</span>")
            );

                     host.pca.append(
                (new linb.UI.Pane)
                .setHost(host, "pcl")
                .setDock("left")
                .setWidth(12)
                .setDisplay("block")
            );

                     host.pca.append(
                (new linb.UI.Pane)
                .setHost(host, "pcr")
                .setDock("right")
                .setWidth(12)
                .setDisplay("block")
            );

                     host.pca.append(
                (new linb.UI.Pane)
                .setHost(host, "pcm")
                .setDock("fill")
                .setCustomStyle({ "KEY": "background:#ffffff" })
            );

                     host.pcm.append(
                (new linb.UI.TreeBar)
                .setHost(host, "ctreebar")
                .onItemSelected("_ctreebar_onitemselected")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pga")
                .setDock("fill")
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.pga.append(
                (new linb.UI.Pane)
                .setHost(host, "pgt")
                .setDock("top")
                .setHeight(40)
            );

                     host.pgt.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl2")
                .setLeft(20)
                .setTop(10)
                .setCaption("<span style='font-size:14px;font-weight:bolder;color:#666666'>工艺</span>")
            );

                     host.pga.append(
                (new linb.UI.Pane)
                .setHost(host, "pgl")
                .setDock("left")
                .setWidth(12)
            );

                     host.pga.append(
                (new linb.UI.Pane)
                .setHost(host, "pgr")
                .setDock("right")
                .setWidth(12)
            );

                     host.pga.append(
                (new linb.UI.Pane)
                .setHost(host, "pgm")
                .setDock("fill")
                .setCustomStyle({ "KEY": "background:#ffffff" })
            );

                     host.pgm.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "gtreegrid")
                .setSelMode("multibycheckbox")
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 150, "type": "input", "caption": "工艺" }, { "id": "col2", "width": 120, "type": "input", "caption": "编码" }, { "id": "col3", "width": 150, "type": "input", "caption": "类别"}])
                .setValue("")
                .onRowSelected("_gtreegrid_onrowselected")
            );

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "cdlg")
                .setLeft(60)
                .setTop(100)
                .setWidth(560)
                .setHeight(170)
                .setCaption("工艺类别")
                .setMinBtn(false)
                .setMaxBtn(false)
                .setDisplay("none")
            );

                     host.cdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "cstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_cstoolbar_onclick")
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "cname")
                .setDataBinder("cbinder")
                .setDataField("cname")
                .setLeft(40)
                .setTop(50)
                .setWidth(210)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("类别")
                .setLabelHAlign("left")
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "ccode")
                .setDataBinder("cbinder")
                .setDataField("ccode")
                .setReadonly(true)
                .setLeft(290)
                .setTop(50)
                .setWidth(210)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("编码")
                .setLabelHAlign("left")
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "cid")
                .setDataBinder("cbinder")
                .setDataField("cid")
                .setReadonly(true)
                .setLeft(200)
                .setTop(80)
                .setWidth(210)
                .setHeight(47)
                .setDisplay("none")
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("id")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "gdlg")
                .setLeft(220)
                .setTop(110)
                .setWidth(540)
                .setHeight(210)
                .setCaption("工艺")
                .setMinBtn(false)
                .setMaxBtn(false)
                .setDisplay("none")
            );

                     host.gdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "gstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_gstoolbar_onclick")
            );

                     host.gdlg.append(
                (new linb.UI.Input)
                .setHost(host, "gname")
                .setDataBinder("gbinder")
                .setDataField("gname")
                .setLeft(40)
                .setTop(50)
                .setWidth(210)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("工艺名称")
                .setLabelHAlign("left")
            );

                     host.gdlg.append(
                (new linb.UI.Input)
                .setHost(host, "gcode")
                .setDataBinder("gbinder")
                .setDataField("gcode")
                .setReadonly(true)
                .setLeft(290)
                .setTop(50)
                .setWidth(210)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("工艺编码")
                .setLabelHAlign("left")
            );

                     host.gdlg.append(
                (new linb.UI.Input)
                .setHost(host, "gcname")
                .setDataBinder("gbinder")
                .setDataField("gcname")
                .setReadonly(true)
                .setLeft(40)
                .setTop(100)
                .setWidth(210)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("类别")
                .setLabelHAlign("left")
            );

                     host.gdlg.append(
                (new linb.UI.Input)
                .setHost(host, "gccode")
                .setDataBinder("gbinder")
                .setDataField("gccode")
                .setReadonly(true)
                .setLeft(290)
                .setTop(100)
                .setWidth(210)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("编码")
                .setLabelHAlign("left")
            );

                     host.gdlg.append(
                (new linb.UI.Input)
                .setHost(host, "gid")
                .setDataBinder("gbinder")
                .setDataField("gid")
                .setReadonly(true)
                .setLeft(230)
                .setTop(120)
                .setWidth(210)
                .setHeight(47)
                .setDisplay("none")
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("id")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     return children;

                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },

                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this;
                     preurl = "../../../ProductionProcess";
                     QueryCateList();
                 },

                 _ctoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var sv = ns.ctreebar.getUIValue();
                     if (item.id == "a1") {
                         ns.cdlg.setDisplay("block");
                         InitProcessCate("")
                     }
                     if (item.id == "a3") {
                         if (sv != null && sv != "") {
                             ns.cdlg.setDisplay("block");
                             InitProcessCate(sv)
                         }
                         else {
                             linb.warn("请选择工艺类别")
                         }
                     }
                     if (item.id == "a4") {
                         if (sv != null && sv != "") {
                             IDelFun("DelProcessCate('" + sv + "')")
                         }
                         else {
                             linb.warn("请选择工艺类别")
                         }
                     }
                 },
                 _gtoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var cv = ns.ctreebar.getUIValue();
                     var sv = ns.gtreegrid.getUIValue();
                     if (item.id == "a1") {
                         if (cv == null || cv == "") {
                             linb.warn("请选择工艺类别")
                         }
                         ns.gdlg.setDisplay("block");
                         InitProcess(cv, "")
                     }
                     if (item.id == "a3") {
                         if (sv == null || sv == "") {
                             linb.warn("请选择工艺")
                         }
                         ns.gdlg.setDisplay("block");
                         InitProcess("", sv)
                     }
                     if (item.id == "a4") {
                         if (sv == null || sv == "") {
                             linb.warn("请选择工艺")
                         }
                         IDelFun("DelProcess('" + sv + "')")
                     }
                 },
                 _ctreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.ctreebar.setUIValue(item.id);
                     QueryGyList(item.id);
                 },
                 _gtreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.gtreegrid.setUIValue(row.id);
                 },
                 _cstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveProcessCate()
                     }
                     ns.cdlg.setDisplay("none");
                 },
                 _gstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveProcess()
                     }
                     ns.gdlg.setDisplay("none");
                 }
             }
         });
         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function InitProcessCate(v) {
             var o = { "ccode": v }
             var url = preurl + "/InitCate"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.cname.setValue(r.pcname)
                 ns.ccode.setValue(r.pccode)
                 ns.cid.setValue(r.id)
             }
         }
         function SaveProcessCate() {
             var url = preurl + "/SaveCate"
             var db = linb.DataBinder.getFromName("cbinder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "QueryCateList()", false)
         }
         function DelProcessCate(v) {
             var o = { "ccode": v }
             var url = preurl + "/DelCate"
             var b = AjaxExb(url, o);
             BackVad(b, "QueryCateList()", false)
         }
         function QueryCateList() {
             var url = preurl + "/QueryList";
             var b = AjaxEb(url);
             ns.ctreebar.setItems();
             var r = BackVad(b, "", false)
             if (r) {
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "caption": cel[1] });
                 }
                 ns.ctreebar.setItems(arr)
             }
         }

         function InitProcess(pv, jv) {
             var o = { "ccode": pv, "gcode": jv }
             var url = preurl + "/InitGy"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.gname.setValue(r.gname)
                 ns.gcode.setValue(r.gcode)
                 ns.gcname.setValue(r.pcname)
                 ns.gccode.setValue(r.pccode)
                 ns.gid.setValue(r.id)
             }
         }
         function SaveProcess() {
             var sv = ns.ctreebar.getUIValue();
             var url = preurl + "/SaveGy"
             var db = linb.DataBinder.getFromName("gbinder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "QueryGyList('" + sv + "')", false)
         }
         function DelProcess(v) {
             var sv = ns.ctreebar.getUIValue();
             var o = { "gcode": v }
             var url = preurl + "/DelProcess"
             var b = AjaxExb(url, o);
             BackVad(b, "QueryGyList('" + sv + "')", false)
         }
         function QueryGyList(v) {
             var url = preurl + "/QueryGyList";
             var o = { "ccode": v };
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.gtreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[0] }, { "value": cel[2] }, { "value": cel[3]}] })
                 }
                 ns.gtreegrid.setRows(arr)
             }
         }
     </script>
</body>
</html>
