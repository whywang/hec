<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>标准尺寸</title>
     <link href="../../../Styles/Common/toastr.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." /></div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/IInventory.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/INomalSize.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/toastr.js" type="text/javascript"></script>
     <script type="text/javascript">

         Class('App', 'linb.Com', {

             Instance: {

                 initialize: function () {

                     this.autoDestroy = true;

                     this.properties = {};
                 },

                 iniComponents: function () {
                     // [[code created by jsLinb UI Builder
                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "binder")
                .setName("binder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("标准尺寸")
                .setImage("../../../Image/opeimage/page.gif")
            );

                     host.pane.append(
                (new linb.UI.ToolBar)
                .setHost(host, "stoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "设置", "image": "../../../Image/opeimage/set.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "重置", "image": "../../../Image/opeimage/reset.gif"}], "caption": "grp1"}])
                .onClick("_stoolbar_onclick")
            );

                     host.pane.append(
                (new linb.UI.Layout)
                .setHost(host, "ctl_layout3")
                .setItems([{ "id": "before", "pos": "before", "min": 10, "size": 300, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            );

                     host.ctl_layout3.append(
                (new linb.UI.Block)
                .setHost(host, "ctl_block3")
                .setDock("fill")
            , "before");

                     host.ctl_block3.append(
                (new linb.UI.TreeBar)
                .setHost(host, "ptreebar")
                .setSelMode("multibycheckbox")
                .setValue("")
                .onItemSelected("_ptreebar_onitemselected")
                .beforeExpend("_ptreebar_beforeexpend")
            );

                     host.ctl_layout3.append(
                (new linb.UI.Block)
                .setHost(host, "ctl_block4")
                .setDock("fill")
            , "main");

                     host.ctl_block4.append(
                (new linb.UI.ToolBar)
                .setHost(host, "btoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增", "image": "../../../Image/opeimage/add.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑", "image": "../../../Image/opeimage/edit.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除", "image": "../../../Image/opeimage/del.gif"}], "caption": "grp1"}])
                .onClick("_btoolbar_onclick")
            );

                     host.ctl_block4.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "btreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(28)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 160, "type": "名称", "caption": "名称" }, { "id": "col2", "width": 100, "type": "input", "caption": "编码" }, { "id": "col2", "width": 100, "type": "input", "caption": "类型" }, { "id": "col3", "width": 100, "type": "input", "caption": "长" }, { "id": "col4", "width": 100, "type": "input", "caption": "宽" }, { "id": "col3", "width": 100, "type": "input", "caption": "厚" }, { "id": "col3", "width": 100, "type": "input", "caption": "辅尺" }, { "id": "col4", "width": 100, "type": "input", "caption": "数量"}])
                .setValue("")
            );

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "bdlg")
                .setLeft(200)
                .setTop(120)
                .setWidth(649)
                .setHeight(480)
                .setDisplay("none")
                .setCaption("标准尺寸")
                .setMinBtn(false)
                .setMaxBtn(false)
            );

                     host.bdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "bstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_bstoolbar_onclick")
            );

                     host.bdlg.append(
                (new linb.UI.Input)
                .setHost(host, "bname")
                .setDataBinder("binder")
                .setDataField("bname")
                .setLeft(60)
                .setTop(50)
                .setWidth(240)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#656468;bold;font-size:14px'>名称</span>")
                .setLabelHAlign("left")
            );

                     host.bdlg.append(
                (new linb.UI.Input)
                .setHost(host, "bcode")
                .setDataBinder("binder")
                .setDataField("bcode")
                .setReadonly(true)
                .setLeft(360)
                .setTop(50)
                .setWidth(240)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#656468;bold;font-size:14px'>编码</span>")
                .setLabelHAlign("left")
            );

                     host.bdlg.append(
                (new linb.UI.Input)
                .setHost(host, "bcd")
                .setDataBinder("binder")
                .setDataField("bcd")
                .setLeft(360)
                .setTop(100)
                .setWidth(240)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#656468;bold;font-size:14px'>长度</span>")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.bdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "btype")
                .setDataBinder("binder")
                .setDataField("btype")
                .setLeft(60)
                .setTop(100)
                .setWidth(225)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#656468;bold;font-size:14px'>类型</span>")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "可变", "caption": "可变" }, { "id": "固定", "caption": "固定"}])
            );

                     host.bdlg.append(
                (new linb.UI.Input)
                .setHost(host, "bhd")
                .setDataBinder("binder")
                .setDataField("bhd")
                .setLeft(360)
                .setTop(150)
                .setWidth(240)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#656468;bold;font-size:14px'>厚度</span>")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.bdlg.append(
                (new linb.UI.Input)
                .setHost(host, "bkd")
                .setDataBinder("binder")
                .setDataField("bkd")
                .setLeft(60)
                .setTop(150)
                .setWidth(240)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#656468;bold;font-size:14px'>宽度</span>")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.bdlg.append(
                (new linb.UI.Input)
                .setHost(host, "bsl")
                .setDataBinder("binder")
                .setDataField("bsl")
                .setLeft(360)
                .setTop(200)
                .setWidth(240)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#656468;bold;font-size:14px'>数量</span>")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.bdlg.append(
                (new linb.UI.Input)
                .setHost(host, "bfc")
                .setDataBinder("binder")
                .setDataField("bfc")
                .setLeft(60)
                .setTop(200)
                .setWidth(240)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#656468;bold;font-size:14px'>辅尺</span>")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.bdlg.append(
                (new linb.UI.Input)
                .setHost(host, "bid")
                .setDataBinder("binder")
                .setDataField("bid")
                .setLeft(20)
                .setTop(170)
                .setWidth(240)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
                .setLabelCaption("ID")
                .setValue("0")
            );

                     host.bdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "rtype")
                .setDataBinder("binder")
                .setDataField("rtype")
                .setLeft(60)
                .setTop(280)
                .setWidth(225)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#656468;bold;font-size:14px'>关联尺寸</span>")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "0", "caption": "否" }, { "id": "1", "caption": "是"}])
                .setValue("0")
            );

                     host.bdlg.append(
                (new linb.UI.Input)
                .setHost(host, "rgd")
                .setDataBinder("binder")
                .setDataField("rgd")
                .setLeft(60)
                .setTop(330)
                .setWidth(240)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#656468;bold;font-size:14px'>关联长度</span>")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.bdlg.append(
                (new linb.UI.Input)
                .setHost(host, "rkd")
                .setDataBinder("binder")
                .setDataField("rkd")
                .setLeft(360)
                .setTop(330)
                .setWidth(240)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#656468;bold;font-size:14px'>关联宽度</span>")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.bdlg.append(
                (new linb.UI.Input)
                .setHost(host, "rhd")
                .setDataBinder("binder")
                .setDataField("rhd")
                .setLeft(60)
                .setTop(380)
                .setWidth(240)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#656468;bold;font-size:14px'>关联厚度</span>")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.bdlg.append(
                (new linb.UI.Input)
                .setHost(host, "rsl")
                .setDataBinder("binder")
                .setDataField("rsl")
                .setLeft(360)
                .setTop(380)
                .setWidth(240)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#656468;bold;font-size:14px'>关联数量</span>")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.bdlg.append(
                (new linb.UI.SLabel)
                .setHost(host, "ls")
                .setLeft(360)
                .setTop(300)
                .setCaption("(单开门套使用关联尺寸)")
                .setCustomStyle({ "KEY": "color:red" })
            );

                     host.bdlg.append(
                (new linb.UI.Pane)
                .setHost(host, "pg")
                .setDock("width")
                .setTop(270)
                .setHeight(2)
                .setCustomStyle({ "KEY": "background:#75d579" })
            );

                     return children;
                     // ]]code created by jsLinb UI Builder
                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },

                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this;
                     preurl = "../../../UIServer/ProductionSet/NomalSizeManage/NomalSizes.aspx";
                     IinvItems("", ns.ptreebar)
                     InomalsizeList(ns.btreegrid)
                 },

                 _stoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var pv = ns.ptreebar.getUIValue();
                     var nv = ns.btreegrid.getUIValue();
                     if (item.id == "a1") {
                         if (pv == "") {
                             linb.warn("选择产品类别");
                             return
                         }
                         if (nv == "" || nv == null) {
                             linb.warn("选择减尺");
                             return
                         }
                         SetProductionNs(pv, nv)
                     }
                     if (item.id == "a3") {
                         if (pv == "") {
                             linb.warn("选择产品类别");
                             return
                         }
                         linb.confirms("重置产品标准尺寸？", "ReSetProductionNs('" + pv + "')")
                     }
                 },
                 _ptreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.ptreebar.setValue(item.id)
                     IinvCItems(item, ns.ptreebar)
                     GetProductionNs(item.id, ns.btreegrid)
                 },
                 _btoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var v = ns.btreegrid.getUIValue()
                     if (item.id == "a1") {
                         ns.bdlg.setDisplay("block")
                         InitNomalSize("")
                     }
                     if (item.id == "a3") {
                         if (v != "" && v != null) {
                             ns.bdlg.setDisplay("block")
                             InitNomalSize(v)
                         }
                         else {
                             linb.message("请选择减尺")
                         }
                     }
                     if (item.id == "a4") {
                         if (v != "" && v != null) {
                           linb.confirms("确定操作？","DelNomalSize('" + v + "')")
                         }
                         else {
                             linb.warn("请选择减尺")
                         }
                     }
                 },
                 _bstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         ns.bdlg.setDisplay("block")
                         SaveNomalSize()
                     }
                     if (item.id == "a3") {
                         ns.bdlg.setDisplay("none")
                         InitUnKj();
                     }
                 },
                 _ptreebar_beforeexpend: function (profile, item) {
                     var ns = this, uictrl = profile.boxing();
                     IinvCItems(item, ns.ptreebar)
                 }
             },
             Static: {
                 viewSize: { "width": 1024, "height": 768 }
             }
         });
         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function InitNomalSize(v) {
             var o = { "ncode": v }
             var url = preurl + "/InitNomalSize"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 InitKj(r)
             }
             else {
                 InitUnKj()
             }
         }
         function InitKj(r) {
             ns.bname.setValue(r.nname)
             ns.bcode.setValue(r.ncode)
             ns.bcd.setValue(r.ng)
             ns.btype.setValue(r.nattr)
             ns.bkd.setValue(r.nk)
             ns.bhd.setValue(r.nh)
             ns.bfc.setValue(r.nf)
             ns.bsl.setValue(r.nsl)
             ns.rkd.setValue(r.nrk)
             ns.rhd.setValue(r.nrn)
             ns.rgd.setValue(r.nrg)
             ns.rsl.setValue(r.nrsl)
             ns.rtype.setValue(r.nrelate)
             ns.bid.setValue(r.id)
         }
         function InitUnKj() {
             ns.bname.setValue()
             ns.bcode.setValue( )
             ns.bcd.setValue( )
             ns.btype.setValue( )
             ns.bkd.setValue( )
             ns.bhd.setValue()
             ns.bfc.setValue()
             ns.bsl.setValue()
             ns.bid.setValue(0)
         }
         function SaveNomalSize() {
             var url = preurl + "/SaveNomalSize"
             var db = linb.DataBinder.getFromName("binder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "Reload()", false)
         }
         function Reload() {
             QueryList();
             ns.bdlg.setDisplay("none")
         }
         function DelNomalSize(v) {
             var o = { "ncode": v }
             var url = preurl + "/DelNomalSize"
             var b = AjaxExb(url, o);
             BackVad(b, " Reload()", false)
         }
         function QueryList() {
             var url = preurl + "/QueryList";
             var b = AjaxEb(url);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.btreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[0] }, { "value": cel[2] }, { "value": cel[3] }, { "value": cel[4] }, { "value": cel[5] }, { "value": cel[6] }, { "value": cel[7] }, { "value": cel[8] }, { "value": cel[9]}] })
                 }
                 ns.btreegrid.setRows(arr)
             }
         }

        
     </script>
</body>
</html>
