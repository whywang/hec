<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>销售超标条件</title>
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/Iunit.js" type="text/javascript"></script>
     <script type="text/javascript">

         Class('App', 'linb.Com', {

             Instance: {

                 initialize: function () {

                     this.autoDestroy = true;

                     this.properties = {};
                 },

                 iniComponents: function () {
                     // [[code created by jsLinb UI Builder
                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "lbinder")
                .setName("lbinder")
            );

                     append(
                (new linb.DataBinder)
                .setHost(host, "tjbinder")
                .setName("tjbinder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("生产超标条件")
                .setImage("../../../Image/opeimage/page.gif")
            );

                     host.pane.append(
                (new linb.UI.Layout)
                .setHost(host, "ly")
                .setItems([{ "id": "before", "pos": "before", "min": 10, "size": 400, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pla")
                .setDock("fill")
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.pla.append(
                (new linb.UI.ToolBar)
                .setHost(host, "ltoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增", "image": "../../../Image/opeimage/add.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑", "image": "../../../Image/opeimage/edit.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除", "image": "../../../Image/opeimage/del.gif"}], "caption": "grp1"}])
                .onClick("_ltoolbar_onclick")
            );

                     host.pla.append(
                (new linb.UI.Pane)
                .setHost(host, "plt")
                .setDock("top")
                .setHeight(41)
            );

                     host.plt.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl1")
                .setLeft(20)
                .setTop(10)
                .setCaption("<span style='font-size:18px;color:#666666'>超标类别</span>")
            );

                     host.pla.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "ltreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(28)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 140, "type": "input", "caption": "名称" }, { "id": "col2", "width": 90, "type": "input", "caption": "编码" }, { "id": "col3", "width": 90, "type": "input", "caption": "类型"}])
                .setValue("")
                .onRowSelected("_ltreegrid_onrowselected")
            );

                     host.pla.append(
                (new linb.UI.Pane)
                .setHost(host, "pll")
                .setDock("left")
                .setWidth(12)
            );

                     host.pla.append(
                (new linb.UI.Pane)
                .setHost(host, "plr")
                .setDock("right")
                .setWidth(12)
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pda")
                .setDock("fill")
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.pda.append(
                (new linb.UI.ToolBar)
                .setHost(host, "tjtoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增", "image": "../../../Image/opeimage/add.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑", "image": "../../../Image/opeimage/edit.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除", "image": "../../../Image/opeimage/del.gif"}], "caption": "grp1"}])
                .onClick("_tjtoolbar_onclick")
            );

                     host.pda.append(
                (new linb.UI.Pane)
                .setHost(host, "pdt")
                .setDock("top")
                .setHeight(41)
            );

                     host.pdt.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl2")
                .setLeft(20)
                .setTop(10)
                .setCaption("<span style='font-size:18px;color:#666666'>超标条件</span>")
            );

                     host.pda.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "tjtreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(28)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 140, "type": "input", "caption": "类别名称" }, { "id": "col2", "width": 140, "type": "input", "caption": "名称" }, { "id": "col3", "width": 100, "type": "input", "caption": "编码" }, { "id": "col4", "width": 100, "type": "input", "caption": "属性" }, { "id": "col2", "width": 100, "type": "input", "caption": "下界" }, { "id": "col3", "width": 100, "type": "input", "caption": "上界" }, { "id": "col4", "width": 100, "type": "input", "caption": "计算方式" }, { "id": "col4", "width": 100, "type": "input", "caption": "数值"}])
                .setValue("")
                .onRowSelected("_tjtreegrid_onrowselected")
            );

                     host.pda.append(
                (new linb.UI.Pane)
                .setHost(host, "pdl")
                .setDock("left")
                .setWidth(12)
            );

                     host.pda.append(
                (new linb.UI.Pane)
                .setHost(host, "pdr")
                .setDock("right")
                .setWidth(12)
            );

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "ldlg")
                .setLeft(50)
                .setTop(136)
                .setWidth(550)
                .setHeight(234)
                .setDisplay("none")
                .setCaption("生产超标类")
                .setMinBtn(false)
                .setMaxBtn(false)
            );

                     host.ldlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "sltoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_sltoolbar_onclick")
            );

                     host.ldlg.append(
                (new linb.UI.Input)
                .setHost(host, "lname")
                .setDataBinder("lbinder")
                .setDataField("lname")
                .setLeft(80)
                .setTop(40)
                .setWidth(380)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>类名称</span>")
                .setLabelHAlign("left")
            );

                     host.ldlg.append(
                (new linb.UI.Input)
                .setHost(host, "lcode")
                .setDataBinder("lbinder")
                .setDataField("lcode")
                .setReadonly(true)
                .setLeft(80)
                .setTop(90)
                .setWidth(380)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>类编码</span>")
                .setLabelHAlign("left")
            );

                     host.ldlg.append(
                (new linb.UI.Input)
                .setHost(host, "lid")
                .setDataBinder("lbinder")
                .setDataField("lid")
                .setLeft(40)
                .setTop(90)
                .setWidth(420)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
                .setLabelCaption("编码")
                .setValue("0")
            );

                     host.ldlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "lunit")
                .setDataBinder("lbinder")
                .setDataField("lunit")
                .setLeft(80)
                .setTop(140)
                .setWidth(365)
                .setHeight(47)
                .setDisplay("none")
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>单位</span>")
                .setLabelHAlign("left")
                .setType("listbox")
            );

                     host.ldlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "ltype")
                .setDataBinder("lbinder")
                .setDataField("ltype")
                .setLeft(80)
                .setTop(140)
                .setWidth(365)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>价格类型</span>")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "cg", "caption": "生产"}])
                .setValue("cg")
            );

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "tjdlg")
                .setLeft(301)
                .setTop(111)
                .setWidth(649)
                .setHeight(399)
                .setDisplay("none")
                .setCaption("条件")
                .setMinBtn(false)
                .setMaxBtn(false)
            );

                     host.tjdlg.append(
                (new linb.UI.Pane)
                .setHost(host, "ptjm")
                .setDock("fill")
                .setCustomStyle({ "KEY": "background:#ffffff" })
            );

                     host.ptjm.append(
                (new linb.UI.Input)
                .setHost(host, "tlname")
                .setDataBinder("tjbinder")
                .setDataField("tlname")
                .setReadonly(true)
                .setLeft(50)
                .setTop(40)
                .setWidth(250)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>超标类别</span>")
                .setLabelHAlign("left")
            );

                     host.ptjm.append(
                (new linb.UI.Input)
                .setHost(host, "tsz")
                .setDataBinder("tjbinder")
                .setDataField("tsz")
                .setLeft(50)
                .setTop(190)
                .setWidth(250)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>超标价格</span>")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.ptjm.append(
                (new linb.UI.Input)
                .setHost(host, "tlcode")
                .setDataBinder("tjbinder")
                .setDataField("tlcode")
                .setReadonly(true)
                .setLeft(340)
                .setTop(40)
                .setWidth(250)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>类别编码</span>")
                .setLabelHAlign("left")
            );

                     host.ptjm.append(
                (new linb.UI.Input)
                .setHost(host, "tname")
                .setDataBinder("tjbinder")
                .setDataField("tname")
                .setLeft(50)
                .setTop(90)
                .setWidth(250)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>条件名称</span>")
                .setLabelHAlign("left")
            );

                     host.ptjm.append(
                (new linb.UI.Input)
                .setHost(host, "tcode")
                .setDataBinder("tjbinder")
                .setDataField("tcode")
                .setReadonly(true)
                .setLeft(340)
                .setTop(90)
                .setWidth(250)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>条件编码</span>")
                .setLabelHAlign("left")
            );

                     host.ptjm.append(
                (new linb.UI.Input)
                .setHost(host, "tbvalue")
                .setDataBinder("tjbinder")
                .setDataField("tbvalue")
                .setLeft(50)
                .setTop(140)
                .setWidth(250)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>范围下界</span>")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.ptjm.append(
                (new linb.UI.Input)
                .setHost(host, "ttvalue")
                .setDataBinder("tjbinder")
                .setDataField("ttvalue")
                .setLeft(340)
                .setTop(140)
                .setWidth(250)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>范围上界</span>")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.ptjm.append(
                (new linb.UI.ToolBar)
                .setHost(host, "stjtoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_stjtoolbar_onclick")
            );

                     host.ptjm.append(
                (new linb.UI.Input)
                .setHost(host, "txs")
                .setDataBinder("tjbinder")
                .setDataField("txs")
                .setLeft(340)
                .setTop(190)
                .setWidth(250)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>超标系数</span>")
                .setLabelHAlign("left")
                .setValue("1")
            );

                     host.ptjm.append(
                (new linb.UI.Input)
                .setHost(host, "tid")
                .setDataBinder("tjbinder")
                .setDataField("tid")
                .setLeft(280)
                .setTop(170)
                .setWidth(250)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
                .setLabelCaption("系数")
                .setValue("0")
            );

                     host.ptjm.append(
                (new linb.UI.ComboInput)
                .setHost(host, "tattr")
                .setDataBinder("tjbinder")
                .setDataField("tattr")
                .setLeft(50)
                .setTop(240)
                .setWidth(235)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>超标属性</span>")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "H", "caption": "高" }, { "id": "K", "caption": "宽" }, { "id": "D", "caption": "厚"}])
            );

                     host.ptjm.append(
                (new linb.UI.ComboInput)
                .setHost(host, "tjs")
                .setDataBinder("tjbinder")
                .setDataField("tjs")
                .setLeft(340)
                .setTop(240)
                .setWidth(235)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>超标计算类型</span>")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "dj", "caption": "单价" }, { "id": "bl", "caption": "比例" }, { "id": "fw", "caption": "范围"}])
            );

                     host.ptjm.append(
                (new linb.UI.ComboInput)
                .setHost(host, "tprice")
                .setDataBinder("tjbinder")
                .setDataField("tprice")
                .setLeft(50)
                .setTop(290)
                .setWidth(235)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>价格类型</span>")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "单价", "caption": "单价" }, { "id": "总额", "caption": "总额"}])
            );

                     host.ptjm.append(
                (new linb.UI.ComboInput)
                .setHost(host, "ttype")
                .setDataBinder("tjbinder")
                .setDataField("ttype")
                .setLeft(280)
                .setTop(250)
                .setWidth(235)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
                .setLabelCaption("类型")
                .setType("listbox")
            );

                     host.ptjm.append(
                (new linb.UI.ComboInput)
                .setHost(host, "tcity")
                .setDataBinder("tjbinder")
                .setDataField("tcity")
                .setLeft(340)
                .setTop(290)
                .setWidth(235)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px ;color:#666666'>城市类型</span>")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "bj", "caption": "北京" }, { "id": "wb", "caption": "外埠"}])
            );

                     host.ptjm.append(
                (new linb.UI.Pane)
                .setHost(host, "ptjl")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            );

                     host.ptjm.append(
                (new linb.UI.Pane)
                .setHost(host, "ptjr")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            );

                     return children;
                     // ]]code created by jsLinb UI Builder
                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },

                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this;
                     preurl = "../../../UIServer/ProductionSet/OverConditionManage/CgOverCondition.aspx";
                     QueryListOcl()
                 },

                 _ltoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var v = ns.ltreegrid.getUIValue()
                     if (item.id == "a1") {
                         ns.ldlg.setDisplay("block")
                         IunitNItems(ns.lunit)
                         InitOcl("")
                     }
                     if (item.id == "a3") {
                         if (v != null && v != "") {
                             ns.ldlg.setDisplay("block")
                             IunitNItems(ns.lunit)
                             InitOcl(v)
                         }
                         else {
                             linb.message("请选择产品超标类")
                         }
                     }
                     if (item.id == "a4") {
                         if (v != null && v != "") {
                             IDelFun("DelOcl('" + v + "')")
                         }
                         else {
                             linb.message("请选择产品超标类别")
                         }
                     }
                 },
                 _ltreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.ltreegrid.setValue(row.id)
                     QueryListOc(row.id)
                 },
                 _sltoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         ns.ldlg.setDisplay("block")
                         SaveOcl();
                     }
                     if (item.id == "a3") {
                         ns.ldlg.setDisplay("none")
                         InitUnKj();
                     }
                 },
                 _tjtoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var v = ns.ltreegrid.getUIValue()
                     var tv = ns.tjtreegrid.getUIValue()
                     if (item.id == "a1") {
                         if (v != null && v != "") {
                             ns.tjdlg.setDisplay("block")
                             InitOc(v, "")
                         }
                         else {
                             linb.message("请选择产品超标条件")
                         }
                     }
                     if (item.id == "a3") {
                         if (tv != null && tv != "") {
                             ns.tjdlg.setDisplay("block")
                             InitOc("", tv)
                         }
                         else {
                             linb.message("请选择产品超标条件")
                         }
                     }
                     if (item.id == "a4") {
                         if (tv != null && tv != "") {
                             IDelFun("DelOc('" + tv + "')")
                         }
                         else {
                             linb.message("请选择产品超标条件")
                         }
                     }
                 },
                 _tjtreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.tjtreegrid.setValue(row.id)
                 },
                 _stjtoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         ns.tjdlg.setDisplay("block")
                         SaveOc();
                     }
                     if (item.id == "a3") {
                         ns.tjdlg.setDisplay("none")
                         InitUnKj();
                     }
                 }
             },
             Static: {
                 viewSize: { "width": 1024, "height": 768 }
             }
         });
         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function InitOcl(v) {
             var o = { "ocode": v }
             var url = preurl + "/InitOverConditionCate"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.lname.setValue(r.oname)
                 ns.lcode.setValue(r.ocode)
                 ns.lunit.setValue(r.ounit)
                 ns.ltype.setValue(r.otype)
                 ns.lid.setValue(r.id)
             }
         }
         function SaveOcl() {
             var url = preurl + "/SaveOverConditionCate"
             var db = linb.DataBinder.getFromName("lbinder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "", true)
         }
         function DelOcl(v) {
             var o = { "ocode": v }
             var url = preurl + "/DelOverConditionCate"
             var b = AjaxExb(url, o);
             BackVad(b, "", true)
         }
         function QueryListOcl() {
             var url = preurl + "/QueryListCate";
             var b = AjaxEb(url);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.ltreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[0] }, { "value": cel[2] }, { "value": cel[3] }, { "value": cel[4] }, { "value": cel[5] }, { "value": cel[6] }, { "value": cel[7] }, { "value": cel[8] }, { "value": cel[9]}] })
                 }
                 ns.ltreegrid.setRows(arr)
             }
         }

         function InitOc(v, tv) {
             var o = { "ocode": v, "ccode": tv }
             var url = preurl + "/InitOverCondition"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.tlname.setValue(r.oname)
                 ns.tlcode.setValue(r.ocode)
                 ns.tname.setValue(r.cname)
                 ns.tcode.setValue(r.ccode)
                 ns.tbvalue.setValue(r.bvalue)
                 ns.ttvalue.setValue(r.tvalue)
                 ns.tsz.setValue(r.cfscale)
                 ns.txs.setValue(r.cxs)
                 ns.tattr.setValue(r.cattr)
                 ns.tjs.setValue(r.cfstr)
                 ns.tcity.setValue(r.pcity)
                 ns.tprice.setValue(r.cpricetype)
                 ns.tid.setValue(r.id)
             }
         }
         function SaveOc() {
             var lv = ns.tlcode.getUIValue()
             var url = preurl + "/SaveOverCondition"
             var db = linb.DataBinder.getFromName("tjbinder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "innerfun('" + lv + "')", false)
         }
         function DelOc(v) {
             var lv = ns.ltreegrid.getUIValue()
             var o = { "ccode": v }
             var url = preurl + "/DelOverCondition"
             var b = AjaxExb(url, o);
             BackVad(b, "innerfun('" + lv + "')", false)
         }
         function QueryListOc(lv) {
             var url = preurl + "/QueryList";
             var o = { "ocode": lv }
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.tjtreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[2] }, { "value": cel[0] }, { "value": cel[3] }, { "value": cel[4] }, { "value": cel[5] }, { "value": cel[6] }, { "value": cel[7] }, { "value": cel[8] }, { "value": cel[9]}] })
                 }
                 ns.tjtreegrid.setRows(arr)
             }
         }
         function innerfun(lv) {
             QueryListOc(lv);
             ns.tjdlg.setDisplay("none")
         }
     </script>
</body>
</html>
