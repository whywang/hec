<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>标准尺寸</title>
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/IInventory.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/INomalSize.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/ISaleDiscount.js" type="text/javascript"></script>
     <script type="text/javascript">

         Class('App', 'linb.Com', {

             Instance: {

                 initialize: function () {

                     this.autoDestroy = true;

                     this.properties = {};
                 },

                 iniComponents: function () {
                     // [[code created by jsLinb UI Builder
                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "tbinder")
                .setName("tbinder")
            );

                     append(
                (new linb.DataBinder)
                .setHost(host, "lbinder")
                .setName("lbinder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("特价产品管理")
                .setImage("../../../Image/opeimage/page.gif")
            );

                     host.pane.append(
                (new linb.UI.Tabs)
                .setHost(host, "tab")
                .setItems([{ "id": "a", "caption": "特价产品" }, { "id": "b", "caption": "特价设置" }, { "id": "c", "caption": "产品品类"}])
                .setValue("a")
                .onItemSelected("_tab_onitemselected")
            );

                     host.tab.append(
                (new linb.UI.Layout)
                .setHost(host, "ly")
                .setItems([{ "id": "before1", "pos": "before", "min": 10, "size": 300, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "before", "pos": "before", "min": 10, "size": 300, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            , "b");

                     host.ly.append(
                (new linb.UI.TreeBar)
                .setHost(host, "itreebar")
                .setItems([{ "id": "node1", "sub": ["node11", { "id": "node12", "image": "img/demo.gif" }, "node13", "node14"], "caption": "node1" }, { "id": "node2", "sub": ["node21", "node22", "node23", "node24"], "caption": "node2"}])
                .onItemSelected("_itreebar_onitemselected")
                .beforeExpend("_itreebar_beforeexpend")
            , "before");

                     host.ly.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "ptreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(28)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 120, "type": "input", "caption": "产品名称" }, { "id": "col2", "width": 80, "type": "input", "caption": "产品编码" }, { "id": "col3", "width": 140, "type": "input", "caption": "产品材质"}])
                .setRows({})
                .setValue("")
                .onRowSelected("_ptreegrid_onrowselected")
            , "main");

                     host.ly.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "tptreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(28)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 200, "type": "input", "caption": "特价产品"}])
                .setRows({})
                .setValue("")
                .onRowSelected("_tptreegrid_onrowselected")
            , "before1");

                     host.tab.append(
                (new linb.UI.ToolBar)
                .setHost(host, "stoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "设置" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "重置"}], "caption": "grp1"}])
                .onClick("_stoolbar_onclick")
            , "b");

                     host.tab.append(
                (new linb.UI.Layout)
                .setHost(host, "lyp")
                .setItems([{ "id": "before", "pos": "before", "min": 10, "size": 300, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            , "c");

                     host.lyp.append(
                (new linb.UI.ToolBar)
                .setHost(host, "ltoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除"}], "caption": "grp1"}])
                .onClick("_ltoolbar_onclick")
            , "before");

                     host.lyp.append(
                (new linb.UI.Pane)
                .setHost(host, "b1")
                .setDock("top")
                .setHeight(35)
                .setCustomStyle({ "KEY": "border:1px solid #cccccc;background:#bdfbcd" })
            , "main");

                     host.b1.append(
                (new linb.UI.SLabel)
                .setHost(host, "s1")
                .setLeft(20)
                .setTop(10)
                .setCaption("产品类别")
            );

                     host.lyp.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "lbtreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(28)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 130, "type": "input", "caption": "类别" }, { "id": "col2", "width": 80, "type": "input", "caption": "编码"}])
                .setRows({})
                .setValue("")
                .onRowSelected("_lbtreegrid_onrowselected")
            , "before");

                     host.lyp.append(
                (new linb.UI.TreeBar)
                .setHost(host, "ittreebar")
                .setSelMode("multibycheckbox")
                .setValue("")
                .onItemSelected("_ittreebar_onitemselected")
                .beforeExpend("_ittreebar_beforeexpend")
            , "main");

                     host.tab.append(
                (new linb.UI.ToolBar)
                .setHost(host, "lstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "设置" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "重置"}], "caption": "grp1"}])
                .onClick("_lstoolbar_onclick")
            , "c");

                     host.tab.append(
                (new linb.UI.Dialog)
                .setHost(host, "pldlg")
                .setLeft(130)
                .setTop(110)
                .setWidth(510)
                .setHeight(180)
                .setDisplay("none")
                .setCaption("产品类别")
                .setMinBtn(false)
                .setMaxBtn(false)
            , "c");

                     host.pldlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "lbstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_lbstoolbar_onclick")
            );

                     host.pldlg.append(
                (new linb.UI.Input)
                .setHost(host, "lbname")
                .setDataBinder("lbinder")
                .setDataField("lbname")
                .setLeft(50)
                .setTop(50)
                .setWidth(330)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("类别名称")
            );

                     host.pldlg.append(
                (new linb.UI.Input)
                .setHost(host, "lbcode")
                .setDataBinder("lbinder")
                .setDataField("lbcode")
                .setReadonly(true)
                .setLeft(50)
                .setTop(100)
                .setWidth(330)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("类别编码")
            );

                     host.pldlg.append(
                (new linb.UI.Input)
                .setHost(host, "lbid")
                .setDataBinder("lbinder")
                .setDataField("lbid")
                .setLeft(50)
                .setTop(150)
                .setWidth(330)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
                .setValue("0")
            );

                     host.tab.append(
                (new linb.UI.ToolBar)
                .setHost(host, "toolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除"}], "caption": "grp1"}])
                .onClick("_toolbar_onclick")
            , "a");

                     host.tab.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "ttreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(28)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 120, "type": "input", "caption": "名称" }, { "id": "col2", "width": 120, "type": "input", "caption": "编码" }, { "id": "col3", "width": 120, "type": "input", "caption": "区域" }, { "id": "col4", "width": 140, "type": "input", "caption": "有效期" }, { "id": "col4", "width": 140, "type": "input", "caption": "有效期" }, { "id": "col4", "width": 120, "type": "input", "caption": "北京价格" }, { "id": "col4", "width": 120, "type": "input", "caption": "外埠价格"}])
                .setValue("")
                .onRowSelected("_ttreegrid_onrowselected")
            , "a");

                     host.tab.append(
                (new linb.UI.Dialog)
                .setHost(host, "tdlg")
                .setLeft(106)
                .setTop(70)
                .setWidth(656)
                .setHeight(480)
                .setDisplay("none")
                .setCaption("特价产品")
                .setMinBtn(false)
                .setMaxBtn(false)
            , "a");

                     host.tdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "tstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_tstoolbar_onclick")
            );

                     host.tdlg.append(
                (new linb.UI.Input)
                .setHost(host, "tname")
                .setDataBinder("tbinder")
                .setDataField("tname")
                .setLeft(30)
                .setTop(100)
                .setWidth(280)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;称")
            );

                     host.tdlg.append(
                (new linb.UI.Input)
                .setHost(host, "tcode")
                .setDataBinder("tbinder")
                .setDataField("tcode")
                .setReadonly(true)
                .setLeft(310)
                .setTop(100)
                .setWidth(280)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("编&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;码")
            );

                     host.tdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "tarea")
                .setDataBinder("tbinder")
                .setDataField("tarea")
                .setLeft(30)
                .setTop(150)
                .setWidth(265)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("区&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;域")
                .setType("listbox")
                .setItems([{ "id": "bj", "caption": "北京" }, { "id": "wb", "caption": "外阜" }, { "id": "qb", "caption": "全部"}])
            );

                     host.tdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "tctype")
                .setDataBinder("tbinder")
                .setDataField("tctype")
                .setLeft(310)
                .setTop(150)
                .setWidth(265)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("条件类别")
                .setType("listbox")
                .setItems([{ "id": "wtj", "caption": "正常" }, { "id": "cplb", "caption": "产品类别"}])
            );

                     host.tdlg.append(
                (new linb.UI.Input)
                .setHost(host, "bjprice")
                .setDataBinder("tbinder")
                .setDataField("bjprice")
                .setLeft(30)
                .setTop(200)
                .setWidth(280)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("北京价格")
                .setValue("0")
            );

                     host.tdlg.append(
                (new linb.UI.Input)
                .setHost(host, "wfprice")
                .setDataBinder("tbinder")
                .setDataField("wfprice")
                .setLeft(310)
                .setTop(200)
                .setWidth(280)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("外阜价格")
                .setValue("0")
            );

                     host.tdlg.append(
                (new linb.UI.Input)
                .setHost(host, "tid")
                .setDataBinder("tbinder")
                .setDataField("tid")
                .setLeft(310)
                .setTop(150)
                .setWidth(280)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
                .setLabelCaption("ID")
                .setValue("0")
            );

                     host.tdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "edate")
                .setDataBinder("tbinder")
                .setDataField("edate")
                .setLeft(310)
                .setTop(250)
                .setWidth(265)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("截止日期")
                .setType("date")
            );

                     host.tdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "bdate")
                .setDataBinder("tbinder")
                .setDataField("bdate")
                .setLeft(30)
                .setTop(250)
                .setWidth(265)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("起始日期")
                .setType("date")
            );

                     host.tdlg.append(
                (new linb.UI.Group)
                .setHost(host, "g1")
                .setLeft(50)
                .setTop(290)
                .setWidth(540)
                .setHeight(140)
                .setCaption("执行条件")
                .setToggleBtn(false)
            );

                     host.g1.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "zxttreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 200, "type": "input", "caption": "类别"}])
                .setValue("")
            );

                     host.tdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "acode")
                .setDataBinder("tbinder")
                .setDataField("acode")
                .setLeft(30)
                .setTop(50)
                .setWidth(265)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("活动名称")
                .setType("listbox")
                .setItems([{ "id": "bj", "caption": "北京" }, { "id": "wb", "caption": "外阜" }, { "id": "qb", "caption": "全部"}])
            );

                     return children;
                     // ]]code created by jsLinb UI Builder
                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },

                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this;
                 },
                 _toolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var stv = ns.ttreegrid.getUIValue();
                     if (item.id == "a1") {
                         ns.tdlg.setDisplay("block");
                         RefQueryTjCate();
                         InitTjProduction("");

                     }
                     if (item.id == "a3") {
                         if (stv == null || stv == "") {
                             linb.message("选择特价产品");
                             return;
                         }
                         ns.tdlg.setDisplay("block");
                         RefQueryTjCate();
                         InitTjProduction(stv)

                     }
                     if (item.id == "a4") {
                         if (stv == null || stv == "") {
                             linb.message("选择特价产品");
                             return;
                         }
                         IDoFun("确定删除记录？", "DelTjProduction('" + stv + "')")
                     }
                 },
                 _stoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var tv = ns.tptreegrid.getUIValue();
                     var iv = ns.itreebar.getUIValue();
                     var pv = ns.ptreegrid.getUIValue();
                     if (tv == null || tv == "") {
                         linb.message("请选择特价产品");
                         return;
                     }
                     if (iv == null || iv == "") {
                         linb.message("请择选产品类别");
                         return;
                     }
                     if (item.id == "a1") {
                         if (pv == null || pv == "") {
                             linb.message("请择选产品");
                             return;
                         }
                         SetTjProduction(tv, iv, pv)
                     }
                     if (item.id == "a3") {
                         IDoFun("确定重置？", "ReSetTjProduction('" + tv + "','" + iv + "')")
                     }
                 },
                 _lstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var tv = ns.lbtreegrid.getUIValue();
                     var iiv = ns.ittreebar.getUIValue();
                     if (tv == null || tv == "") {
                         linb.message("请选择特价类别");
                         return;
                     }
                     if (item.id == "a1") {
                         if (iiv == null || iiv == "") {
                             linb.message("请择选产品类别");
                             return;
                         }
                         SetCatePCate(tv, iiv)
                     }
                     if (item.id == "a3") {
                         IDoFun("确定重置？", "ReSetCatePCate('" + tv + "')")
                     }
                 },
                 _tstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         if (!CheckInput(ns, ns.acode, true, "", "活动名称不能为空！", "", "", "")) {
                             return
                         }
                         if (!CheckInput(ns, ns.tname, true, "", "特价名称不能为空！", "", "", "")) {
                             return
                         }
                         if (!CheckInput(ns, ns.tctype, true, "", "条件类别不能为空！", "", "", "")) {
                             return
                         }
                         if (!CheckInput(ns, ns.bdate, true, "date", "起始日期不能为空！", "", "", "")) {
                             return
                         }
                         if (!CheckInput(ns, ns.edate, true, "date", "截止日期不能为空！", "", "", "")) {
                             return
                         }
                         SaveTjProduction();
                     }
                     else {
                         ns.tdlg.setDisplay("none");
                     }
                 },
                 _ltoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var stv = ns.lbtreegrid.getUIValue();
                     if (item.id == "a1") {
                         ns.pldlg.setDisplay("block")
                         InitTjCate("")
                     }
                     if (item.id == "a3") {
                         if (stv == null || stv == "") {
                             linb.message("选择产品类别");
                             return;
                         }
                         ns.pldlg.setDisplay("block");
                         InitTjCate(stv);
                     }
                     if (item.id == "a4") {
                         if (stv == null || stv == "") {
                             linb.message("选择产品类别");
                             return;
                         }
                         IDoFun("确定删除记录？", "DelTjCate('" + stv + "')")
                     }
                 },
                 _lbstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         if (!CheckInput(ns, ns.lbname, true, "", "特价名称类别不能为空！", "", "", "")) {
                             return
                         }
                         SaveTjCate();
                     }
                     else {
                         ns.tdlg.setDisplay("none");
                     }
                 },
                 _ttreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.ttreegrid.setValue(row.id)
                 },
                 _tptreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.tptreegrid.setValue(row.id);
                     var iv = ns.itreebar.getUIValue();
                     if (iv != null && iv != "") {
                         GetTjProduction(row.id, iv);
                     }
                 },
                 _itreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     IinvCItems(item, ns.itreebar);
                     QueryListInv(item.id, ns.ptreegrid);
                     var tv = ns.tptreegrid.getUIValue();
                     if (tv != null && tv != "") {
                         GetTjProduction(tv, item.id);
                     }
                 },
                 _itreebar_beforeexpend: function (profile, item) {
                     var ns = this, uictrl = profile.boxing();
                     IinvCItems(item, ns.itreebar);
                 },
                 _ptreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                 },
                 _lbtreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.lbtreegrid.setValue(row.id);
                     GetCatePCate(row.id);
                 },
                 _ittreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                 },
                 _ittreebar_beforeexpend: function (profile, item) {
                     var ns = this, uictrl = profile.boxing();
                 },
                 _tab_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a") {
                         QueryTjProductionList();
                         DropDisListAll(ns.acode)
                     }
                     if (item.id == "b") {
                         QueryTjProdList();
                         IinvItems("", ns.itreebar);
                     }
                     if (item.id == "c") {
                         QueryTjCateList();
                         IinvItems("", ns.ittreebar);
                     }
                 }
             },
             Static: {
                 viewSize: { "width": 1024, "height": 768 }
             }
         });
         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function QueryTjProductionList() {
             var url ="../../../SpecialOffer/QueryTjProductionList";
             var b = AjaxEb(url);
             ns.ttreegrid.removeAllRows();
             var r = BackVad(b, "", false)
             if (r) {
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[0] }, { "value": cel[2] }, { "value": cel[3] }, { "value": cel[4] }, { "value": cel[6] }, { "value": cel[7]}] })
                 }
                 ns.ttreegrid.setRows(arr)
             }
         }
         function InitTjProduction(v) {
             var o = { "tjpcode": v }
             var url = "../../../SpecialOffer/InitTjProduction"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.acode.setValue(r.acode)
                 ns.tname.setValue(r.tjname)
                 ns.tcode.setValue(r.tjcode)
                 ns.tid.setValue(r.id)
                 ns.tarea.setValue(r.tjarea)
                 ns.tctype.setValue(r.ctype)
                 ns.bjprice.setValue(r.bjprice)
                 ns.wfprice.setValue(r.wfprice)
                 ns.bdate.setValue(r.bdate)
                 ns.edate.setValue(r.edate)
                 ns.edate.setValue(r.edate)
                 ns.zxttreegrid.setValue(r.econdition)
             }
         }
         function SaveTjProduction() {
             var cjv = ns.zxttreegrid.getUIValue();
             var arg1 = { "ttj": cjv}
             var url = "../../../SpecialOffer/SaveTjProduction"
             var db = linb.DataBinder.getFromName("tbinder");
             var arg2 = db.updateDataFromUI().getData();
             var o = $.extend(arg1, arg2);
             var b = AjaxExb(url, o)
             BackVad(b, "  QueryTjProductionList()", false);
             ns.tdlg.setDisplay("none");
         }
         function DelTjProduction(v) {
             var o = { "tjpcode": v }
             var url = "../../../SpecialOffer/DelTjProduction"
             var b = AjaxExb(url, o);
             BackVad(b, "QueryTjProductionList()", false)
         }
         function QueryTjProdList() {
             var url = "../../../SpecialOffer/QueryTjProductionList";
             var b = AjaxEb(url);
             ns.tptreegrid.removeAllRows();
             var r = BackVad(b, "", false)
             if (r) {
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }] })
                 }
                 ns.tptreegrid.setRows(arr)
             }
         }

         function InitTjCate(v) {
             var o = { "tlcode": v  }
             var url = "../../../SpecialOffer/InitTjCate"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.lbname.setValue(r.tjlbname)
                 ns.lbcode.setValue(r.tjlbcode)
                 ns.lbid.setValue(r.id)
             }
         }
         function SaveTjCate() {
             var url = "../../../SpecialOffer/SaveTjCate"
             var db = linb.DataBinder.getFromName("lbinder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "QueryTjCateList()", false);
             ns.pldlg.setDisplay("none");
         }
         function QueryTjCateList() {
             var url = "../../../SpecialOffer/QueryTjCateList";
             var b = AjaxEb(url);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.lbtreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[0] }] })
                 }
                 ns.lbtreegrid.setRows(arr)
             }
         }
         function RefQueryTjCate() {
             var url = "../../../SpecialOffer/QueryTjCateList";
             var b = AjaxEb(url);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.zxttreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[0]}] })
                 }
                 ns.zxttreegrid.setRows(arr)
             }
         }
         function DelTjCate(v) {
             var o = { "tlcode": v }
             var url = "../../../SpecialOffer/DelTjCate"
             var b = AjaxExb(url, o);
             BackVad(b, " QueryTjCateList()", false)
         }

         function SetTjProduction(tpv, iv,pv) {
             var o = {"tjcode":tpv, "icode": iv, "pcode": pv }
             var url = "../../../SpecialOffer/SetCateProduction"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
         }
         function ReSetTjProduction(tpv, iv) {
             var o = { "tjcode": tpv, "icode": iv }
             var url = "../../../SpecialOffer/ReSetCateProduction"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false);
             ns.ptreegrid.setValue();
         }
         function GetTjProduction(tpv,iv) {
             var o = { "tjcode": tpv, "icode": iv }
             var url = "../../../SpecialOffer/GetCateProduction"
             var b = AjaxExb(url, o);
             if (b) {
                 ns.ptreegrid.setValue(b);
             }
             else {
                 linb.message("未设置条件类别");
                 ns.ptreegrid.setValue("")
             }
         }

         function SetCatePCate(lv, icv) {
             var o = { "ccode": lv, "icode": icv }
             var url = "../../../SpecialOffer/SetCatePCate"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
         }
         function ReSetCatePCate(lv) {
             var o = { "ccode": lv  }
             var url = "../../../SpecialOffer/ReSetCatePCate"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
         }
         function GetCatePCate(lv) {
             var o = { "ccode": lv }
             var url = "../../../SpecialOffer/GetCatePCate"
             var b = AjaxExb(url, o);
             if (b) {
                 ns.ittreebar.setValue(b);
             }
             else {
                 linb.message("未设置条件类别");
                 ns.ittreebar.setValue()
             }
         }
     </script>
</body>
</html>
