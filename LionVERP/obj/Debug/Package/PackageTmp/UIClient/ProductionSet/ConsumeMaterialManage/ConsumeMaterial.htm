<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>色板管理</title>
    <link href="../../../Styles/Common/toastr.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." /></div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/IColorPane.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/toastr.js" type="text/javascript"></script>
     <script type="text/javascript">

         Class('App', 'linb.Com', {

             Instance: {

                 initialize: function () {

                     this.autoDestroy = true;

                     this.properties = {};
                 },

                 iniComponents: function () {
                     // [[code created by jsLinb UI Builder
                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "cbinder")
                .setName("cbinder")
            );

                     append(
                (new linb.DataBinder)
                .setHost(host, "mbinder")
                .setName("mbinder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("材料管理")
            );

                     host.pane.append(
                (new linb.UI.Layout)
                .setHost(host, "ly")
                .setItems([{ "id": "before", "pos": "before", "min": 10, "size": 350, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            );

                     host.ly.append(
                (new linb.UI.ToolBar)
                .setHost(host, "ctoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除"}], "caption": "grp1"}])
                .onClick("_ctoolbar_onclick")
            , "before");

                     host.ly.append(
                (new linb.UI.ToolBar)
                .setHost(host, "mtoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除"}], "caption": "grp1"}])
                .onClick("_mtoolbar_onclick")
            , "main");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pct")
                .setDock("top")
                .setHeight(41)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.pct.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl1")
                .setLeft(20)
                .setTop(10)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#666666'>材料类别</span>")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pcl")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pcr")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pcm")
                .setDock("fill")
                .setCustomStyle({ "KEY": "background:#ffffff" })
            , "before");

                     host.pcm.append(
                (new linb.UI.TreeBar)
                .setHost(host, "ctreebar")
                 .onItemSelected("_ctreebar_onitemselected")
                .beforeExpend("_ctreebar_beforeexpend")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pmt")
                .setDock("top")
                .setHeight(41)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.pmt.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl2")
                .setLeft(20)
                .setTop(10)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#666666'>材料</span>")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pml")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pmr")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pmm")
                .setDock("fill")
                .setCustomStyle({ "KEY": "background:#ffffff" })
            , "main");

                     host.pmm.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "mtreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
               .setHeader([{ "id": "col1", "width": 160, "type": "input", "caption": "材料" }, { "id": "col3", "width": 100, "type": "input", "caption": "类别" }, { "id": "col4", "width": 100, "type": "input", "caption": "高" }, { "id": "col4", "width": 100, "type": "input", "caption": "宽" }, { "id": "col4", "width": 100, "type": "input", "caption": "厚" }, { "id": "col4", "width": 100, "type": "input", "caption": "单位"}])
                .setValue("")
                .onRowSelected("_mtreegrid_onrowselected")
            );

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "cdlg")
                .setLeft(150)
                .setTop(120)
                .setWidth(560)
                .setHeight(220)
                .setCaption("材料类别")
                .setMinBtn(false)
                .setMaxBtn(false)
                .setDisplay("none")
            );

                     host.cdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "cstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_cstoolbar_onclick")
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "cname")
                .setDataBinder("cbinder")
                .setDataField("cname")
                .setLeft(50)
                .setTop(50)
                .setWidth(210)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("类别名称")
                .setLabelHAlign("left")
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "ccode")
                .setDataBinder("cbinder")
                .setDataField("ccode")
                .setReadonly(true)
                .setLeft(290)
                .setTop(50)
                .setWidth(210)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("类别编码")
                .setLabelHAlign("left")
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "pcname")
                .setDataBinder("cbinder")
                .setDataField("pcname")
                .setReadonly(true)
                .setLeft(50)
                .setTop(100)
                .setWidth(210)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("上级类别")
                .setLabelHAlign("left")
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "pccode")
                .setDataBinder("cbinder")
                .setDataField("pccode")
                .setReadonly(true)
                .setLeft(290)
                .setTop(100)
                .setWidth(210)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("上级编码")
                .setLabelHAlign("left")
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "cid")
                .setDataBinder("cbinder")
                .setDataField("cid")
                .setReadonly(true)
                .setLeft(160)
                .setTop(130)
                .setWidth(210)
                .setHeight(47)
                .setDisplay("none")
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("id")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "mdlg")
                .setLeft(280)
                .setTop(130)
                .setWidth(650)
                .setHeight(320)
                .setCaption("材料")
                .setMinBtn(false)
                .setMaxBtn(false)
                .setDisplay("none")
            );

                     host.mdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "mstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_mstoolbar_onclick")
            );

                     host.mdlg.append(
                (new linb.UI.Input)
                .setHost(host, "mname")
                .setDataBinder("mbinder")
                .setDataField("mname")
                .setLeft(50)
                .setTop(50)
                .setWidth(250)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("材料名称")
                .setLabelHAlign("left")
            );

                     host.mdlg.append(
                (new linb.UI.Input)
                .setHost(host, "mcode")
                .setDataBinder("mbinder")
                .setDataField("mcode")
                .setReadonly(true)
                .setLeft(350)
                .setTop(50)
                .setWidth(250)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("材料编码")
                .setLabelHAlign("left")
            );

                     host.mdlg.append(
                (new linb.UI.Input)
                .setHost(host, "pmname")
                .setDataBinder("mbinder")
                .setDataField("pmname")
                .setReadonly(true)
                .setLeft(50)
                .setTop(100)
                .setWidth(250)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("类别名称")
                .setLabelHAlign("left")
            );

                     host.mdlg.append(
                (new linb.UI.Input)
                .setHost(host, "pmcode")
                .setDataBinder("mbinder")
                .setDataField("pmcode")
                .setReadonly(true)
                .setLeft(350)
                .setTop(100)
                .setWidth(250)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("类别编码")
                .setLabelHAlign("left")
            );

                     host.mdlg.append(
                (new linb.UI.Input)
                .setHost(host, "mc")
                .setDataBinder("mbinder")
                .setDataField("mc")
                .setLeft(50)
                .setTop(150)
                .setWidth(250)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("长")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.mdlg.append(
                (new linb.UI.Input)
                .setHost(host, "mk")
                .setDataBinder("mbinder")
                .setDataField("mk")
                .setLeft(350)
                .setTop(150)
                .setWidth(250)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("宽")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.mdlg.append(
                (new linb.UI.Input)
                .setHost(host, "mh")
                .setDataBinder("mbinder")
                .setDataField("mh")
                .setLeft(50)
                .setTop(200)
                .setWidth(250)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("厚")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.mdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "munit")
                .setDataBinder("mbinder")
                .setDataField("munit")
                .setLeft(350)
                .setTop(200)
                .setWidth(235)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("单位")
                .setLabelHAlign("left")
                .setItems([{ "id": "m", "caption": "米" }, { "id": "㎡", "caption": "平米" }, { "id": "个", "caption": "个" }, { "id": "根", "caption": "根" }, { "id": "张", "caption": "张"}])
            );

                     host.mdlg.append(
                (new linb.UI.Input)
                .setHost(host, "mid")
                .setDataBinder("mbinder")
                .setDataField("mid")
                .setLeft(100)
                .setTop(260)
                .setWidth(250)
                .setHeight(47)
                .setDisplay("none")
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("id")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     return children;
                     // ]]code created by jsLinb UI Builder
                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },

                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this;
                     preurl = "../../../ConsumeMaterial";
                     ICateItems("", ns.ctreebar);
                 },

                 _ctoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var sv = ns.ctreebar.getUIValue();
                     if (item.id == "a1") {
                         ns.cdlg.setDisplay("block");
                         InitCate(sv, "")
                     }
                     if (item.id == "a3") {
                         if (sv != null && sv != "") {
                             ns.cdlg.setDisplay("block");
                             InitCate("", sv)
                         }
                         else {
                             linb.warn("请选择材料类别")
                         }
                     }
                     if (item.id == "a4") {
                         if (sv != null && sv != "") {
                             linb.confirms("DelCate('" + sv + "')")
                         }
                         else {
                             linb.warn("请选择工艺类别")
                         }
                     }
                 },
                 _ctreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ICateCItems(item, ns.ctreebar);
                     ns.ctreebar.setUIValue(item.id);
                     QueryList()
                 },
                 _ctreebar_beforeexpend: function (profile, item) {
                     var ns = this, uictrl = profile.boxing();
                     ICateCItems(item, ns.ctreebar);
                 },
                 _cstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveCate();
                     }
                     ns.cdlg.setDisplay("none");
                 },
                 _mtoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var sv = ns.ctreebar.getUIValue();
                     var mv = ns.mtreegrid.getUIValue();
                     if (item.id == "a1") {
                         if (sv == null && sv == "") {
                             linb.warn("请选择材料类别");
                             return;
                         }
                         ns.mdlg.setDisplay("block");
                         InitMaterial(sv, "")
                     }
                     if (item.id == "a3") {
                         if (mv != null && mv != "") {
                             ns.mdlg.setDisplay("block");
                             InitMaterial("", mv)
                         }
                         else {
                             linb.warn("请选择材料")
                         }
                     }
                     if (item.id == "a4") {
                         if (mv != null && mv != "") {
                             linb.confirms("DelMaterial('" + mv + "')")
                         }
                         else {
                             linb.warn("请选择材料")
                         }
                     }
                 },
                 _mstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveMaterial();
                     }
                     ns.mdlg.setDisplay("none");
                 },
                 _mtreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.mtreegrid.setUIValue(row.id);
                 }
             },
             Static: {
                 viewSize: { "width": 1024, "height": 768 }
             }
         });
         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');

         function InitCate(pv, cv) {
             var o = { "pccode": pv, "ccode": cv }
             var url = preurl + "/InitCate"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.cname.setValue(r.cname);
                 ns.ccode.setValue(r.ccode);
                 ns.pcname.setValue(r.pcname);
                 ns.pccode.setValue(r.pccode);
                 ns.cid.setValue(r.id);
             }
         }
         function SaveCate() {
             var url = preurl + "/SaveCate"
             var db = linb.DataBinder.getFromName("cbinder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "ICateItems('', ns.ctreebar)", false)
         }
         function DelCate(v) {
             var o = { "ccode": v }
             var url = preurl + "/DelCate"
             var b = AjaxExb(url, o);
             BackVad(b, "ICateItems('', ns.ctreebar)", false)
         }
         function ICateItems(v, kj) {
             var url = preurl + "/QueryList";
             var o = { "pcode": v };
             var b = AjaxExb(url, o);
             kj.setItems();
             var r = BackVad(b, "", false)
             if (r) {
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     if (cel[2] == "false") {
                         arr.push({ "id": cel[0], "caption": cel[1], "sub": [] })
                     }
                     else {
                         arr.push({ "id": cel[0], "caption": cel[1] })
                     }
                 }
                 kj.setItems(arr)
             }
         }
         function ICateCItems(item, kj) {
             var url = preurl + "/QueryList";
             var o = { "pcode": item.id };
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             var l = item.hasOwnProperty("sub");
             if (l && item.sub.length <= 0) {
                 var arr = new Array();
                 kj.removeChildren(item.id, true);
                 for (var i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     if (cel[2] == "false") {
                         kj.insertItems([{ "id": cel[0], "caption": cel[1], "sub": []}], item.id)
                     }
                     else {
                         kj.insertItems([{ "id": cel[0], "caption": cel[1]}], item.id)
                     }
                 }
             }
         }

         function InitMaterial(pv, cv) {
             var o = { "pmcode": pv, "mcode": cv }
             var url = preurl + "/InitMaterial"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.mname.setValue(r.mname);
                 ns.mcode.setValue(r.mcode);
                 ns.pmname.setValue(r.pmname);
                 ns.pmcode.setValue(r.pmcode);
                 ns.mc.setValue(r.mlength);
                 ns.mk.setValue(r.mwidth);
                 ns.mh.setValue(r.mdeep);
                 ns.munit.setValue(r.munit);
                 ns.mid.setValue(r.id);
             }
         }
         function SaveMaterial() {
             var url = preurl + "/SaveMaterial"
             var db = linb.DataBinder.getFromName("mbinder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "QueryList()", false)
         }
         function QueryList() {
             var pv = ns.ctreebar.getUIValue();
             var o = { "pcode": pv }
             var url = preurl + "/QueryMaterialList";
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.mtreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[3] }, { "value": cel[4] }, { "value": cel[5] }, { "value": cel[6] }, { "value": cel[7]}] })
                 }
                 ns.mtreegrid.setRows(arr)
             }
         }
         function DelMaterial(v) {
             var o = { "ccode": v }
             var url = preurl + "/DelMaterial"
             var b = AjaxExb(url, o);
             BackVad(b, "QueryList()", false)
         }
     </script>
</body>
</html>
