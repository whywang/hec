<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
</head>
<body>
    <div id='loading'>
        <img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/Iviewtable.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/IButton.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/IEventBtnDo.js" type="text/javascript"></script>
    <script type="text/javascript">
     
        Class('App', 'linb.Com', {
            
            Instance: {
                 
                initialize: function () {
                  
                    this.autoDestroy = true;
                     
                    this.properties = {};
                },
                
                iniComponents: function () {
                
                    var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                    append(
                (new linb.DataBinder)
                .setHost(host, "abinder")
                .setName("abinder")
            );

                    append(
                (new linb.DataBinder)
                .setHost(host, "bbinder")
                .setName("bbinder")
            );

                    append(
                (new linb.DataBinder)
                .setHost(host, "cbinder")
                .setName("cbinder")
            );

                    append(
                (new linb.DataBinder)
                .setHost(host, "dbinder")
                .setName("dbinder")
            );

                    append(
                (new linb.DataBinder)
                .setHost(host, "ebinder")
                .setName("ebinder")
            );

                    append(
                (new linb.DataBinder)
                .setHost(host, "fbinder")
                .setName("fbinder")
            );

                    append(
                (new linb.DataBinder)
                .setHost(host, "gbinder")
                .setName("gbinder")
            );

                    append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("售后派工单")
            );

                    host.pane.append(
                (new linb.UI.Tabs)
                .setHost(host, "tab")
                .setItems([{ "id": "a", "caption": "a" }, { "id": "b", "caption": "b" }, { "id": "c", "caption": "c" }, { "id": "d", "caption": "d" }, { "id": "e", "caption": "e" }, { "id": "f", "caption": "f" }, { "id": "g", "caption": "g"}])
                .setValue("a")
                .onItemSelected("_tab_onitemselected")
            );

                    host.tab.append(
                (new linb.UI.ToolBar)
                .setHost(host, "gtoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "g", "caption": "g"}], "caption": "grp1"}])
                .onClick("_gtoolbar_onclick")
            , "g");

                    host.tab.append(
                (new linb.UI.PageBar)
                .setHost(host, "gpagebar")
                .setDomId("gpagebar")
                .setDock("bottom")
                .setCaption("分页")
                .onClick("_gpagebar_onclick")
            , "g");

                    host.tab.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "gtreegrid")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 80, "type": "input", "caption": "g"}])
            , "g");

                    host.tab.append(
                (new linb.UI.Dialog)
                .setHost(host, "gdlg")
                .setLeft(200)
                .setTop(140)
                .setWidth(550)
                .setHeight(230)
                .setDisplay("none")
                .setCaption("查询")
                .setMinBtn(false)
                .setMaxBtn(false)
            , "g");

                    host.gdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "gstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_gstoolbar_onclick")
            );

                    host.gdlg.append(
                (new linb.UI.Input)
                .setHost(host, "gcode")
                .setDataBinder("gbinder")
                .setDataField("code")
                .setLeft(20)
                .setTop(50)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("订单编号")
            );

                    host.gdlg.append(
                (new linb.UI.Input)
                .setHost(host, "gcustomer")
                .setDataBinder("gbinder")
                .setDataField("customer")
                .setLeft(270)
                .setTop(50)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("客&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;户")
            );

                    host.gdlg.append(
                (new linb.UI.Input)
                .setHost(host, "gcity")
                .setDataBinder("gbinder")
                .setDataField("city")
                .setLeft(20)
                .setTop(100)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("城&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;市")
            );

                    host.gdlg.append(
                (new linb.UI.Input)
                .setHost(host, "gfname")
                .setDataBinder("gbinder")
                .setDataField("fname")
                .setLeft(270)
                .setTop(100)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("工&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;厂")
            );

                    host.gdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "gbdate")
                .setDataBinder("gbinder")
                .setDataField("bdate")
                .setLeft(20)
                .setTop(150)
                .setWidth(225)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("起始日期")
                .setType("date")
            );

                    host.gdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "gedate")
                .setDataBinder("gbinder")
                .setDataField("edate")
                .setLeft(270)
                .setTop(150)
                .setWidth(225)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("截止日期")
                .setType("date")
            );

                    host.tab.append(
                (new linb.UI.ToolBar)
                .setHost(host, "ftoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "f", "caption": "f"}], "caption": "grp1"}])
                .onClick("_ftoolbar_onclick")
            , "f");

                    host.tab.append(
                (new linb.UI.PageBar)
                .setHost(host, "fpagebar")
                .setDomId("fpagebar")
                .setDock("bottom")
                .setCaption("分页")
                .onClick("_fpagebar_onclick")
            , "f");

                    host.tab.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "ftreegrid")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 80, "type": "input", "caption": "f"}])
            , "f");

                    host.tab.append(
                (new linb.UI.Dialog)
                .setHost(host, "fdlg")
                .setLeft(200)
                .setTop(140)
                .setWidth(550)
                .setHeight(230)
                .setDisplay("none")
                .setCaption("查询")
                .setMinBtn(false)
                .setMaxBtn(false)
            , "f");

                    host.fdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "fstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_fstoolbar_onclick")
            );

                    host.fdlg.append(
                (new linb.UI.Input)
                .setHost(host, "fcode")
                .setDataBinder("fbinder")
                .setDataField("code")
                .setLeft(20)
                .setTop(50)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("订单编号")
            );

                    host.fdlg.append(
                (new linb.UI.Input)
                .setHost(host, "fcustomer")
                .setDataBinder("fbinder")
                .setDataField("customer")
                .setLeft(270)
                .setTop(50)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("客&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;户")
            );

                    host.fdlg.append(
                (new linb.UI.Input)
                .setHost(host, "fcity")
                .setDataBinder("fbinder")
                .setDataField("city")
                .setLeft(20)
                .setTop(100)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("城&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;市")
            );

                    host.fdlg.append(
                (new linb.UI.Input)
                .setHost(host, "ffname")
                .setDataBinder("fbinder")
                .setDataField("fname")
                .setLeft(270)
                .setTop(100)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("工&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;厂")
            );

                    host.fdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "fbdate")
                .setDataBinder("fbinder")
                .setDataField("bdate")
                .setLeft(20)
                .setTop(150)
                .setWidth(225)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("起始日期")
                .setType("date")
            );

                    host.fdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "fedate")
                .setDataBinder("fbinder")
                .setDataField("edate")
                .setLeft(270)
                .setTop(150)
                .setWidth(225)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("截止日期")
                .setType("date")
            );

                    host.tab.append(
                (new linb.UI.ToolBar)
                .setHost(host, "etoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "e", "caption": "e"}], "caption": "grp1"}])
                .onClick("_etoolbar_onclick")
            , "e");

                    host.tab.append(
                (new linb.UI.PageBar)
                .setHost(host, "epagebar")
                .setDomId("epagebar")
                .setDock("bottom")
                .setCaption("分页")
                .onClick("_epagebar_onclick")
            , "e");

                    host.tab.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "etreegrid")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 80, "type": "input", "caption": "e"}])
            , "e");

                    host.tab.append(
                (new linb.UI.Dialog)
                .setHost(host, "edlg")
                .setLeft(200)
                .setTop(140)
                .setWidth(550)
                .setHeight(230)
                .setDisplay("none")
                .setCaption("查询")
                .setMinBtn(false)
                .setMaxBtn(false)
            , "e");

                    host.edlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "estoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_estoolbar_onclick")
            );

                    host.edlg.append(
                (new linb.UI.Input)
                .setHost(host, "ecode")
                .setDataBinder("ebinder")
                .setDataField("code")
                .setLeft(20)
                .setTop(50)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("订单编号")
            );

                    host.edlg.append(
                (new linb.UI.Input)
                .setHost(host, "ecustomer")
                .setDataBinder("ebinder")
                .setDataField("customer")
                .setLeft(270)
                .setTop(50)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("客&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;户")
            );

                    host.edlg.append(
                (new linb.UI.Input)
                .setHost(host, "ecity")
                .setDataBinder("ebinder")
                .setDataField("city")
                .setLeft(20)
                .setTop(100)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("城&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;市")
            );

                    host.edlg.append(
                (new linb.UI.Input)
                .setHost(host, "efname")
                .setDataBinder("ebinder")
                .setDataField("fname")
                .setLeft(270)
                .setTop(100)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("工&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;厂")
            );

                    host.edlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "ebdate")
                .setDataBinder("ebinder")
                .setDataField("bdate")
                .setLeft(20)
                .setTop(150)
                .setWidth(225)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("起始日期")
                .setType("date")
            );

                    host.edlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "eedate")
                .setDataBinder("ebinder")
                .setDataField("edate")
                .setLeft(270)
                .setTop(150)
                .setWidth(225)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("截止日期")
                .setType("date")
            );

                    host.tab.append(
                (new linb.UI.ToolBar)
                .setHost(host, "dtoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "d", "caption": "d"}], "caption": "grp1"}])
                .onClick("_dtoolbar_onclick")
            , "d");

                    host.tab.append(
                (new linb.UI.PageBar)
                .setHost(host, "dpagebar")
                .setDomId("dpagebar")
                .setDock("bottom")
                .setCaption("分页")
                .onClick("_dpagebar_onclick")
            , "d");

                    host.tab.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "dtreegrid")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 80, "type": "input", "caption": "d"}])
            , "d");

                    host.tab.append(
                (new linb.UI.Dialog)
                .setHost(host, "ddlg")
                .setLeft(200)
                .setTop(140)
                .setWidth(550)
                .setHeight(230)
                .setDisplay("none")
                .setCaption("查询")
                .setMinBtn(false)
                .setMaxBtn(false)
            , "d");

                    host.ddlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "dstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_dstoolbar_onclick")
            );

                    host.ddlg.append(
                (new linb.UI.Input)
                .setHost(host, "dcode")
                .setDataBinder("dbinder")
                .setDataField("code")
                .setLeft(20)
                .setTop(50)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("订单编号")
            );

                    host.ddlg.append(
                (new linb.UI.Input)
                .setHost(host, "dcustomer")
                .setDataBinder("dbinder")
                .setDataField("customer")
                .setLeft(270)
                .setTop(50)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("客&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;户")
            );

                    host.ddlg.append(
                (new linb.UI.Input)
                .setHost(host, "dcity")
                .setDataBinder("dbinder")
                .setDataField("city")
                .setLeft(20)
                .setTop(100)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("城&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;市")
            );

                    host.ddlg.append(
                (new linb.UI.Input)
                .setHost(host, "dfname")
                .setDataBinder("dbinder")
                .setDataField("fname")
                .setLeft(270)
                .setTop(100)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("工&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;厂")
            );

                    host.ddlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "dbdate")
                .setDataBinder("dbinder")
                .setDataField("bdate")
                .setLeft(20)
                .setTop(150)
                .setWidth(225)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("起始日期")
                .setType("date")
            );

                    host.ddlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "dedate")
                .setDataBinder("dbinder")
                .setDataField("edate")
                .setLeft(270)
                .setTop(150)
                .setWidth(225)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("截止日期")
                .setType("date")
            );

                    host.tab.append(
                (new linb.UI.ToolBar)
                .setHost(host, "ctoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "c", "caption": "c"}], "caption": "grp1"}])
                .onClick("_ctoolbar_onclick")
            , "c");

                    host.tab.append(
                (new linb.UI.PageBar)
                .setHost(host, "cpagebar")
                .setDomId("cpagebar")
                .setDock("bottom")
                .setCaption("分页")
                .onClick("_cpagebar_onclick")
            , "c");

                    host.tab.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "ctreegrid")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 80, "type": "input", "caption": "c"}])
            , "c");

                    host.tab.append(
                (new linb.UI.Dialog)
                .setHost(host, "cdlg")
                .setLeft(200)
                .setTop(140)
                .setWidth(550)
                .setHeight(230)
                .setDisplay("none")
                .setCaption("查询")
                .setMinBtn(false)
                .setMaxBtn(false)
            , "c");

                    host.cdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "cstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_cstoolbar_onclick")
            );

                    host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "ccode")
                .setDataBinder("cbinder")
                .setDataField("code")
                .setLeft(20)
                .setTop(50)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("订单编号")
            );

                    host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "ccustomer")
                .setDataBinder("cbinder")
                .setDataField("customer")
                .setLeft(270)
                .setTop(50)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("客&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;户")
            );

                    host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "ccity")
                .setDataBinder("cbinder")
                .setDataField("city")
                .setLeft(20)
                .setTop(100)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("城&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;市")
            );

                    host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "cfname")
                .setDataBinder("cbinder")
                .setDataField("fname")
                .setLeft(270)
                .setTop(100)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("工&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;厂")
            );

                    host.cdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "cbdate")
                .setDataBinder("cbinder")
                .setDataField("bdate")
                .setLeft(20)
                .setTop(150)
                .setWidth(225)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("起始日期")
                .setType("date")
            );

                    host.cdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "cedate")
                .setDataBinder("cbinder")
                .setDataField("edate")
                .setLeft(270)
                .setTop(150)
                .setWidth(225)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("截止日期")
                .setType("date")
            );

                    host.tab.append(
                (new linb.UI.ToolBar)
                .setHost(host, "btoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "b", "caption": "b"}], "caption": "grp1"}])
                .onClick("_btoolbar_onclick")
            , "b");

                    host.tab.append(
                (new linb.UI.PageBar)
                .setHost(host, "bpagebar")
                .setDomId("bpagebar")
                .setDock("bottom")
                .setCaption("分页")
                .onClick("_bpagebar_onclick")
            , "b");

                    host.tab.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "btreegrid")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 80, "type": "input", "caption": "b"}])
            , "b");

                    host.tab.append(
                (new linb.UI.Dialog)
                .setHost(host, "bdog")
                .setLeft(200)
                .setTop(140)
                .setWidth(550)
                .setHeight(230)
                .setDisplay("none")
                .setCaption("查询")
                .setMinBtn(false)
                .setMaxBtn(false)
            , "b");

                    host.bdog.append(
                (new linb.UI.ToolBar)
                .setHost(host, "bstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_bstoolbar_onclick")
            );

                    host.bdog.append(
                (new linb.UI.Input)
                .setHost(host, "bcode")
                .setDataBinder("bbinder")
                .setDataField("code")
                .setLeft(20)
                .setTop(50)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("订单编号")
            );

                    host.bdog.append(
                (new linb.UI.Input)
                .setHost(host, "bcustomer")
                .setDataBinder("bbinder")
                .setDataField("customer")
                .setLeft(270)
                .setTop(50)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("客&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;户")
            );

                    host.bdog.append(
                (new linb.UI.Input)
                .setHost(host, "bcity")
                .setDataBinder("bbinder")
                .setDataField("city")
                .setLeft(20)
                .setTop(100)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("城&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;市")
            );

                    host.bdog.append(
                (new linb.UI.Input)
                .setHost(host, "bfname")
                .setDataBinder("bbinder")
                .setDataField("fname")
                .setLeft(270)
                .setTop(100)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("工&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;厂")
            );

                    host.bdog.append(
                (new linb.UI.ComboInput)
                .setHost(host, "bbdate")
                .setDataBinder("bbinder")
                .setDataField("bdate")
                .setLeft(20)
                .setTop(150)
                .setWidth(225)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("起始日期")
                .setType("date")
            );

                    host.bdog.append(
                (new linb.UI.ComboInput)
                .setHost(host, "bedate")
                .setDataBinder("bbinder")
                .setDataField("edate")
                .setLeft(270)
                .setTop(150)
                .setWidth(225)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("截止日期")
                .setType("date")
            );

                    host.tab.append(
                (new linb.UI.ToolBar)
                .setHost(host, "atoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a", "caption": "a"}], "caption": "grp1"}])
                .onClick("_atoolbar_onclick")
            , "a");

                    host.tab.append(
                (new linb.UI.PageBar)
                .setHost(host, "apagebar")
                .setDomId("apagebar")
                .setDock("bottom")
                .setCaption("分页")
                .onClick("_apagebar_onclick")
            , "a");

                    host.tab.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "atreegrid")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 80, "type": "input", "caption": "a"}])
            , "a");

                    host.tab.append(
                (new linb.UI.Dialog)
                .setHost(host, "adlg")
                .setLeft(200)
                .setTop(140)
                .setWidth(550)
                .setHeight(230)
                .setDisplay("none")
                .setCaption("查询")
                .setMinBtn(false)
                .setMaxBtn(false)
            , "a");

                    host.adlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "astoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_astoolbar_onclick")
            );

                    host.adlg.append(
                (new linb.UI.Input)
                .setHost(host, "acode")
                .setDataBinder("abinder")
                .setDataField("code")
                .setLeft(20)
                .setTop(50)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("订单编号")
            );

                    host.adlg.append(
                (new linb.UI.Input)
                .setHost(host, "acustomer")
                .setDataBinder("abinder")
                .setDataField("customer")
                .setLeft(270)
                .setTop(50)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("客&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;户")
            );

                    host.adlg.append(
                (new linb.UI.Input)
                .setHost(host, "acity")
                .setDataBinder("abinder")
                .setDataField("city")
                .setLeft(20)
                .setTop(100)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("城&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;市")
            );

                    host.adlg.append(
                (new linb.UI.Input)
                .setHost(host, "afname")
                .setDataBinder("abinder")
                .setDataField("fname")
                .setLeft(270)
                .setTop(100)
                .setWidth(240)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("工&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;厂")
            );

                    host.adlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "abdate")
                .setDataBinder("abinder")
                .setDataField("bdate")
                .setLeft(20)
                .setTop(150)
                .setWidth(225)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("起始日期")
                .setType("date")
            );

                    host.adlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "aedate")
                .setDataBinder("abinder")
                .setDataField("edate")
                .setLeft(270)
                .setTop(150)
                .setWidth(225)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("截止日期")
                .setType("date")
            );

                    return children;
                 
                },
                
                iniExComs: function (com, threadid) {
                },
                 
                customAppend: function (parent, subId, left, top) {
          
                    return false;
                },

                events: { "onReady": "_onready" },
                _onready: function () {
                    ns = this, emcode = "0028";
                    preurl = "../../UIServer/ProductionBusiness/DistributorProduction/AfterProductionList.aspx";
                    tabv = GetCookie("AfterProTab")
                    pnum = GetCookie("AfterProPageNum")
                    pnum = pnum == "" ? 1 : pnum
                    if (tabv) {
                        ns.tab.setValue(tabv)
                    }
                    else {
                        ns.tab.setValue("a");
                        tabv = "a";
                    }
                    IViewTab(emcode, ns.tab)
                },
                _tab_onitemselected: function (profile, item, e, src, type) {
                    var ns = this, uictrl = profile.boxing();
                    var cpnum = 1;
                    if (tabv == item.id) {
                        cpnum = pnum;
                    }
                    tabv = item.id;
                    QueryTabTools(cpnum);
                    SetCookie("AfterProTab", tabv)
                    SetCookie("AfterProPageNum", cpnum)
                },
                _atoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    BtnDo("", emcode, item);
                },
                _btoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    BtnDo("", emcode, item);
                },
                _ctoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    BtnDo("", emcode, item);
                },
                _dtoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    BtnDo("", emcode, item);
                },
                _etoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    BtnDo("", emcode, item);
                },
                _ftoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    BtnDo("", emcode, item);
                },
                _gtoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    BtnDo("", emcode, item);
                },
                _apagebar_onclick: function (profile, page) {
                    var ns = this, uictrl = profile.boxing();
                    ClickPage(page);
                },
                _bpagebar_onclick: function (profile, page) {
                    var ns = this, uictrl = profile.boxing();
                    ClickPage(page);
                },
                _cpagebar_onclick: function (profile, page) {
                    var ns = this, uictrl = profile.boxing();
                    ClickPage(page);
                },
                _dpagebar_onclick: function (profile, page) {
                    var ns = this, uictrl = profile.boxing();
                    ClickPage(page);
                },
                _epagebar_onclick: function (profile, page) {
                    var ns = this, uictrl = profile.boxing();
                    ClickPage(page);
                },
                _fpagebar_onclick: function (profile, page) {
                    var ns = this, uictrl = profile.boxing();
                    ClickPage(page);
                },
                _gpagebar_onclick: function (profile, page) {
                    var ns = this, uictrl = profile.boxing();
                    ClickPage(page);
                },
                _astoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    if (item.id == "a1") {
                        DoSearch();
                    }
                    else {
                        ns.adlg.setDisplay("none");
                    }
                },
                _bstoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    if (item.id == "a1") {
                        DoSearch();
                    }
                    else {
                        ns.bdlg.setDisplay("none");
                    }
                },
                _cstoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    if (item.id == "a1") {
                        DoSearch();
                    }
                    else {
                        ns.cdlg.setDisplay("none");
                    }
                },
                _dstoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    if (item.id == "a1") {
                        DoSearch();
                    }
                    else {
                        ns.ddlg.setDisplay("none");
                    }
                },
                _estoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    if (item.id == "a1") {
                        DoSearch();
                    }
                    else {
                        ns.edlg.setDisplay("none");
                    }
                },
                _fstoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    if (item.id == "a1") {
                        DoSearch();
                    }
                    else {
                        ns.fdlg.setDisplay("none");
                    }
                },
                _gstoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    if (item.id == "a1") {
                        DoSearch();
                    }
                    else {
                        ns.gdlg.setDisplay("none");
                    }
                }
            },
            Static: {
                viewSize: { "width": 1024, "height": 768 }
            }
        });
        linb.UI.setTheme(themes);
        linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
        function QueryList(cp, ps, emcode, tabcode, bder, kj1, kj2) {
            var arg1 = { "curpage": cp, "emcode": emcode, "pagesize": ps, "tabcode": tabcode }
            var db = linb.DataBinder.getFromName(bder);
            var arg2 = db.updateDataFromUI().getData();
            var o = $.extend(arg1, arg2);
            var url = preurl + '/QueryProdutionList';
            var b = AjaxExb(url, o);
            kj1.removeAllRows();
            var r = BackVad(b, "", false)
            if (r) {
                kj1.removeAllRows();
                var arr = new Array();
                for (i = 2; i < r.length; i++) {
                    var cel = r[i].toString().split(',')
                    arr.push({ "id": cel[1], "cells": [{ "value": cel[0] }, { "value": cel[3] }, { "value": cel[4] }, { "value": cel[5] }, { "value": cel[6] }, { "value": cel[7] }, { "value": cel[8] }, { "value": cel[9] }, { "value": cel[10] }, { "value": cel[11] }, { "value": cel[12] }, { "value": cel[13] }, { "value": cel[14] }, { "value": cel[15]}] })
                }
                kj2.setValue("1:1:" + r[1] + "")
                kj1.setRows(arr)
            }
        }
        function Search() {
            switch (tabv) {
                case "a":
                    ns.adlg.setDisplay("block");
                    break;
                case "b":
                    ns.bdlg.setDisplay("block");
                    break;
                case "c":
                    ns.cdlg.setDisplay("block");
                    break;
                case "d":
                    ns.ddlg.setDisplay("block");
                    break;
                case "e":
                    ns.edlg.setDisplay("block");
                    break;
                case "f":
                    ns.fdlg.setDisplay("block");
                    break;
                case "g":
                    ns.gdlg.setDisplay("block");
                    break;
                case "h":
                    ns.hdlg.setDisplay("block");
                    break;
                case "j":
                    ns.jdlg.setDisplay("block");
                    break;
                case "k":
                    ns.kdlg.setDisplay("block");
                    break;
            }
        }
        function QueryTabTools(n) {
            switch (tabv) {
                case "a":
                    ListPageToolBar(emcode, ns.atoolbar);
                    ITableViewByAtrr(emcode, "a", ns.atreegrid);
                    linb.UIProfile.getFromDom("apagebar").boxing().setPage(n);
                    QueryList(n, 15, emcode, "a", "abinder", ns.atreegrid, ns.apagebar);
                    break;
                case "b":
                    ListPageToolBar(emcode, ns.btoolbar);
                    ITableViewByAtrr(emcode, "b", ns.btreegrid);
                    linb.UIProfile.getFromDom("bpagebar").boxing().setPage(n);
                    QueryList(n, 15, emcode, "b", "bbinder", ns.btreegrid, ns.bpagebar);
                    break;
                case "c":
                    ListPageToolBar(emcode, ns.ctoolbar);
                    ITableViewByAtrr(emcode, "c", ns.ctreegrid);
                    linb.UIProfile.getFromDom("cpagebar").boxing().setPage(n);
                    QueryList(n, 15, emcode, "c", "cbinder", ns.ctreegrid, ns.cpagebar);
                    break;
                case "d":
                    ListPageToolBar(emcode, ns.dtoolbar);
                    ITableViewByAtrr(emcode, "d", ns.dtreegrid);
                    linb.UIProfile.getFromDom("dpagebar").boxing().setPage(n);
                    QueryList(n, 15, emcode, "d", "dbinder", ns.dtreegrid, ns.dpagebar);
                    break;
                case "e":
                    ListPageToolBar(emcode, ns.etoolbar);
                    ITableViewByAtrr(emcode, "e", ns.etreegrid);
                    linb.UIProfile.getFromDom("epagebar").boxing().setPage(n);
                    QueryList(n, 15, emcode, "e", "ebinder", ns.etreegrid, ns.epagebar);
                    break;
                case "f":
                    ListPageToolBar(emcode, ns.ftoolbar);
                    ITableViewByAtrr(emcode, "f", ns.ftreegrid);
                    linb.UIProfile.getFromDom("fpagebar").boxing().setPage(n);
                    QueryList(n, 15, emcode, "f", "fbinder", ns.ftreegrid, ns.fpagebar);
                    break;
                case "g":
                    ListPageToolBar(emcode, ns.gtoolbar);
                    ITableViewByAtrr(emcode, "g", ns.gtreegrid);
                    linb.UIProfile.getFromDom("gpagebar").boxing().setPage(n);
                    QueryList(n, 15, emcode, "g", "gbinder", ns.gtreegrid, ns.gpagebar);
                    break;
                case "h":
                    ListPageToolBar(emcode, ns.htoolbar);
                    ITableViewByAtrr(emcode, "h", ns.htreegrid);
                    linb.UIProfile.getFromDom("hpagebar").boxing().setPage(n);
                    QueryList(n, 15, emcode, "h", "hbinder", ns.htreegrid, ns.hpagebar);
                    break;
                case "j":
                    ListPageToolBar(emcode, ns.jtoolbar);
                    ITableViewByAtrr(emcode, "j", ns.jtreegrid);
                    linb.UIProfile.getFromDom("jpagebar").boxing().setPage(n);
                    QueryList(n, 15, emcode, "j", "jbinder", ns.jtreegrid, ns.jpagebar);
                    break;
                case "k":
                    ListPageToolBar(emcode, ns.ktoolbar);
                    ITableViewByAtrr(emcode, "k", ns.ktreegrid);
                    linb.UIProfile.getFromDom("kpagebar").boxing().setPage(n);
                    QueryList(n, 15, emcode, "k", "kbinder", ns.ktreegrid, ns.kpagebar);
                    break;
            }
        }
        function DoSearch() {
            SetCookie("SalePageNum", 1);
            switch (tabv) {
                case "a":
                    ns.adlg.setDisplay("none");
                    QueryList(1, 15, emcode, "a", "abinder", ns.atreegrid, ns.apagebar);
                    linb.UIProfile.getFromDom("apagebar").boxing().setPage(1);
                    break;
                case "b":
                    ns.bdlg.setDisplay("none");
                    QueryList(1, 15, emcode, "b", "bbinder", ns.btreegrid, ns.bpagebar);
                    linb.UIProfile.getFromDom("bpagebar").boxing().setPage(1);
                    break;
                case "c":
                    ns.cdlg.setDisplay("none");
                    QueryList(1, 15, emcode, "c", "cbinder", ns.ctreegrid, ns.cpagebar);
                    linb.UIProfile.getFromDom("cpagebar").boxing().setPage(1);
                    break;
                case "d":
                    ns.ddlg.setDisplay("none");
                    QueryList(1, 15, emcode, "d", "dbinder", ns.dtreegrid, ns.dpagebar);
                    linb.UIProfile.getFromDom("dpagebar").boxing().setPage(1);
                    break;
                case "e":
                    ns.edlg.setDisplay("none");
                    QueryList(1, 15, emcode, "e", "ebinder", ns.etreegrid, ns.epagebar);
                    linb.UIProfile.getFromDom("epagebar").boxing().setPage(1);
                    break;
                case "f":
                    ns.fdlg.setDisplay("none");
                    QueryList(1, 15, emcode, "f", "fbinder", ns.ftreegrid, ns.fpagebar);
                    linb.UIProfile.getFromDom("fpagebar").boxing().setPage(1);
                    break;
                case "g":
                    ns.gdlg.setDisplay("none");
                    QueryList(1, 15, emcode, "g", "gbinder", ns.gtreegrid, ns.gpagebar);
                    linb.UIProfile.getFromDom("gpagebar").boxing().setPage(1);
                    break;
                case "h":
                    ns.hdlg.setDisplay("none");
                    QueryList(1, 15, emcode, "h", "hbinder", ns.htreegrid, ns.hpagebar);
                    linb.UIProfile.getFromDom("hpagebar").boxing().setPage(1);
                    break;
                case "j":
                    ns.jdlg.setDisplay("none");
                    QueryList(1, 15, emcode, "j", "jbinder", ns.jtreegrid, ns.jpagebar);
                    linb.UIProfile.getFromDom("jpagebar").boxing().setPage(1);
                    break;
                case "k":
                    ns.kdlg.setDisplay("none");
                    QueryList(1, 15, emcode, "k", "kbinder", ns.ktreegrid, ns.kpagebar);
                    linb.UIProfile.getFromDom("kpagebar").boxing().setPage(1);
                    break;
            }
        }
        function ClickPage(n) {
            SetCookie("AfterProPageNum", n);
            switch (tabv) {
                case "a":
                    QueryList(n, 15, emcode, "a", "abinder", ns.atreegrid, ns.apagebar);
                    linb.UIProfile.getFromDom("apagebar").boxing().setPage(n);
                    break;
                case "b":
                    QueryList(n, 15, emcode, "b", "bbinder", ns.btreegrid, ns.bpagebar);
                    linb.UIProfile.getFromDom("bpagebar").boxing().setPage(n);
                    break;
                case "c":
                    QueryList(n, 15, emcode, "c", "cbinder", ns.ctreegrid, ns.cpagebar);
                    linb.UIProfile.getFromDom("cpagebar").boxing().setPage(n);
                    break;
                case "d":
                    QueryList(n, 15, emcode, "d", "dbinder", ns.dtreegrid, ns.dpagebar);
                    linb.UIProfile.getFromDom("dpagebar").boxing().setPage(n);
                    break;
                case "e":
                    QueryList(n, 15, emcode, "e", "ebinder", ns.etreegrid, ns.epagebar);
                    linb.UIProfile.getFromDom("epagebar").boxing().setPage(n);
                    break;
                case "f":
                    QueryList(n, 15, emcode, "f", "fbinder", ns.ftreegrid, ns.fpagebar);
                    linb.UIProfile.getFromDom("fpagebar").boxing().setPage(n);
                    break;
                case "g":
                    QueryList(n, 15, emcode, "g", "gbinder", ns.gtreegrid, ns.gpagebar);
                    linb.UIProfile.getFromDom("gpagebar").boxing().setPage(n);
                    break;
                case "h":
                    QueryList(n, 15, emcode, "h", "hbinder", ns.htreegrid, ns.hpagebar);
                    linb.UIProfile.getFromDom("hpagebar").boxing().setPage(n);
                    break;
                case "j":
                    QueryList(n, 15, emcode, "j", "jbinder", ns.jtreegrid, ns.jpagebar);
                    linb.UIProfile.getFromDom("jpagebar").boxing().setPage(n);
                    break;
                case "k":
                    QueryList(n, 15, emcode, "k", "kbinder", ns.ktreegrid, ns.kpagebar);
                    linb.UIProfile.getFromDom("kpagebar").boxing().setPage(n);
                    break;
            }
        }
    </script>
</body>
</html>
