<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>售后责任管理</title>
    <link href="../../../Styles/Common/toastr.css" rel="stylesheet" type="text/css" />
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/Ireason.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/toastr.js" type="text/javascript"></script>
     <script type="text/javascript">

         Class('App', 'linb.Com', {

             Instance: {

                 initialize: function () {

                     this.autoDestroy = true;

                     this.properties = {};
                 },

                 iniComponents: function () {
                     // [[code created by jsLinb UI Builder
                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "lbbinder")
                .setName("lbbinder")
            );

                     append(
                (new linb.DataBinder)
                .setHost(host, "zrbinder")
                .setName("zrbinder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("售后原因管理")
                .setImage("../../../Image/opeimage/page.gif")
            );

                     host.pane.append(
                (new linb.UI.Layout)
                .setHost(host, "layout")
                .setItems([{ "id": "before", "pos": "before", "min": 10, "size": 350, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            );

                     host.layout.append(
                (new linb.UI.Block)
                .setHost(host, "br")
                .setDock("fill")
            , "before");

                     host.br.append(
                (new linb.UI.ToolBar)
                .setHost(host, "ltoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增", "image": "../../../Image/opeimage/add.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑", "image": "../../../Image/opeimage/edit.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除", "image": "../../../Image/opeimage/del.gif"}], "caption": "grp1"}])
                .onClick("_ltoolbar_onclick")
            );

                     host.br.append(
                (new linb.UI.TreeBar)
                .setHost(host, "ltreebar")
                .setSelMode("multibycheckbox")
                .setValue("")
                .onItemSelected("_ltreebar_onitemselected")
                .beforeExpend("_ltreebar_beforeexpend")
            );

                     host.br.append(
                (new linb.UI.Pane)
                .setHost(host, "prt")
                .setDock("top")
                .setHeight(51)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            );

                     host.prt.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl1")
                .setLeft(20)
                .setTop(20)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#666666'>原因类别</span>")
            );

                     host.br.append(
                (new linb.UI.Pane)
                .setHost(host, "prl")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            );

                     host.br.append(
                (new linb.UI.Pane)
                .setHost(host, "prr")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            );

                     host.layout.append(
                (new linb.UI.Block)
                .setHost(host, "ctl_block4")
                .setDock("fill")
            , "main");

                     host.ctl_block4.append(
                (new linb.UI.ToolBar)
                .setHost(host, "xtoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增", "image": "../../../Image/opeimage/add.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑", "image": "../../../Image/opeimage/edit.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除", "image": "../../../Image/opeimage/del.gif"}], "caption": "grp1"}])
                .onClick("_xtoolbar_onclick")
            );

                     host.ctl_block4.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "xtreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(28)
                .setRowHeight(30)
                .setHeader([{ "id": "col1", "width": 140, "type": "input", "caption": "类别名称" }, { "id": "col2", "width": 200, "type": "input", "caption": "责任名称"}])
                .setValue("")
                .onRowSelected("_xtreegrid_onrowselected")
            );

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "lbdlg")
                .setLeft(121)
                .setTop(111)
                .setWidth(550)
                .setHeight(319)
                .setDisplay("none")
                .setCaption("原因类别")
                .setMinBtn(false)
                .setMaxBtn(false)
            );

                     host.lbdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "lstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_lstoolbar_onclick")
            );

                     host.lbdlg.append(
                (new linb.UI.Input)
                .setHost(host, "lname")
                .setDataBinder("lbbinder")
                .setDataField("lname")
                .setLeft(100)
                .setTop(60)
                .setWidth(360)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("类别名称")
                .setLabelHAlign("left")
            );

                     host.lbdlg.append(
                (new linb.UI.Input)
                .setHost(host, "lid")
                .setDataBinder("lbbinder")
                .setDataField("lid")
                .setLeft(50)
                .setTop(60)
                .setWidth(410)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
                .setLabelCaption("类别名称")
                .setValue("0")
            );

                     host.lbdlg.append(
                (new linb.UI.Input)
                .setHost(host, "lcode")
                .setDataBinder("lbbinder")
                .setDataField("lcode")
                .setLeft(100)
                .setTop(110)
                .setWidth(360)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("类别编码")
                .setLabelHAlign("left")
            );

                     host.lbdlg.append(
                (new linb.UI.Input)
                .setHost(host, "lpname")
                .setDataBinder("lbbinder")
                .setDataField("lpname")
                .setReadonly(true)
                .setLeft(100)
                .setTop(160)
                .setWidth(360)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("父级类别")
                .setLabelHAlign("left")
            );

                     host.lbdlg.append(
                (new linb.UI.Input)
                .setHost(host, "lpcode")
                .setDataBinder("lbbinder")
                .setDataField("lpcode")
                .setReadonly(true)
                .setLeft(100)
                .setTop(210)
                .setWidth(360)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("父级编码")
                .setLabelHAlign("left")
            );

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "zrdlg")
                .setLeft(120)
                .setTop(150)
                .setWidth(550)
                .setDisplay("none")
                .setCaption("原因")
                .setMinBtn(false)
                .setMaxBtn(false)
            );

                     host.zrdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "zrstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_zrstoolbar_onclick")
            );

                     host.zrdlg.append(
                (new linb.UI.Input)
                .setHost(host, "rname")
                .setDataBinder("zrbinder")
                .setDataField("rname")
                .setLeft(90)
                .setTop(50)
                .setWidth(380)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("原因名称")
                .setLabelHAlign("left")
            );

                     host.zrdlg.append(
                (new linb.UI.Input)
                .setHost(host, "rcode")
                .setDataBinder("zrbinder")
                .setDataField("rcode")
                .setLeft(90)
                .setTop(100)
                .setWidth(380)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("原因编码")
                .setLabelHAlign("left")
            );

                     host.zrdlg.append(
                (new linb.UI.Input)
                .setHost(host, "rid")
                .setDataBinder("zrbinder")
                .setDataField("rid")
                .setLeft(30)
                .setTop(100)
                .setWidth(440)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
                .setLabelCaption("原因编码")
                .setValue("0")
            );

                     host.zrdlg.append(
                (new linb.UI.Input)
                .setHost(host, "rlname")
                .setDataBinder("zrbinder")
                .setDataField("rlname")
                .setReadonly(true)
                .setLeft(90)
                .setTop(150)
                .setWidth(380)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("类别名称")
                .setLabelHAlign("left")
            );

                     host.zrdlg.append(
                (new linb.UI.Input)
                .setHost(host, "rlcode")
                .setDataBinder("zrbinder")
                .setDataField("rlcode")
                .setReadonly(true)
                .setLeft(90)
                .setTop(200)
                .setWidth(380)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("类别编码")
                .setLabelHAlign("left")
            );

                     return children;
                     // ]]code created by jsLinb UI Builder
                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },
                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this;
                     preurl = "../../../UIServer/BaseSet/RepairReasonManage/RepairReasons.aspx";
                     IreasonItems("", ns.ltreebar)
                 },

                 _ltoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var v = ns.ltreebar.getUIValue();
                     if (item.id == "a1") {
                         ns.lbdlg.setDisplay("block")
                         InitReasonClass(v, "")
                     }
                     if (item.id == "a3") {
                         if (v != null && v != "") {
                             ns.lbdlg.setDisplay("block")
                             InitReasonClass("", v)
                         }
                         else {
                             linb.message("请选择责任类别")
                         }
                     }
                     if (item.id == "a4") {
                         if (v != null && v != "") {
                             IDelFun("DelReasonClass('" + v + "')")
                         }
                         else {
                             linb.message("请选择责任类别")
                         }
                     }
                 },
                 _ltreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.ltreebar.setValue(item.id)
                     IreasonCItems(item, ns.ltreebar)
                     QueryRList(item.id)
                 },
                 _ltreebar_beforeexpend: function (profile, item) {
                     var ns = this, uictrl = profile.boxing();
                     IreasonCItems(item, ns.ltreebar)
                 },
                 _xtoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var lv = ns.ltreebar.getUIValue();
                     var v = ns.xtreegrid.getUIValue();
                     if (item.id == "a1") {

                         if (lv != null && lv != "") {
                             ns.zrdlg.setDisplay("block")
                             InitReason(lv, "")
                         }
                         else {
                             linb.message("请选择原因")
                         }
                     }
                     if (item.id == "a3") {
                         if (v != null && v != "") {
                             ns.zrdlg.setDisplay("block")
                             InitReason("", v)
                         }
                         else {
                             linb.message("请选择原因")
                         }
                     }
                     if (item.id == "a4") {
                         if (v != null && v != "") {
                             IDelFun("DelReason('" + v + "')")
                         }
                         else {
                             linb.message("请选择原因")
                         }
                     }
                 },
                 _xtreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.xtreegrid.setValue(row.id)
                 },
                 _lstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveReasonClass()
                     }
                     if (item.id == "a3") {
                         ns.lbdlg.setDisplay("none")
                     }
                 },
                 _zrstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveReason()
                     }
                     if (item.id == "a3") {
                         ns.zrdlg.setDisplay("none")
                     }
                 }
             }
         });

         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function InitReasonClass(pv, dv) {
             var o = { "rrpcode": pv, "rrcode": dv }
             var url = preurl + "/InitReasonCate"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 InitKj(r)
             }
         }
         function InitKj(r) {
             ns.lname.setValue(r.rrname)
             ns.lcode.setValue(r.rrcode)
             ns.lpname.setValue(r.rrpname)
             ns.lpcode.setValue(r.rrpcode)
             ns.lid.setValue(r.id)
         }
         function DelReasonClass(v) {
             var o = { "rrcode": v }
             var url = preurl + "/DelReasonCate"
             var b = AjaxExb(url, o);
             BackVad(b, " ReLoadTree()", false)
         }
         function SaveReasonClass() {
             var url = preurl + "/SaveReasonCate"
             var db = linb.DataBinder.getFromName("lbbinder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "ReLoadTree()", false)
         }
         function InitReason(pv, dv) {
             var o = { "rrcode": pv, "rcode": dv }
             var url = preurl + "/InitReason"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 InitZKj(r)
             }
         }
         function InitZKj(r) {
             ns.rname.setValue(r.rdetail)
             ns.rcode.setValue(r.rcode)
             ns.rlname.setValue(r.rrname)
             ns.rlcode.setValue(r.rrcode)
             ns.rid.setValue(r.id)
         }
         function DelReason(v) {
             var o = { "rcode": v }
             var url = preurl + "/DelReason"
             var b = AjaxExb(url, o);
             BackVad(b, " ReLoadGrid()", false)
         }
         function SaveReason() {
             var url = preurl + "/SaveReason"
             var db = linb.DataBinder.getFromName("zrbinder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "ReLoadGrid()", false)
         }
         function QueryRList(v) {
             var url = preurl + "/QueryReasonList";
             var o = { "rrcode": v }
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.xtreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[2]}] })
                 }
                 ns.xtreegrid.setRows(arr)
             }
         }
         function ReLoadTree() {
             IreasonItems('', ns.ltreebar)
             ns.lbdlg.setDisplay("none")
         }
         function ReLoadGrid() {
             var rcode = ns.ltreebar.getUIValue();
             QueryRList(rcode)
             ns.zrdlg.setDisplay("none")
         }
     </script>
</body>
</html>

