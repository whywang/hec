<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>帮助管理</title>
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/Ihmenu.js" type="text/javascript"></script>
     <input id="context" name="dd" type="text" value="" style="display:none"/>
     <script type="text/javascript">


         Class('App', 'linb.Com', {

             Instance: {

                 initialize: function () {

                     this.autoDestroy = true;

                     this.properties = {};
                 },

                 iniComponents: function () {
                     // [[code created by jsLinb UI Builder
                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "binder")
                .setName("binder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("系统帮助")
                .setImage("../../../Image/opeimage/page.gif")
            );

                     host.pane.append(
                (new linb.UI.Layout)
                .setHost(host, "ly")
                .setItems([{ "id": "before", "pos": "before", "min": 10, "size": 350, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            );

                     host.ly.append(
                (new linb.UI.TreeView)
                .setHost(host, "htreeview")
                .onItemSelected("_htreeview_onitemselected")
                .beforeExpend("_htreeview_beforeexpend")
            , "before");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "p2t")
                .setDock("top")
                .setHeight(50)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.p2t.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl2")
                .setLeft(20)
                .setTop(20)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#666666'>内容预览</span>")
            );

                     host.ly.append(
                (new linb.UI.Block)
                .setHost(host, "bview")
                .setDock("fill")
                .setOverflow("auto")
            , "main");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pt")
                .setDock("top")
                .setHeight(50)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.pt.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl")
                .setLeft(20)
                .setTop(20)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#666666'>标题</span>")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pl")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pr")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "p2l")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "p3r")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.pane.append(
                (new linb.UI.ToolBar)
                .setHost(host, "toolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增标题", "image": "../../../Image/opeimage/add.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑标题", "image": "../../../Image/opeimage/edit.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除标题", "image": "../../../Image/opeimage/del.gif"}], "caption": "grp1" }, { "id": "grp2", "sub": [{ "id": "b1", "caption": "新增文本", "image": "../../../Image/opeimage/add.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "b2", "caption": "编辑文本", "image": "../../../Image/opeimage/edit.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "b3", "caption": "删除文本", "image": "../../../Image/opeimage/del.gif"}], "caption": "grp2"}])
                .onClick("_toolbar_onclick")
            );

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "tdlg")
                .setLeft(121)
                .setTop(91)
                .setWidth(540)
                .setHeight(199)
                .setDisplay("none")
                .setCaption("标题")
                .setMinBtn(false)
                .setMaxBtn(false)
            );

                     host.tdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "ttoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_ttoolbar_onclick")
            );

                     host.tdlg.append(
                (new linb.UI.Input)
                .setHost(host, "hname")
                .setDataBinder("binder")
                .setDataField("hname")
                .setLeft(70)
                .setTop(50)
                .setWidth(380)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("标题")
                .setLabelHAlign("left")
            );

                     host.tdlg.append(
                (new linb.UI.Input)
                .setHost(host, "hid")
                .setDataBinder("binder")
                .setDataField("hid")
                .setLeft(40)
                .setTop(100)
                .setWidth(380)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
                .setValue("0")
            );

                     host.tdlg.append(
                (new linb.UI.Input)
                .setHost(host, "hpcode")
                .setDataBinder("binder")
                .setDataField("hpcode")
                .setLeft(40)
                .setTop(150)
                .setWidth(380)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
            );

                     host.tdlg.append(
                (new linb.UI.Input)
                .setHost(host, "hcode")
                .setDataBinder("binder")
                .setDataField("hcode")
                .setLeft(40)
                .setTop(150)
                .setWidth(380)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
            );

                     host.tdlg.append(
                (new linb.UI.Input)
                .setHost(host, "hccode")
                .setLeft(40)
                .setTop(150)
                .setWidth(380)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
            );

                     host.tdlg.append(
                (new linb.UI.Input)
                .setHost(host, "hpname")
                .setDataBinder("binder")
                .setDataField("hpname")
                .setReadonly(true)
                .setLeft(70)
                .setTop(100)
                .setWidth(380)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("栏目")
                .setLabelHAlign("left")
            );

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "wbdlg")
                .setLeft(60)
                .setTop(86)
                .setWidth(901)
                .setHeight(564)
                .setDisplay("none")
                .setCaption("内容")
                .setMinBtn(false)
                .setMaxBtn(false)
            );

                     host.wbdlg.append(
                (new linb.UI.Block)
                .setHost(host, "b1")
                .setDock("top")
                .setHeight(30)
                .setCustomStyle({ "KEY": "border-bottom:solid 1px #ccc" })
            );

                     host.b1.append(
                (new linb.UI.ToolBar)
                .setHost(host, "wbtoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_wbtoolbar_onclick")
            );

                     host.wbdlg.append(
                (new linb.UI.Block)
                .setHost(host, "b2")
                .setDock("fill")
            );

                     return children;
                     // ]]code created by jsLinb UI Builder
                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },

                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this; hcode = "";
                     // ns.b2.setHtml("<iframe name='Ued' src='../../TextEditor/LianVEditor.htm' width='1020' height='800' frameborder='no'  allowtransparency='yes' marginwidth='0' marginheight='0' border='0'></iframe>")
                     var Request = new Object();
                     Request = GetRequest();
                     IHelpItems("", ns.htreeview)
                 },
                 _wbtoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveContext()
                     }
                     ns.wbdlg.setDisplay("none")
                 },
                 _ttoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveHMenu()
                     }
                     ns.tdlg.setDisplay("none")
                 },
                 _htreeview_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     IHelpCItems(item, ns.htreeview);
                     QueryContext(item.id)
                 },
                 _htreeview_beforeexpend: function (profile, item) {
                     var ns = this, uictrl = profile.boxing();
                     IHelpCItems(item, ns.htreeview)
                 },
                 _toolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         var sm = ns.htreeview.getUIValue()
                         ns.tdlg.setDisplay("block")
                         InitHMenu(sm, "")
                     }
                     if (item.id == "a3") {
                         var sm = ns.htreeview.getUIValue();
                         if (sm == "" || sm == null) {
                             linb.message("请选择栏目")
                             return;
                         }
                         ns.tdlg.setDisplay("block")
                         InitHMenu("", sm)
                     }
                     if (item.id == "a4") {
                         var av = ns.htreeview.getUIValue();
                         if (av == "" || av == null) {
                             linb.message("请选择记录");
                             return
                         }
                         IDelFun("DelHMenu('" + av + "')")
                     }
                     if (item.id == "b1") {
                         var sm = ns.htreeview.getUIValue();
                         if (sm == "" || sm == null) {
                             linb.message("请选择栏目")
                             return;
                         }
                         ns.wbdlg.setDisplay("block")
                         InitContext(sm)
                     }
                     if (item.id == "b2") {
                         var sm = ns.htreeview.getUIValue();
                         if (sm == "" || sm == null) {
                             linb.message("请选择栏目")
                             return;
                         }
                         ns.wbdlg.setDisplay("block")
                         InitContext(sm)
                     }
                     if (item.id == "b3") {
                     }
                 }
             },
             Static: {
                 viewSize: { "width": 1024, "height": 768 }
             }
         });

         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function InitHMenu(pmcode,mcode) {
             var o = { "hpcode": pmcode, 'hcode': mcode }
             var url ="../../../HelpMenu/InitHmenu"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.hname.setValue(r.hname);
                 ns.hid.setValue(r.id)
                 ns.hpcode.setValue(r.hpcode)
                 ns.hpname.setValue(r.hpname)
                 ns.hcode.setValue(r.hcode)
             }
             else {
                 ns.hname.setValue();
                 ns.hid.setValue(0)
                 ns.hpcode.setValue()
                 ns.hpname.setValue()
                 ns.hcode.setValue()
             }
         }
         function SaveHMenu() {
             var url = "../../../HelpMenu/SaveHmenu"
             var db = linb.DataBinder.getFromName("binder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "", true)
         }
         function DelHMenu(v) {
             var o = { "hcode": v }
             var url = "../../../HelpMenu/DelHmenu"
             var b = AjaxExb(url, o);
             BackVad(b, "", true)
         }
         function InitContext(hcode) {
             var o = { 'hcode': hcode }
             var url = "../../../HelpMenu/InitHcontext"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.hccode.setValue(r.hcode);
                 $("#context").val(r.hcontext)
                 ns.b2.setHtml("<iframe name='Ued' src='../../TextEditor/LianVEditor.htm' width='1020' height='800' frameborder='no'  allowtransparency='yes' marginwidth='0' marginheight='0' border='0'></iframe>")
                // window.Ued.setContent(r.hcontext);
             }
         }
         function QueryContext(hcode) {
             var o = { 'hcode': hcode }
             var url = "../../../HelpMenu/InitHcontext"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.bview.setHtml(r.hcontext)
             }
         }
         function SaveContext() {
             var hc = ns.hccode.getUIValue();
             var hct = window.Ued.getContent() ;
             var o = { 'hcode': hc, 'hcontext': hct }
             var url = "../../../HelpMenu/SaveHcontext"
             var b = AjaxExb(url, o);
             BackVad(b, "", false)
         
         }
     </script>
</body>
</html>
