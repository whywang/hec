<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>发货地址管理</title>
    <link href="../../../Styles/Common/toastr.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/Idepment.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/toastr.js" type="text/javascript"></script>
     <script type="text/javascript">
         Class('App', 'linb.Com', {
             // 要确保键值对的值不能包含外部引用
             Instance: {
                 // 实例的属性要在此函数中初始化，不要直接放在Instance下
                 initialize: function () {
                     // 本Com是否随着第一个控件的销毁而销毁
                     this.autoDestroy = true;
                     // 初始化属性
                     this.properties = {};
                 },
                 // 初始化内部控件（通过界面编辑器生成的代码，大部分是界面控件）
                 // *** 如果您不是非常熟悉linb框架，请慎重手工改变本函数的代码 ***
                 iniComponents: function () {
                     // [[code created by jsLinb UI Builder
                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "binder")
                .setName("binder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("发货类型")
                 .setImage("../../../Image/opeimage/page.gif")
            );

                     host.pane.append(
                (new linb.UI.Pane)
                .setHost(host, "pt")
                .setDock("top")
                .setHeight(80)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            );

                     host.pt.append(
                (new linb.UI.ToolBar)
                .setHost(host, "toolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增", "image": "../../../Image/opeimage/add.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑", "image": "../../../Image/opeimage/edit.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除", "image": "../../../Image/opeimage/del.gif"}], "caption": "grp1"}])
                .onClick("_toolbar_onclick")
            );

                     host.pt.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl1")
                .setLeft(20)
                .setTop(50)
                .setCaption("<span style='color:#999999;font-weight:bolder;font-size:16px'>发货类型</span>")
            );

                     host.pane.append(
                (new linb.UI.Pane)
                .setHost(host, "pl")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            );

                     host.pane.append(
                (new linb.UI.Pane)
                .setHost(host, "pr")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            );

                     host.pane.append(
                (new linb.UI.Pane)
                .setHost(host, "pm")
                .setDock("fill")
                .setCustomStyle({ "KEY": "background:#ffffff" })
            );

                     host.pm.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "treegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(28)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 300, "type": "input", "caption": "发货类型" }, { "id": "col2", "width": 100, "type": "input", "caption": "可编辑"}])
                .setNoCtrlKey(false)
                .setValue("")
            );

                     append(
                (new linb.UI.Dialog)
                .setHost(host, "cdlg")
                .setLeft(150)
                .setTop(170)
                .setWidth(570)
                .setHeight(220)
                .setCaption("发货类型")
                .setMinBtn(false)
                .setMaxBtn(false)
                .setDisplay("none")
            );

                     host.cdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "cstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_cstoolbar_onclick")
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "sname")
                .setDataBinder("binder")
                .setDataField("sname")
                .setLeft(40)
                .setTop(50)
                .setWidth(230)
                .setHeight(48)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#999999;font-size:14px'>发货类型</span>")
                .setLabelHAlign("left")
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "scode")
                .setDataBinder("binder")
                .setDataField("scode")
                .setReadonly(true)
                .setLeft(300)
                .setTop(50)
                .setWidth(230)
                .setHeight(48)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#999999;font-size:14px'>发货编码</span>")
                .setLabelHAlign("left")
            );

                     host.cdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "estate")
                .setDataBinder("binder")
                .setDataField("estate")
                .setLeft(40)
                .setTop(110)
                .setWidth(215)
                .setHeight(48)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#999999;font-size:14px'>编辑状态</span>")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "0", "caption": "否" }, { "id": "1", "caption": "是"}])
            );
                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "sid")
                .setDataBinder("binder")
                .setDataField("sid")
                .setReadonly(true)
                .setLeft(300)
                .setTop(50)
                .setWidth(230)
                .setHeight(48)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='color:#999999;font-size:14px'>发货编码</span>")
                .setLabelHAlign("left")
                .setDisplay("none")
                .setUIValue("0")
            );
                     return children;
                     // ]]code created by jsLinb UI Builder
                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },

                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this;
                     QueryList();
                 },

                 _toolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         ns.cdlg.setDisplay("block")
                         InitSendType("")
                     }
                     if (item.id == "a3") {
                         var av = ns.treegrid.getUIValue();
                         if (av == "" || av == null) {
                             linb.warn("请选择记录");
                             return
                         }
                         ns.cdlg.setDisplay("block")
                         InitSendType(av)
                     }
                     if (item.id == "a4") {
                         var av = ns.treegrid.getUIValue();
                         if (av == "" || av == null) {
                             linb.warn("请选择记录");
                             return
                         }
                         linb.confirms("确定删除？","DelSendAddr('" + av + "')")
                     }
                 },
                 _cstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveSendType()
                     }
                     ns.cdlg.setDisplay("none")
                 }
             }
         });
         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function InitSendType(v) {
             var o = {"scode": v }
             var url = "../../../SendType/InitSendType"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 InitKj(r)
             }
             else {
                 InitUnKj()
             }
         }
         function SaveSendType() {
             var url = "../../../SendType/SaveSendType"
             var db = linb.DataBinder.getFromName("binder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "QueryList()", false)
         }
         function DelSendType(v) {
             var o = { "scode": v }
             var url = "../../../SendType/DelSendType"
             var b = AjaxExb(url, o);
             BackVad(b, "QueryList()", false)
         }
         function QueryList() {
             var url = "../../../SendType/QueryList";
             var b = AjaxEb(url);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.treegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[2] }, { "value": cel[4] }, { "value": cel[5]}] })
                 }
                 ns.treegrid.setRows(arr)
             }
         }
         function InitKj(r) {
             ns.sid.setValue(r.id)
             ns.sname.setValue(r.sname)
             ns.scode.setValue(r.scode)
             ns.estate.setValue(r.estate == true ? 1 : 0)
         }
         function InitUnKj() {
             ns.sid.setUIValue(0)
             ns.sname.setUIValue()
             ns.scode.setUIValue()
             ns.estate.setUIValue(r.estate == true ? 1 : 0)
         }
     </script>
</body>
</html>
