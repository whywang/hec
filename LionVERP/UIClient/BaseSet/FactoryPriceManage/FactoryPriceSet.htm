<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>工厂价格管理</title>
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/Idepment.js" type="text/javascript"></script>
     <script src="../../../Scripts/Api/IPricetype.js" type="text/javascript"></script>
     <script type="text/javascript">

         Class('App', 'linb.Com', {

             Instance: {

                 initialize: function () {

                     this.autoDestroy = true;

                     this.properties = {};
                 },

                 iniComponents: function () {
                     // [[code created by jsLinb UI Builder
                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("工厂采购价格")
                  .setImage("../../../Image/opeimage/page.gif")
            );

                     host.pane.append(
                (new linb.UI.ToolBar)
                .setHost(host, "toolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "设置", "image": "../../../Image/opeimage/set.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "重置", "image": "../../../Image/opeimage/reset.gif"}], "caption": "grp1"}])
                .onClick("_toolbar_onclick")
            );

                     host.pane.append(
                (new linb.UI.Layout)
                .setHost(host, "ly")
                .setItems([{ "id": "before1", "pos": "before", "min": 10, "size": 350, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "before", "pos": "before", "min": 10, "size": 350, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            );

                     host.ly.append(
                (new linb.UI.Block)
                .setHost(host, "b1")
                .setDock("fill")
            , "before1");

                     host.b1.append(
                (new linb.UI.TreeBar)
                .setHost(host, "ftreebar")
                .setSelMode("multibycheckbox")
                .setValue("")
                .onItemSelected("_ftreebar_onitemselected")
            );

                     host.b1.append(
                (new linb.UI.Pane)
                .setHost(host, "pft")
                .setDock("top")
                .setHeight(40)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            );

                     host.pft.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl1")
                .setLeft(20)
                .setTop(10)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#666666'>工厂列表</span>")
            );

                     host.b1.append(
                (new linb.UI.Pane)
                .setHost(host, "pfl")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            );

                     host.b1.append(
                (new linb.UI.Pane)
                .setHost(host, "pfr")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            );

                     host.ly.append(
                (new linb.UI.Block)
                .setHost(host, "b3")
                .setDock("fill")
            , "main");

                     host.b3.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "ptreegrid")
                .setSelMode("multibycheckbox")
                .setRowNumbered(true)
                .setHeaderHeight(28)
                .setRowHeight(30)
                .setHeader([{ "id": "col1", "width": 200, "type": "input", "caption": "价格类别"}])
                .setValue("")
                .onRowSelected("_ptreegrid_onrowselected")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pct")
                .setDock("top")
                .setHeight(40)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.pct.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl2")
                .setLeft(20)
                .setTop(10)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#666666'>城市列表</span>")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pcl")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pcr")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.ly.append(
                (new linb.UI.TreeBar)
                .setHost(host, "ctreebar")
                .onItemSelected("_ctreebar_onitemselected")
            , "before");

                     return children;
                     // ]]code created by jsLinb UI Builder
                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },

                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this;
                     prepurl = "../../../UIServer/BaseSet/FactoryPriceManage/FactoryPrice.aspx";
                     IdepItemsByAtrr("gc", ns.ftreebar)
                     IdepItemsByAtrr("cs", ns.ctreebar)
                     IPriceTable("cg", ns.ptreegrid)
                 },

                 _toolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SetFactoryCityPrice()
                     }
                     if (item.id == "a3") {
                         ReSetFactoryCityPrice()
                     }
                 },
                 _ftreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.ftreebar.setValue(item.id)
                     GetFactoryCityPrice()
                 },
                 _ptreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.ptreegrid.setValue(row.id)
                 },
                 _ctreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.ctreebar.setValue(item.id)
                     GetFactoryCityPrice()
                 }
             },
             Static: {
                 viewSize: { "width": 1280, "height": 1024 }
             }
         });
         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function GetFactoryCityPrice() {
             var fv = ns.ftreebar.getUIValue();
             var cv = ns.ctreebar.getUIValue();
             if (fv != null && fv != "" && cv != null && cv != "") {
                 var o = { "dcode": fv,"cdcode":cv }
                 var url = prepurl + "/GetFactoryPrice"
                 var b = AjaxExb(url, o);
                 if (b == "") {
                     linb.message("未设置价格类别")
                 }
                 else {
                     ns.ptreegrid.setValue(b)
                 }
             }
         }
         function SetFactoryCityPrice() {
             var fv = ns.ftreebar.getUIValue();
             var cv = ns.ctreebar.getUIValue();
             var pv = ns.ptreegrid.getUIValue();
             if (fv == "" || fv == null) {
                 linb.message("请选择工厂")
                 return false;
             }
             if (cv == "" || cv == null) {
                 linb.message("请选择城市")
                 return false;
             }
             if (pv == "" || pv == null) {
                 linb.message("请选择价格类别")
                 return false;
             }
             var o = { "dcode": fv,"ptcode": pv ,"cdcode":cv }
             var url = prepurl + "/SetFactoryPrice"
             var b = AjaxExb(url, o);
             BackVad(b, "", true)
         }
         function ReSetFactoryCityPrice() {
             var fv = ns.ftreebar.getUIValue();
             var cv = ns.ctreebar.getUIValue();
             if (fv == "" || fv == null) {
                 linb.message("请选择工厂")
                 return false;
             }
             if (cv == "" || cv == null) {
                 linb.message("请选择城市")
                 return false;
             }
             var o = { "dcode": fv ,"cdcode":cv}
             var url = prepurl + "/ReSetFactoryPrice"
             var b = AjaxExb(url, o);
             BackVad(b, "", true)
         }
     </script>
</body>
</html>

