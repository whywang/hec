<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>编码管理</title>
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/Ieventmenu.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/OrderType.js" type="text/javascript"></script>
     <script type="text/javascript">
         Class('App', 'linb.Com', {

             Instance: {

                 initialize: function () {

                     this.autoDestroy = true;

                     this.properties = {};
                 },

                 iniComponents: function () {
                     // [[code created by jsLinb UI Builder
                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "binder")
                .setName("binder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "panel")
                .setZIndex(1)
                .setCaption("单据编号设置")
            );

                     host.panel.append(
                (new linb.UI.ToolBar)
                .setHost(host, "toolbar")
               .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增", "image": "../../../Image/opeimage/add.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑", "image": "../../../Image/opeimage/edit.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除", "image": "../../../Image/opeimage/del.gif"}], "caption": "grp1"}])
               .onClick("_toolbar_onclick")
            );

                     host.panel.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "streegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(28)
                .setRowHeight(30)
                .setHeader([{ "id": "col1", "width": 120, "type": "input", "caption": "名称" }, { "id": "col1", "width": 120, "type": "input", "caption": "编码" }, { "id": "col1", "width": 120, "type": "input", "caption": "订单类型" }, { "id": "col3", "width": 120, "type": "input", "caption": "初始数量" }, { "id": "col4", "width": 140, "type": "input", "caption": "年份" }, { "id": "col4", "width": 120, "type": "input", "caption": "前缀"}])
                .setValue("")
                .onRowSelected("_streegrid_onrowselected")
            );

                     host.panel.append(
                (new linb.UI.Dialog)
                .setHost(host, "cdlg")
                .setLeft(100)
                .setTop(110)
                .setWidth(600)
                .setHeight(419)
                .setDisplay("none")
                .setCaption("编号设置")
                .setMinBtn(false)
                .setMaxBtn(false)
            );

                     host.cdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "sstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_sstoolbar_onclick")
            );

                     host.cdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "otype")
                .setDataBinder("binder")
                .setDataField("otype")
                .setLeft(40)
                .setTop(90)
                .setWidth(225)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("订单类型")
                .setLabelHAlign("left")
                .setType("listbox")
            );

                     host.cdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "ctype")
                .setDataBinder("binder")
                .setDataField("ctype")
                .setLeft(40)
                .setTop(190)
                .setWidth(225)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption(" 编码类型")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "rq", "caption": "日期型" }, { "id": "sl", "caption": "数量型"}])
                .onChange("_ctype_onchange")
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "inum")
                .setDataBinder("binder")
                .setDataField("inum")
                .setLeft(40)
                .setTop(140)
                .setWidth(240)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("初始数量")
                .setLabelHAlign("left")
                .setValue("0")
            );

                     host.cdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "years")
                .setDataBinder("binder")
                .setDataField("years")
                .setLeft(300)
                .setTop(90)
                .setWidth(225)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("年份")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "2019", "caption": "2019" }, { "id": "2020", "caption": "2020" }, { "id": "2021", "caption": "2021" }, { "id": "2022", "caption": "2022" }, { "id": "2023", "caption": "2023" }, { "id": "2024", "caption": "2024" }, { "id": "2025", "caption": "2025" }, { "id": "2026", "caption": "2026" }, { "id": "2027", "caption": "2027" }, { "id": "2028", "caption": "2028" }, { "id": "2029", "caption": "2029" }, { "id": "2030", "caption": "2030"}])
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "precode")
                .setDataBinder("binder")
                .setDataField("precode")
                .setLeft(300)
                .setTop(140)
                .setWidth(240)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("前缀")
                .setLabelHAlign("left")
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "id")
                .setDataBinder("binder")
                .setDataField("id")
                .setLeft(290)
                .setTop(150)
                .setWidth(270)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
                .setLabelCaption("ID")
                .setValue("0")
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "cname")
                .setDataBinder("binder")
                .setDataField("cname")
                .setLeft(40)
                .setTop(40)
                .setWidth(240)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("编码名称")
                .setLabelHAlign("left")
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "ccode")
                .setDataBinder("binder")
                .setDataField("ccode")
                .setReadonly(true)
                .setLeft(300)
                .setTop(40)
                .setWidth(240)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("编码编码")
                .setLabelHAlign("left")
            );

                     host.cdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "cystr")
                .setDataBinder("binder")
                .setDataField("cystr")
                .setLeft(40)
                .setTop(240)
                .setWidth(95)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("年份")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "yy", "caption": "年两位" }, { "id": "yyyy", "caption": "年四位"}])
            );

                     host.cdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "csjsstr")
                .setDataBinder("binder")
                .setDataField("csjsstr")
                .setLeft(170)
                .setTop(240)
                .setWidth(95)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("随机数")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "4", "caption": "4" }, { "id": "5", "caption": "5" }, { "id": "6", "caption": "6"}])
            );

                     host.cdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "cqstr")
                .setDataBinder("binder")
                .setDataField("cqstr")
                .setLeft(40)
                .setTop(290)
                .setWidth(95)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("区域")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "4", "caption": "4" }, { "id": "5", "caption": "5"}])
            );

                     host.cdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "ccstr")
                .setDataBinder("binder")
                .setDataField("ccstr")
                .setLeft(170)
                .setTop(290)
                .setWidth(95)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("城市")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "3", "caption": "3" }, { "id": "4", "caption": "4"}])
            );

                     host.cdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "czstr")
                .setDataBinder("binder")
                .setDataField("czstr")
                .setLeft(300)
                .setTop(290)
                .setWidth(95)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("总数")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "4", "caption": "4" }, { "id": "5", "caption": "5" }, { "id": "6", "caption": "6"}])
            );

                     host.cdlg.append(
                (new linb.UI.Input)
                .setHost(host, "csource")
                .setDataBinder("binder")
                .setDataField("csource")
                .setLeft(300)
                .setTop(190)
                .setWidth(240)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("数据源")
                .setLabelHAlign("left")
            );

                     return children;
                     // ]]code created by jsLinb UI Builder
                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },

                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this;
                     preurl = "../../../UIServer/BaseSet/CodeSetManage/CodeSet.aspx";
                     otobj = OrderType
                     otobj.IOrderTypeAllItems(ns.otype)
                     QueryList()
                 },
                 _toolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var v = ns.streegrid.getUIValue();
                     if (item.id == "a1") {
                         ns.cdlg.setDisplay("block");
                         InitCode("")
                     }
                     if (item.id == "a3") {
                         if (v != "") {
                             ns.cdlg.setDisplay("block");
                             InitCode(v)
                         }
                         else {
                             linb.message("请选择角色")
                         }
                     }
                     if (item.id == "a4") {
                         if (v != "") {
                             IDelFun("DelCode('" + v + "')")
                         }
                         else {
                             linb.message("请选择角色")
                         }
                     }
                 },
                 _sstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveCode()
                     }
                     else {
                         ns.cdlg.setDisplay("none")
                     }
                 },
                 _streegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.streegrid.setValue(row.id)
                 },
                 _ctype_onchange: function (profile, oldValue, newValue) {
                     var ns = this, uictrl = profile.boxing();
                     if (newValue == "rq") {
                         ns.cqstr.setUIValue("")
                         ns.ccstr.setUIValue("")
                         ns.czstr.setUIValue("")
                         ns.cqstr.setReadonly(true)
                         ns.ccstr.setReadonly(true)
                         ns.czstr.setReadonly(true)
                         ns.cystr.setReadonly(false)
                         ns.csjsstr.setReadonly(false)
                     }
                     if (newValue == "sl") {
                         ns.cystr.setUIValue("")
                         ns.csjsstr.setUIValue("")
                         ns.cystr.setReadonly(true)
                         ns.csjsstr.setReadonly(true)
                         ns.cqstr.setReadonly(false)
                         ns.ccstr.setReadonly(false)
                         ns.czstr.setReadonly(false)
                     }
                 }
             }
         });
         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function InitCode(v) {
             var o = { "ccode": v }
             var url = preurl + "/InitOrderCode"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 InitKj(r)
             }
         }
 
         function InitKj(r) {
             if (r != "") {
                 ns.cname.setValue(r.cname);
                 ns.ccode.setValue(r.ccode);
                 ns.years.setValue(r.years);
                 ns.otype.setValue(r.emcode);
               //  ns.city.setValue(r.citytype);
                 ns.inum.setValue(r.inum);
                 ns.precode.setValue(r.prestr);
                 ns.id.setValue(r.id);
             }
             else {
                 ns.cname.setValue( );
                 ns.ccode.setValue( );
                 ns.years.setValue( );
                 ns.otype.setValue( );
                 ns.city.setValue(r );
                 ns.inum.setValue(0);
                 ns.years.setValue();
                 ns.precode.setValue("");
                 ns.id.setValue(0);
             }
         }
         function SaveCode() {
             var url = preurl + "/SaveOrderCode"
             var db = linb.DataBinder.getFromName("binder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "QueryList() ", false)
         }
         function QueryList() {

             var url = preurl + "/QueryList"
             var b = AjaxEb(url);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.streegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[0] }, { "value": cel[2] }, { "value": cel[3] }, { "value": cel[4] }, { "value": cel[5] }, { "value": cel[6]}] })
                 }
                 ns.streegrid.setRows(arr)
             }
         }
         function DelCode(v) {
             var o = { "ccode": v }
             var url = preurl + "/DelOrderCode"
             var b = AjaxExb(url, o);
             BackVad(b, "QueryList() ", false)
         }
     </script>
</body>
</html>
