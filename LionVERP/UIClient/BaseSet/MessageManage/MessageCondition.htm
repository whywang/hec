<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>消息推送管理</title>
    <link href="../../../Styles/Common/toastr.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/Irole.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/Ieventmenu.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/Iworkflow.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/IEmployee.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/IMsgAttr.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/toastr.js" type="text/javascript"></script>
     <script type="text/javascript">

         Class('App', 'linb.Com', {

             Instance: {

                 initialize: function () {

                     this.autoDestroy = true;

                     this.properties = {};
                 },

                 iniComponents: function () {
                     // [[code created by jsLinb UI Builder
                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "binder")
                .setName("binder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("事件通知管理")
                .setImage("../../../Image/opeimage/page.gif")
            );

                     host.pane.append(
                (new linb.UI.Tabs)
                .setHost(host, "tab")
                .setItems([{ "id": "a", "caption": "流程事件" }, { "id": "b", "caption": "特殊事件"}])
                .setValue("a")
                .onItemSelected("_tab_onitemselected")
            );

                     host.tab.append(
                (new linb.UI.Layout)
                .setHost(host, "ly")
                .setItems([{ "id": "before1", "pos": "before", "min": 10, "size": 300, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "before2", "pos": "before", "min": 10, "size": 300, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "before3", "pos": "before", "min": 10, "size": 300, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            , "a");

                     host.ly.append(
                (new linb.UI.TreeBar)
                .setHost(host, "emtreebar")
                .onItemSelected("_emtreebar_onitemselected")
                .beforeExpend("_emtreebar_beforeexpend")
            , "before1");

                     host.ly.append(
                (new linb.UI.TreeBar)
                .setHost(host, "wftreebar")
                .onItemSelected("_wftreebar_onitemselected")
            , "before2");

                     host.ly.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "btreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 120, "type": "input", "caption": "事件" }, { "id": "col2", "width": 120, "type": "input", "caption": "编码"}])
                .setValue("")
                .onRowSelected("_btreegrid_onrowselected")
            , "before3");

                     host.ly.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "mtreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 120, "type": "input", "caption": "名称" }, { "id": "col2", "width": 120, "type": "input", "caption": "编码"}])
                .setValue("")
                .onRowSelected("_mtreegrid_onrowselected")
            , "main");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pa1t")
                .setDock("top")
                .setHeight(50)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before1");

                     host.pa1t.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl1")
                .setLeft(20)
                .setTop(20)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#666666'>系统流程</span>")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pa1l")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before1");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pa1r")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before1");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "p2t")
                .setDock("top")
                .setHeight(50)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before2");

                     host.p2t.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl2")
                .setLeft(20)
                .setTop(20)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#666666'>流程节点</span>")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "p2l")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before2");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "p2r")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before2");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "p3t")
                .setDock("top")
                .setHeight(50)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before3");

                     host.p3t.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl3")
                .setLeft(20)
                .setTop(20)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#666666'>事件</span>")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "p3l")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before3");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "p3r")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before3");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "p4t")
                .setDock("top")
                .setHeight(50)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.p4t.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl4")
                .setLeft(20)
                .setTop(20)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#666666'>消息</span>")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "p4l")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "p4r")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.tab.append(
                (new linb.UI.Layout)
                .setHost(host, "lyt")
                .setItems([{ "id": "before1", "pos": "before", "min": 10, "size": 300, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "before", "pos": "before", "min": 10, "size": 300, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            , "b");

                     host.lyt.append(
                (new linb.UI.TreeBar)
                .setHost(host, "temtreebar")
                .setItems([{ "id": "node1", "sub": ["node11", { "id": "node12", "image": "img/demo.gif" }, "node13", "node14"], "caption": "node1" }, { "id": "node2", "sub": ["node21", "node22", "node23", "node24"], "caption": "node2"}])
                .onItemSelected("_temtreebar_onitemselected")
            , "before1");

                     host.lyt.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "tbtreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 120, "type": "input", "caption": "名称" }, { "id": "col2", "width": 120, "type": "input", "caption": "编码"}])
                .setValue("")
                .onRowSelected("_tbtreegrid_onrowselected")
            , "before");

                     host.lyt.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "tmtreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 120, "type": "input", "caption": "名称" }, { "id": "col2", "width": 120, "type": "input", "caption": "编码"}])
                .setValue("")
                .onRowSelected("_tmtreegrid_onrowselected")
            , "main");

                     host.lyt.append(
                (new linb.UI.Pane)
                .setHost(host, "pbt")
                .setDock("top")
                .setHeight(50)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before1");

                     host.pbt.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl5")
                .setLeft(20)
                .setTop(20)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#666666'>系统流程</span>")
            );

                     host.lyt.append(
                (new linb.UI.Pane)
                .setHost(host, "pbl")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before1");

                     host.lyt.append(
                (new linb.UI.Pane)
                .setHost(host, "pbr")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before1");

                     host.lyt.append(
                (new linb.UI.Pane)
                .setHost(host, "p5t")
                .setDock("top")
                .setHeight(50)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.p5t.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl6")
                .setLeft(20)
                .setTop(20)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#666666'>特殊事件</span>")
            );

                     host.lyt.append(
                (new linb.UI.Pane)
                .setHost(host, "p5l")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.lyt.append(
                (new linb.UI.Pane)
                .setHost(host, "p5r")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.lyt.append(
                (new linb.UI.Pane)
                .setHost(host, "p6t")
                .setDock("top")
                .setHeight(50)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.p6t.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl7")
                .setLeft(30)
                .setTop(20)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#666666'>消息</span>")
            );

                     host.lyt.append(
                (new linb.UI.Pane)
                .setHost(host, "p6l")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.lyt.append(
                (new linb.UI.Pane)
                .setHost(host, "p6r")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.pane.append(
                (new linb.UI.ToolBar)
                .setHost(host, "toolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增", "image": "../../../Image/opeimage/add.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑", "image": "../../../Image/opeimage/edit.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除", "image": "../../../Image/opeimage/del.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a5", "caption": "属性设置", "image": "../../../Image/opeimage/set.gif"}], "caption": "grp1"}])
                .onClick("_toolbar_onclick")
            );

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "mdlg")
                .setLeft(339)
                .setTop(98)
                .setWidth(561)
                .setHeight(472)
                .setDisplay("none")
                .setCaption("通知")
                .setMinBtn(false)
                .setMaxBtn(false)
            );

                     host.mdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "stoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_stoolbar_onclick")
            );

                     host.mdlg.append(
                (new linb.UI.Input)
                .setHost(host, "mname")
                .setDataBinder("binder")
                .setDataField("mname")
                .setLeft(80)
                .setTop(50)
                .setWidth(370)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("名称")
                .setLabelHAlign("left")
            );

                     host.mdlg.append(
                (new linb.UI.Input)
                .setHost(host, "mcode")
                .setDataBinder("binder")
                .setDataField("mcode")
                .setReadonly(true)
                .setLeft(80)
                .setTop(100)
                .setWidth(370)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("编码")
                .setLabelHAlign("left")
            );

                     host.mdlg.append(
                (new linb.UI.Input)
                .setHost(host, "ename")
                .setDataBinder("binder")
                .setDataField("ename")
                .setReadonly(true)
                .setLeft(80)
                .setTop(200)
                .setWidth(370)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("人员")
                .setLabelHAlign("left")
                .onFocus("_ename_onfocus")
            );

                     host.mdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "rcode")
                .setDataBinder("binder")
                .setDataField("rcode")
                .setLeft(80)
                .setTop(150)
                .setWidth(355)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("角色")
                .setLabelHAlign("left")
                .setType("listbox")
            );

                     host.mdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "mstate")
                .setDataBinder("binder")
                .setDataField("mstate")
                .setLeft(80)
                .setTop(250)
                .setWidth(355)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("状态")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "1", "caption": "通过" }, { "id": "-1", "caption": "驳回" }, { "id": "0", "caption": "无"}])
            );

                     host.mdlg.append(
                (new linb.UI.Input)
                .setHost(host, "id")
                .setDataBinder("binder")
                .setDataField("id")
                .setLeft(60)
                .setTop(250)
                .setWidth(370)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
                .setLabelCaption("id")
                .setValue("0")
            );

                     host.mdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "mcity")
                .setDataBinder("binder")
                .setDataField("mcity")
                .setLeft(80)
                .setTop(300)
                .setWidth(355)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("城市账号")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "0", "caption": "否" }, { "id": "1", "caption": "是"}])
                .setValue("0")
            );

                     host.mdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "murl")
                .setDataBinder("binder")
                .setDataField("murl")
                .setLeft(80)
                .setTop(350)
                .setWidth(355)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("展示页面")
                .setLabelHAlign("left")
                .setType("listbox")
            );

                     host.mdlg.append(
                (new linb.UI.Input)
                .setHost(host, "bcode")
                .setDataBinder("binder")
                .setDataField("bcode")
                .setLeft(60)
                .setTop(250)
                .setWidth(355)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
                .setLabelCaption("城市账号")
            );

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "pdlg")
                .setLeft(380)
                .setTop(370)
                .setWidth(481)
                .setHeight(370)
                .setZIndex(1001)
                .setDisplay("none")
                .setCaption("人员列表")
                .setMinBtn(false)
                .setMaxBtn(false)
            );

                     host.pdlg.append(
                (new linb.UI.Pane)
                .setHost(host, "plpane")
                .setDock("top")
                .setHeight(30)
            );

                     host.plpane.append(
                (new linb.UI.ToolBar)
                .setHost(host, "ptoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true}], "caption": "grp1"}])
                .onClick("_ptoolbar_onclick")
            );

                     host.pdlg.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "ptreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 200, "type": "input", "caption": "人员" }, { "id": "col2", "width": 140, "type": "input", "caption": "部门"}])
                .setValue("")
            );

                     return children;
                     // ]]code created by jsLinb UI Builder
                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },

                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this;
                     preurl = "../../../MessageSend";
                     prewurl = "../../../UIServer/BaseSet/WorkFlowManage/WorkFlow.aspx";
                     preburl = "../../../UIServer/BaseSet/WorkFlowManage/Buttons.aspx";
                     IroleItems(ns.rcode);
                     IMsgAttr(ns.murl)
                 },

                 _emtreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.emtreebar.setValue(item.id)
                     IwfItems(item.id, ns.wftreebar)
                 },
                 _emtreebar_beforeexpend: function (profile, item) {
                     var ns = this, uictrl = profile.boxing();
                 },
                 _wftreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.wftreebar.setValue(item.id)
                     QueryList(item.id)
                 },
                 _btreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.btreegrid.setValue(row.id);
                     QueryListMsg(row.id);
                 },
                 _mtreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.mtreegrid.setValue(row.id)
                 },
                 _temtreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     QueryListTButton(item.id)
                     ns.temtreebar.setValue(item.id)
                 },
                 _tbtreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.tbtreegrid.setValue(row.id)
                 },
                 _tmtreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                 },
                 _tab_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a") {
                         IeventmenuItems(1, "", "", "", ns.emtreebar)
                     }
                     if (item.id == "b") {
                         IeventmenuItems(1, "", "", "", ns.temtreebar)
                     }
                 },
                 _toolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var smv = ns.btreegrid.getUIValue();
                     var stv = ns.tbtreegrid.getUIValue();
                     var stabv = ns.tab.getUIValue();
                     var mmv = ns.mtreegrid.getUIValue();
                     var ttv = ns.tmtreegrid.getUIValue();
                     var sbv = "";
                     if (item.id == "a1") {
                         if (stabv == "a") {
                             if (smv == null || smv == "") {
                                 linb.message("请选择事件");
                                 return;
                             }
                             sbv = smv;
                         }
                         if (stabv == "b") {
                             if (stv == null || stv == "") {
                                 linb.message("请选择事件");
                                 return;
                             }
                             sbv = stv;
                         }
                         ns.mdlg.setDisplay("block");
                         InitMes(sbv, "")
                     }
                     if (item.id == "a3") {
                         if (stabv == "a") {
                             if (mmv == null || mmv == "") {
                                 linb.message("请选择事件");
                                 return;
                             }
                             sbv = mmv;
                         }
                         if (stabv == "b") {
                             if (ttv == null || ttv == "") {
                                 linb.message("请选择事件");
                                 return;
                             }
                             sbv = ttv;
                         }
                         ns.mdlg.setDisplay("block");
                         InitMes("", sbv)
                     }
                     if (item.id == "a4") {
                         if (stabv == "a") {
                             if (mmv == null || mmv == "") {
                                 linb.message("请选择事件");
                                 return;
                             }
                             sbv = mmv;
                         }
                         if (stabv == "b") {
                             if (ttv == null || ttv == "") {
                                 linb.message("请选择事件");
                                 return;
                             }
                             sbv = ttv;
                         }
                         IDelFun("DelMsg('" + sbv + "')")
                     }
                     if (item.id == "a5") {
                         window.location.href = 'MessageAttr.htm'
                     }
                 },
                 _stoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveMes();
                     }
                     if (item.id == "a3") {
                         ns.mdlg.setDisplay("none");
                         ns.pdlg.setDisplay("none");
                     }
                 },
                 _ename_onfocus: function (profile) {
                     var ns = this, uictrl = profile.boxing();
                     ns.pdlg.setDisplay("block");
                     IEmployeeRow(ns.ptreegrid);
                     var pv = ns.ename.getUIValue();
                     ns.ptreegrid.setValue(pv);
                 },
                 _ptoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var pv = ns.ptreegrid.getUIValue();
                     ns.ename.setValue(pv);
                     ns.pdlg.setDisplay("none");
                 }
             },
             Static: {
                 viewSize: { "width": 1280, "height": 1024 }
             }
         });
         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function InitMes(bv,mv) {
             var url = preurl + "/InitMsg";
             var o = { "bcode": bv,"mcode":mv };
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.id.setValue(r.id);
                 ns.mname.setValue(r.mname);
                 ns.mcode.setValue(r.mcode);
                 ns.rcode.setValue(r.rcode);
                 ns.ename.setValue(r.ename);
                 ns.mstate.setValue(r.mstate);
                 ns.mcity.setValue(r.mcity);
                 ns.bcode.setValue(r.bcode);
             }
         }
         function SaveMes() {
             var url = preurl + "/SaveMsg"
             var db = linb.DataBinder.getFromName("binder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "", false);
             ns.mdlg.setDisplay("none");
             ns.pdlg.setDisplay("none");
         }
         function QueryListMsg(bv) {
             var url = preurl + "/QueryList";
             var o = { "bcode": bv };
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.mtreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[0] }] })
                 }
                 ns.mtreegrid.setRows(arr)
             }
         }
         function DelMsg(mv) {
             var url = preurl + "/DelMsg";
             var o = {  "mcode": mv };
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
            
         }
         function QueryList(wcode) {
             var url = preburl + "/QueryListWButton";
             var o = { "wcode": wcode };
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.btreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[2] }, { "value": cel[0] } ] })
                 }
                 ns.btreegrid.setRows(arr)
             }
         }
         function QueryListTButton(v) {
             var url = preburl + "/QueryListTButton";
             var o = { "emcode": v };
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.tbtreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [  { "value": cel[2] }, { "value": cel[0] }] })
                 }
                 ns.tbtreegrid.setRows(arr)
             }
         }
          
     </script>
</body>
</html>

