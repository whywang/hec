<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>门扇材质</title>
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/IInventory.js" type="text/javascript"></script>
     <script type="text/javascript">

         Class('App', 'linb.Com', {

             Instance: {

                 initialize: function () {

                     this.autoDestroy = true;

                     this.properties = {};
                 },

                 iniComponents: function () {

                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "binder")
                .setName("binder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("门扇材质")
            );

                     host.pane.append(
                (new linb.UI.Layout)
                .setHost(host, "ly")
                .setItems([{ "id": "before", "pos": "before", "min": 300, "size": 300, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            );

                     host.ly.append(
                (new linb.UI.TreeBar)
                .setHost(host, "itreebar")
                .setItems([{ "id": "node1", "sub": ["node11", { "id": "node12", "image": "img/demo.gif" }, "node13", "node14"], "caption": "node1" }, { "id": "node2", "sub": ["node21", "node22", "node23", "node24"], "caption": "node2"}])
                .onItemSelected("_itreebar_onitemselected")
                .beforeExpend("_itreebar_beforeexpend")
            , "before");

                     host.ly.append(
                (new linb.UI.ToolBar)
                .setHost(host, "ctoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除"}], "caption": "grp1"}])
                .onClick("_ctoolbar_onclick")
            , "main");

                     host.ly.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "ctreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(28)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 160, "type": "input", "caption": "材质名称" }, { "id": "col2", "width": 120, "type": "input", "caption": "材质编码"}])
                .setValue("")
                 .onRowSelected("_ctreegrid_onrowselected")
            , "main");

                     host.pane.append(
                (new linb.UI.ToolBar)
                .setHost(host, "stoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "设置" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "重置"}], "caption": "grp1"}])
                .onClick("_stoolbar_onclick")
            );

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "czdlg")
                .setLeft(150)
                .setTop(110)
                .setWidth(550)
                .setHeight(190)
                .setCaption("材质")
                .setMinBtn(false)
                .setMaxBtn(false)
                .setDisplay("none")
            );

                     host.czdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "cstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_cstoolbar_onclick")
            );

                     host.czdlg.append(
                (new linb.UI.Input)
                .setHost(host, "czname")
                .setDataBinder("binder")
                .setDataField("czname")
                .setLeft(60)
                .setTop(50)
                .setWidth(360)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("材质名称")
            );

                     host.czdlg.append(
                (new linb.UI.Input)
                .setHost(host, "czcode")
                .setDataBinder("binder")
                .setDataField("czcode")
                .setReadonly(true)
                .setLeft(60)
                .setTop(100)
                .setWidth(360)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("材质编码")
            );

                     host.czdlg.append(
                (new linb.UI.Input)
                .setHost(host, "czid")
                .setDataBinder("binder")
                .setDataField("czid")
                .setLeft(80)
                .setTop(80)
                .setWidth(360)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
                .setLabelCaption("ID")
                .setValue("0")
            );

                     return children;

                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },

                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this;
                     preurl = "../../../MsCz";
                     IinvItems("", ns.itreebar);
                     QueryList();
                 },

                 _cstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveMc();
                     }
                     else {
                         ns.czdlg.setDisplay("none")
                     }
                 },
                 _stoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var iv = ns.itreebar.getUIValue();
                     if (iv == "" || iv == null) {
                         linb.message("请选择门扇产品");
                         return
                     }
                     if (item.id == "a1") {
                         var cv = ns.ctreegrid.getUIValue();
                         if (cv == "" || cv == null) {
                             linb.message("请选择门扇材质");
                             return
                         }
                         SetMsCz( iv,cv);
                     }
                     if (item.id == "a3") {
                         ReSetMsCz(iv);
                     }
                 },
                 _itreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     IinvCItems(item, ns.itreebar);
                     GetMsCz(item.id);
                 },
                 _itreebar_beforeexpend: function (profile, item) {
                     var ns = this, uictrl = profile.boxing();
                     IinvCItems(item, ns.itreebar)
                 },
                 _ctoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var sv = ns.ctreegrid.getUIValue();
                     if (item.id == "a1") {
                         ns.czdlg.setDisplay("block");
                         InitMc("");
                     }
                     if (item.id == "a3") {
                         if (sv == "" || sv == null) {
                             linb.message("请选择材质");
                             return;
                         }
                         else {
                             ns.czdlg.setDisplay("block");
                             InitMc(sv);
                         }
                     }
                     if (item.id == "a4") {
                         if (sv == "" || sv == null) {
                             linb.message("请选择材质");
                             return;
                         }
                         else {
                             IDelFun("DelMc('" + sv + "')")
                         }
                     }
                 },
                 _ctreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     ns.ctreegrid.setValue(row.id)
                 }
             }
         });
         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function InitMc(v) {
             var o = { "czcode": v }
             var url = preurl + "/InitMsCz"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.czcode.setValue(r.czcode);
                 ns.czname.setValue(r.czname);
                 ns.czid.setValue(r.id);
             }
         }
         function SaveMc() {
             var url = preurl + "/SaveMsCz"
             var db = linb.DataBinder.getFromName("binder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "QueryList() ", false);
             ns.czdlg.setDisplay("none")
         }
         function DelMc(v) {
             var o = { "czcode": v }
             var url = preurl + "/DelMsCz"
             var b = AjaxExb(url, o);
             BackVad(b, "QueryList() ", false)
         }
         function QueryList() {
             var url = preurl + "/QueryList";
             var b = AjaxEb(url);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.ctreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[0] }] })
                 }
                 ns.ctreegrid.setRows(arr)
             }
         }
         function SetMsCz(iv,cv) {
             var o = { "icode":iv,"czcode": cv }
             var url = preurl + "/SetMsCz"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
         }
         function ReSetMsCz(iv) {
             var o = { "icode": iv}
             var url = preurl + "/ReSetMsCz"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
         }

         function GetMsCz(iv) {
             var o = { "icode": iv}
             var url = preurl + "/GetMsCz"
             var b = AjaxExb(url, o);
             if (b) {
                 ns.ctreegrid.setValue(b);
             }
             else {
                 ns.ctreegrid.setValue("");
                 linb.message("未设置门扇材质");
             }
         }
     </script>
</body>
</html>
