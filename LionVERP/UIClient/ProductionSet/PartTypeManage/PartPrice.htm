<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>配套产品</title>
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/IInventory.js" type="text/javascript"></script>
     <script type="text/javascript">
 
         Class('App', 'linb.Com', {
          
             Instance: {
         
                 initialize: function () {
           
                     this.autoDestroy = true;
         
                     this.properties = {};
                 },
                 
                 iniComponents: function () {
              
                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "binder")
                .setName("binder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("部件价格管理")
            );

                     host.pane.append(
                (new linb.UI.Tabs)
                .setHost(host, "tb")
                .setItems([{ "id": "a", "caption": "门墩"}])
                .setValue("a")
            );

                     host.tb.append(
                (new linb.UI.ToolBar)
                .setHost(host, "stoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "设置" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "重置"}], "caption": "grp1"}])
                .onClick("_stoolbar_onclick")
            , "a");

                     host.tb.append(
                (new linb.UI.Layout)
                .setHost(host, "mdly")
                .setItems([{ "id": "n", "pos": "before", "min": 300, "size": 300, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "o", "min": 400, "pos": "before", "size": 400, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            , "a");

                     host.mdly.append(
                (new linb.UI.TreeBar)
                .setHost(host, "itreebar")
                .setItems([{ "id": "node1", "sub": ["node11", { "id": "node12", "image": "img/demo.gif" }, "node13", "node14"], "caption": "node1" }, { "id": "node2", "sub": ["node21", "node22", "node23", "node24"], "caption": "node2"}])
                .onItemSelected("_itreebar_onitemselected")
                .beforeExpend("_itreebar_beforeexpend")
            , "n");

                     host.mdly.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "ptreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(28)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 140, "type": "input", "caption": "产品名称" }, { "id": "col2", "width": 60, "type": "input", "caption": "产品编码" }, { "id": "col3", "width": 120, "type": "input", "caption": "产品材质"}])
                .setValue("")
                .onRowSelected("_ptreegrid_onrowselected")
            , "o");

                     host.mdly.append(
                (new linb.UI.ToolBar)
                .setHost(host, "dtoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除"}], "caption": "grp1"}])
                .onClick("_dtoolbar_onclick")
            , "main");

                     host.mdly.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "dtreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(28)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 120, "type": "input", "caption": "名称" }, { "id": "col2", "width": 80, "type": "input", "caption": "编码" }, { "id": "col3", "width": 100, "type": "input", "caption": "金额"}])
                .setValue("")
                .onRowSelected("_dtreegrid_onrowselected")
            , "main");

                     host.tb.append(
                (new linb.UI.Dialog)
                .setHost(host, "mddlg")
                .setLeft(210)
                .setTop(160)
                .setWidth(550)
                .setHeight(420)
                .setCaption("门墩")
                .setMinBtn(false)
                .setMaxBtn(false)
            , "a");

                     host.mddlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "dstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_dstoolbar_onclick")
            );

                     host.mddlg.append(
                (new linb.UI.Input)
                .setHost(host, "dzname")
                .setDataBinder("binder")
                .setDataField("dzname")
                .setLeft(70)
                .setTop(50)
                .setWidth(340)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("名称")
            );

                     host.mddlg.append(
                (new linb.UI.Input)
                .setHost(host, "dzcode")
                .setDataBinder("binder")
                .setDataField("dzcode")
                .setReadonly(true)
                .setLeft(70)
                .setTop(90)
                .setWidth(340)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("编码")
            );

                     host.mddlg.append(
                (new linb.UI.Input)
                .setHost(host, "dznum")
                .setDataBinder("binder")
                .setDataField("dznum")
                .setLeft(70)
                .setTop(130)
                .setWidth(340)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("数量")
                .setValue("4")
            );

                     host.mddlg.append(
                (new linb.UI.Input)
                .setHost(host, "sprice")
                .setDataBinder("binder")
                .setDataField("sprice")
                .setLeft(70)
                .setTop(170)
                .setWidth(340)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("销售价格")
                .setValue("0")
            );

                     host.mddlg.append(
                (new linb.UI.Input)
                .setHost(host, "gprice")
                .setDataBinder("binder")
                .setDataField("gprice")
                .setLeft(70)
                .setTop(210)
                .setWidth(340)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("供货价格")
                .setValue("0")
            );

                     host.mddlg.append(
                (new linb.UI.Input)
                .setHost(host, "cprice")
                .setDataBinder("binder")
                .setDataField("cprice")
                .setLeft(70)
                .setTop(250)
                .setWidth(340)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("生产价格")
                .setValue("0")
            );

                     host.mddlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "dzarea")
                .setDataBinder("binder")
                .setDataField("dzarea")
                .setLeft(70)
                .setTop(290)
                .setWidth(340)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("区域")
                .setType("listbox")
                .setItems([{ "id": "a", "caption": "item a", "image": "img/demo.gif" }, { "id": "b", "caption": "item b", "image": "img/demo.gif" }, { "id": "c", "caption": "item c", "image": "img/demo.gif" }, { "id": "d", "caption": "item d", "image": "img/demo.gif", "disabled": true}])
            );

                     host.mddlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "dzcity")
                .setDataBinder("binder")
                .setDataField("dzcity")
                .setLeft(70)
                .setTop(330)
                .setWidth(340)
                .setHeight(25)
                .setLabelSize(60)
                .setLabelCaption("城市")
                .setType("listbox")
                .setItems([{ "id": "a", "caption": "item a", "image": "img/demo.gif" }, { "id": "b", "caption": "item b", "image": "img/demo.gif" }, { "id": "c", "caption": "item c", "image": "img/demo.gif" }, { "id": "d", "caption": "item d", "image": "img/demo.gif", "disabled": true}])
            );

                     return children;
    
                 },
           
                 iniExComs: function (com, threadid) {
                 },
            
                 customAppend: function (parent, subId, left, top) {
                    
                     return false;
                 },
        
                 events: {},
 
                 _stoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                 },
                 _dtoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                 },
                 _dstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                 },
                 _itreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                 },
                 _itreebar_beforeexpend: function (profile, item) {
                     var ns = this, uictrl = profile.boxing();
                 },
                 _ptreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                 },
                 _dtreegrid_onrowselected: function (profile, row, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                 }
             },
             Static: {
                 viewSize: { "width": 1024, "height": 768 }
             }
         });
         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function InitInvPart(v) {
             var o = { "pcode": v }
             var url = preurl + "/InitPartType"
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 InitKj(r)
             }
             else {
                 InitUnKj()
             }
         }
         function InitKj(r) {
             ns.bname.setValue(r.pname)
             ns.bcode.setValue(r.pcode)
             ns.btype.setValue(r.ptype)
             ns.bid.setValue(r.id)
         }
         function InitUnKj() {
             ns.bname.setValue()
             ns.bcode.setValue()
             ns.btype.setValue()
             ns.bid.setValue(0)
         }
         function SaveInvPart() {
             var url = preurl + "/SavePartType"
             var db = linb.DataBinder.getFromName("binder");
             var o = db.updateDataFromUI().getData();
             var b = AjaxExb(url, o)
             BackVad(b, "Reload()", false)
         }
         function Reload() {
             QueryList();
             ns.bjdlg.setDisplay("none")
         }
         function DelInvPart(v) {
             var o = { "pcode": v }
             var url = preurl + "/DelPartType"
             var b = AjaxExb(url, o);
             BackVad(b, " Reload()", false)
         }
         function QueryList() {
             var url = preurl + "/QueryList";
             var b = AjaxEb(url);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.btreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[2]}] })
                 }
                 ns.btreegrid.setRows(arr)
             }
         }


         function SetInvPart(pv, nv) {
             var o = { "icode": pv, "pcode": nv }
             var url = preurl + "/SetProductionPart"
             var b = AjaxExb(url, o);
             BackVad(b, "", true)
         }
         function ReSetInvPart(pv) {
             var o = { "icode": pv }
             var url = preurl + "/ReSetProductionPart"
             var b = AjaxExb(url, o);
             BackVad(b, "", true)
         }
         function GetInvPart(pv) {
             var o = { "icode": pv }
             var url = preurl + "/GetProductionPart"
             var b = AjaxExb(url, o);
             if (b == "") {
                 linb.message("未设置部件类型");
             }
             else {
                 ns.btreegrid.setValue(b)
             }
         }
     </script>
</body>
</html>
