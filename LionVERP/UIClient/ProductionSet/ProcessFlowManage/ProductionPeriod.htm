<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>产品工期</title>
    <link href="../../../Styles/Common/toastr.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div id='loading'>
        <img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/IInventory.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/Idepment.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/toastr.js" type="text/javascript"></script>
    <script type="text/javascript">

        Class('App', 'linb.Com', {

            Instance: {

                initialize: function () {

                    this.autoDestroy = true;

                    this.properties = {};
                },

                iniComponents: function () {
                    // [[code created by jsLinb UI Builder
                    var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                    append(
                (new linb.DataBinder)
                .setHost(host, "binder")
                .setName("binder")
            );

                    append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("产品工期设置")
            );

                    host.pane.append(
                (new linb.UI.Layout)
                .setHost(host, "ly")
                .setItems([{ "id": "before", "pos": "before", "min": 10, "size": 350, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "before1", "pos": "before", "min": 10, "size": 350, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            );

                    host.ly.append(
                (new linb.UI.ToolBar)
                .setHost(host, "gtoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增", "image": "../../../Image/opeimage/add.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑", "image": "../../../Image/opeimage/edit.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除", "image": "../../../Image/opeimage/del.gif"}], "caption": "grp1"}])
                .onClick("_gtoolbar_onclick")
            , "main");

                    host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pit")
                .setDock("top")
                .setHeight(50)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                    host.pit.append(
                (new linb.UI.SLabel)
                .setHost(host, "ls1")
                .setLeft(20)
                .setTop(20)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#999999'>产品类别</span>")
            );

                    host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pil")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                    host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pir")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                    host.ly.append(
                (new linb.UI.TreeBar)
                .setHost(host, "itreebar")
                .onItemSelected("_itreebar_onitemselected")
                .beforeExpend("_itreebar_beforeexpend")
            , "before");

                    host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pdt")
                .setDock("top")
                .setHeight(50)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before1");

                    host.pdt.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl2")
                .setLeft(20)
                .setTop(20)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#999999'>工厂</span>")
            );

                    host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pdl")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before1");

                    host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pdr")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before1");

                    host.ly.append(
                (new linb.UI.TreeBar)
                .setHost(host, "ftreebar")
                .onItemSelected("_ftreebar_onitemselected")
            , "before1");

                    host.ly.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "gtreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 120, "type": "input", "caption": "名称" }, { "id": "col1", "width": 120, "type": "input", "caption": "工厂" }, { "id": "col2", "width": 120, "type": "input", "caption": "天数"}])
                .setNoCtrlKey(false)
                .setValue("")
            , "main");

                    host.pane.append(
                (new linb.UI.ToolBar)
                .setHost(host, "toolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "设置", "image": "../../../Image/opeimage/set.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "重置", "image": "../../../Image/opeimage/reset.gif"}], "caption": "grp1"}])
                .onClick("_toolbar_onclick")
            );

                    host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "gdlg")
                .setLeft(310)
                .setTop(140)
                .setWidth(540)
                .setHeight(210)
                .setCaption("产品工期")
                .setMinBtn(false)
                .setMaxBtn(false)
                .setDisplay("none")
            );

                    host.gdlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "gstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_gstoolbar_onclick")
            );

                    host.gdlg.append(
                (new linb.UI.Input)
                .setHost(host, "gqname")
                .setDataBinder("binder")
                .setDataField("gqname")
                .setLeft(40)
                .setTop(50)
                .setWidth(210)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999'>名称</span>")
                .setLabelHAlign("left")
            );

                    host.gdlg.append(
                (new linb.UI.Input)
                .setHost(host, "gqcode")
                .setDataBinder("binder")
                .setDataField("gqcode")
                .setReadonly(true)
                .setLeft(290)
                .setTop(50)
                .setWidth(210)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999'>编码</span>")
                .setLabelHAlign("left")
            );

                    host.gdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "gqnum")
                .setDataBinder("binder")
                .setDataField("gqnum")
                .setLeft(290)
                .setTop(100)
                .setWidth(210)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999'>工期</span>")
                .setLabelHAlign("left")
                .setType("number")
            );

                    host.gdlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "fcode")
                .setDataBinder("binder")
                .setDataField("fcode")
                .setLeft(40)
                .setTop(100)
                .setWidth(195)
                .setHeight(45)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999'>工厂</span>")
                .setLabelHAlign("left")
                .setType("listbox")
            );

                    host.gdlg.append(
                (new linb.UI.Input)
                .setHost(host, "gqid")
                .setDataBinder("binder")
                .setDataField("gqid")
                .setLeft(210)
                .setTop(20)
                .setWidth(210)
                .setHeight(45)
                .setDisplay("none")
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999'>编码</span>")
                .setLabelHAlign("left")
                .setValue("0")
            );

                    return children;
                    // ]]code created by jsLinb UI Builder
                },

                iniExComs: function (com, threadid) {
                },

                customAppend: function (parent, subId, left, top) {

                    return false;
                },

                events: { "onReady": "_onready" },
                _onready: function () {
                    ns = this;
                    preurl = "../../../ProductionPeriod";
                    IinvItems("", ns.itreebar);
                    ICustdepItemsByAtrr("gc", ns.ftreebar)
                },

                _toolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    var mv = ns.itreebar.getUIValue();
                    var tv = ns.ftreebar.getUIValue();
                    var pv = ns.gtreegrid.getUIValue();

                    if (mv == null || mv == "") {
                        linb.warn("请选择产品");
                        return
                    }
                    if (tv == null || tv == "") {
                        linb.warn("请选择工厂");
                        return
                    }
                    if (item.id == "a1") {

                        if (pv == null || pv == "") {
                            linb.warn("请选择工期");
                            return
                        }
                        var mvi = ns.itreebar.getItemByItemId(mv)
                        if (mvi.sub) {
                            linb.warn("请选择最末级");
                            return
                        }
                        SetPeriod(mv, tv, pv);
                    }
                    if (item.id == "a3") {
                        linb.confirms("确定重置？", "ReSetPeriod('" + mv + "','" + tv + "')");
                    }
                },
                _gtoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    var sv = ns.ftreebar.getUIValue();
                    var gv = ns.gtreegrid.getUIValue();
                    if (item.id == "a1") {
                        if (sv == "" || sv == null) {
                            linb.warn("请选择工厂");
                            return
                        }
                        ns.gdlg.setDisplay("block");
                        ICustdepItemsByAtrr("gc", ns.fcode)
                        InitPeriod(sv, "");
                    }
                    if (item.id == "a3") {
                        if (gv == "" || gv == null) {
                            linb.warn("请选择工期");
                            return
                        }
                        ns.gdlg.setDisplay("block");
                        InitPeriod("", gv);
                    }
                    if (item.id == "a4") {
                        if (gv == "" || gv == null) {
                            linb.warn("请选择工期");
                            return
                        }
                        linb.confirms("确定删除？", "DelPeriod('" + gv + "')")
                    }
                },
                _gstoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    if (item.id == "a1") {
                        SavePeriod();
                    }
                    ns.gdlg.setDisplay("none");
                },
                _itreebar_onitemselected: function (profile, item, e, src, type) {
                    var ns = this, uictrl = profile.boxing();
                    IinvCItems(item, ns.itreebar);
                    GetProductionPeriod();
                },
                _itreebar_beforeexpend: function (profile, item) {
                    var ns = this, uictrl = profile.boxing();
                    IinvCItems(item, ns.itreebar)
                },
                _ftreebar_onitemselected: function (profile, item, e, src, type) {
                    var ns = this, uictrl = profile.boxing();
                    QueryList();
                    GetProductionPeriod();
                }
            },
            Static: {
                viewSize: { "width": 1024, "height": 768 }
            }
        });
        linb.UI.setTheme(themes);
        linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
        function InitPeriod(fv, gv) {
            var o = { "fcode": fv, "gqcode": gv }
            var url = preurl + "/InitPeriod"
            var b = AjaxExb(url, o);
            var r = BackVad(b, "", false)
            if (r) {
                ns.gqname.setValue(r.gqname)
                ns.gqcode.setValue(r.gqcode)
                ns.fcode.setValue(r.fcode)
                ns.gqnum.setValue(r.gqnum)
                ns.gqid.setValue(r.id)
            }
        }
        function SavePeriod() {
            var url = preurl + "/SavePeriod"
            var db = linb.DataBinder.getFromName("binder");
            var o = db.updateDataFromUI().getData();
            var b = AjaxExb(url, o)
            BackVad(b, "QueryList()", false)
        }
        function DelPeriod(v) {
            var o = { "gqcode": v }
            var url = preurl + "/DelPeriod"
            var b = AjaxExb(url, o);
            BackVad(b, "QueryList()", false)
        }
        function QueryList() {
            var sv = ns.ftreebar.getUIValue();
            var url = preurl + "/QueryList";
            var o = { "fcode": sv };
            var b = AjaxExb(url, o);
            var r = BackVad(b, "", false)
            if (r) {
                ns.gtreegrid.removeAllRows();
                var arr = new Array();
                for (i = 1; i < r.length; i++) {
                    var cel = r[i].toString().split(',')
                    arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[2] }, { "value": cel[3]}] })
                }
                ns.gtreegrid.setRows(arr)
            }
        }

        function SetPeriod(pv, fv, qv) {
            var o = { "icode": pv, "fcode": fv, "gqcode": qv }
            var url = preurl + "/SetPeriod";
            var b = AjaxExb(url, o);
            var r = BackVad(b, "", false)
        }
        function ReSetPeriod(pv, fv) {
            var o = { "icode": pv, "fcode": fv }
            var url = preurl + "/ReSetPeriod"
            var b = AjaxExb(url, o);
            var r = BackVad(b, "", false)
        }
        function GetPeriod(pv, fv) {
            var o = { "icode": pv, "fcode": fv }
            var url = preurl + "/GetPeriod"
            var b = AjaxExb(url, o);
            if (b) {
                ns.gtreegrid.setUIValue(b);
            }
            else {
                linb.warn("未设置工期")
                ns.gtreegrid.setUIValue("");
            }
        }
        function GetProductionPeriod() {
            var iv = ns.itreebar.getUIValue();
            var fv = ns.ftreebar.getUIValue();
            if (iv != "" && iv != null && fv != "" && fv != null) {
                var ivi = ns.itreebar.getItemByItemId(iv);
                if (ivi.sub) {
                    return
                }
                GetPeriod(iv, fv);
            }
        }
    </script>
</body>
</html>
