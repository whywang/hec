<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>配套产品</title>
</head>
<body>
    <div id='loading'><img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/IInventory.js" type="text/javascript"></script>
     <script type="text/javascript">

         Class('App', 'linb.Com', {

             Instance: {

                 initialize: function () {

                     this.autoDestroy = true;

                     this.properties = {};
                 },

                 iniComponents: function () {
                     // [[code created by jsLinb UI Builder
                     var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                     append(
                (new linb.DataBinder)
                .setHost(host, "binder")
                .setName("binder")
            );

                     append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("产品工艺工资")
            );

                     host.pane.append(
                (new linb.UI.ToolBar)
                .setHost(host, "stoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "设置" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "重置"}], "caption": "grp1"}])
                .onClick("_stoolbar_onclick")
            );

                     host.pane.append(
                (new linb.UI.Layout)
                .setHost(host, "ly")
                .setItems([{ "id": "before", "pos": "before", "min": 10, "size": 350, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "before1", "pos": "before", "min": 10, "size": 350, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "ppt")
                .setDock("top")
                .setHeight(40)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.ppt.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl1")
                .setLeft(20)
                .setTop(10)
                .setCaption("<span style='font-size:14px;font-weight:bolder;color:#666666'>产品类别</span>")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "ppl")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "ppr")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "ppm")
                .setDock("fill")
                .setCustomStyle({ "KEY": "background:#ffffff" })
            , "before");

                     host.ppm.append(
                (new linb.UI.TreeBar)
                .setHost(host, "ptreebar")
                .onItemSelected("_ptreebar_onitemselected")
                .beforeExpend("_ptreebar_beforeexpend")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pct")
                .setDock("top")
                .setHeight(40)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before1");

                     host.pct.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl2")
                .setLeft(20)
                .setTop(10)
                .setCaption("<span style='font-size:14px;font-weight:bolder;color:#666666'>产品详情</span>")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pcl")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before1");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pcr")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before1");

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pcm")
                .setDock("fill")
                .setCustomStyle({ "KEY": "background:#ffffff" })
            , "before1");

                     host.pcm.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "ptreegrid")
                .setSelMode("multibycheckbox")
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .onClickCell("_ptreegrid_onclickcell")
                .setHeader([{ "id": "col1", "width": 150, "type": "input", "caption": "产品" }, { "id": "col1", "width": 2, "type": "input", "caption": "1" }, { "id": "col2", "width": 140, "type": "input", "caption": "材质"}])
                .setValue("")
            );

                     host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pgt")
                .setDock("top")
                .setHeight(40)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "main");

                     host.pgt.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl3")
                .setLeft(10)
                .setTop(10)
                .setCaption("<span style='font-size:14px;font-weight:bolder;color:#666666'>工艺工资</span>")
            );

                     host.ly.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "gtreegrid")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)

                .setHeader([{ "id": "col1", "width": 140, "type": "input", "caption": "工艺" }, { "id": "col3", "width": 80, "type": "input", "caption": "价格"}])
            , "main");

                     host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "gdlg")
                .setLeft(150)
                .setTop(50)
                .setWidth(700)
                .setHeight(540)
                .setDisplay("none")
                .setCaption("价格设置")
                .setMinBtn(false)
                .setMaxBtn(false)
            );

                     host.gdlg.append(
                (new linb.UI.Pane)
                .setHost(host, "pt")
                .setDock("top")
                .setHeight(30)
            );

                     host.pt.append(
                (new linb.UI.ToolBar)
                .setHost(host, "lstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_lstoolbar_onclick")
            );

                     host.gdlg.append(
                (new linb.UI.Pane)
                .setHost(host, "pbt")
                .setDock("top")
                .setHeight(95)
                .setCustomStyle({ "KEY": "border-bottom:5px solid #f2f2f2" })
            );

                     host.pbt.append(
                (new linb.UI.Input)
                .setHost(host, "pcode")
                .setDataBinder("binder")
                .setDataField("pcode")
                .setLeft(30)
                .setTop(10)
                .setWidth(640)
                .setHeight(70)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("产品编码")
                .setLabelHAlign("left")
                .setMultiLines(true)
                .setReadonly(true)
            );

                     host.gdlg.append(
                (new linb.UI.Pane)
                .setHost(host, "plm")
                .setDock("fill")
            );

                     host.plm.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "etreegrid")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setEditable(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "gname", "type": "label", "width": 160, "caption": "工艺名称" }, { "id": "gcode", "type": "label", "width": 120, "caption": "工艺编码" }, { "id": "number", "type": "number", "width": 100, "caption": "价格"}])
            );

                     return children;
                     // ]]code created by jsLinb UI Builder
                 },

                 iniExComs: function (com, threadid) {
                 },

                 customAppend: function (parent, subId, left, top) {

                     return false;
                 },


                 events: { "onReady": "_onready" },
                 _onready: function () {
                     ns = this;
                     preurl = "../../../ProductionProcessPrice";
                     IinvItems("", ns.ptreebar);

                 },
                 _stoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var sv = ns.ptreegrid.getUIValue();
                     if (sv == "" || sv == null) {
                         linb.message("请选择产品");
                         return;
                     }
                     if (item.id == "a1") {
                         ns.gdlg.setDisplay("block");
                         ns.pcode.setUIValue(sv);
                         GyQueryList(sv)
                     }
                     if (item.id == "a3") {
                         IDelFun("ReSetProcessLine('" + sv + "')")
                     }
                 },
                 _ptreebar_onitemselected: function (profile, item, e, src, type) {
                     var ns = this, uictrl = profile.boxing();
                     IinvCItems(item, ns.ptreebar);
                     QueryListInv(item.id, ns.ptreegrid)
                 },
                 _ptreebar_beforeexpend: function (profile, item) {
                     var ns = this, uictrl = profile.boxing();
                     IinvCItems(item, ns.ptreebar);
                 },
                 _lstoolbar_onclick: function (profile, item, group, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     if (item.id == "a1") {
                         SaveProcessPrice()
                     }
                     ns.gdlg.setDisplay("none");
                 },
                 _ptreegrid_onclickcell: function (profile, cell, e, src) {
                     var ns = this, uictrl = profile.boxing();
                     var zz = cell._row.id;
                     QueryProductionPrice(zz);
                 }

             },
             Static: {
                 viewSize: { "width": 1024, "height": 768 }
             }
         });
         linb.UI.setTheme(themes);
         linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
         function GyQueryList(v) {
             var o = { "pcode": v }
             var url = preurl + "/QueryGyAllList";
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.etreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[0] }, { "value": cel[2] }, { "value": cel[3]}] })
                 }
                 ns.etreegrid.setRows(arr)
             }
         }
         function SaveProcessPrice() {
             var prow = ns.etreegrid.getRows("min")
             var arg1 = { "prow": prow }
             var url = preurl + "/SaveProcessPrice"
             var db = linb.DataBinder.getFromName("binder");
             var arg2 = db.updateDataFromUI().getData();
             var o = $.extend(arg1, arg2);
             var b = AjaxExb(url, o)
             BackVad(b, "", false)
         }
         function QueryProductionPrice(v) {
             var o = { "pcode": v }
             var url = preurl + "/QueryProcessPrice";
             var b = AjaxExb(url, o);
             var r = BackVad(b, "", false)
             if (r) {
                 ns.gtreegrid.removeAllRows();
                 var arr = new Array();
                 for (i = 1; i < r.length; i++) {
                     var cel = r[i].toString().split(',')
                     arr.push({ "id": cel[0], "cells": [{ "value": cel[0] }, { "value": cel[2]}] })
                 }
                 ns.gtreegrid.setRows(arr)
             }
         }
     </script>
</body>
</html>
