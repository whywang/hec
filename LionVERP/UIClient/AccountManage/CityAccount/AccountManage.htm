<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>客户退款</title>
    <link href="../../../Styles/Common/toastr.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div id='loading'>
    <img src="../../../runtime/loading.gif" alt="Loading..." />加载中......</div>
    <script src="../../../Scripts/Common/json2.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/linb-debug.js" type="text/javascript"></script>
    <script src="../../../runtime/jsLinb/js/adv-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/Common.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValReturn.js" type="text/javascript"></script>
    <script src="../../../Scripts/Valid/ValInput.js" type="text/javascript"></script>
    <script src="../../../Scripts/Api/Idepment.js" type="text/javascript"></script>
    <script src="../../../Scripts/Common/toastr.js" type="text/javascript"></script>
    <script type="text/javascript">

        Class('App', 'linb.Com', {

            Instance: {

                initialize: function () {

                    this.autoDestroy = true;

                    this.properties = {};
                },

                iniComponents: function () {
                    // [[code created by jsLinb UI Builder
                    var host = this, children = [], append = function (child) { children.push(child.get(0)) };

                    append(
                (new linb.DataBinder)
                .setHost(host, "binder")
                .setName("binder")
            );

                    append(
                (new linb.UI.Panel)
                .setHost(host, "pane")
                .setZIndex(1)
                .setCaption("账户管理")
                .setImage("../../../Image/opeimage/page.gif")
            );

                    host.pane.append(
                (new linb.UI.ToolBar)
                .setHost(host, "toolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "新增", "image": "../../../Image/opeimage/add.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "编辑", "image": "../../../Image/opeimage/edit.gif" }, { "id": "a2", "type": "split", "split": true }, { "id": "a4", "caption": "删除", "image": "../../../Image/opeimage/del.gif"}], "caption": "grp1"}])
                .onClick("_toolbar_onclick")
            );

                    host.pane.append(
                (new linb.UI.Layout)
                .setHost(host, "ly")
                .setItems([{ "id": "before", "pos": "before", "min": 10, "size": 350, "locked": false, "folded": false, "hidden": false, "cmd": true }, { "id": "main", "min": 10}])
                .setType("horizontal")
            );

                    host.ly.append(
                (new linb.UI.TreeBar)
                .setHost(host, "dtreebar")
                .setItems([{ "id": "node1", "sub": ["node11", { "id": "node12", "image": "img/demo.gif" }, "node13", "node14"], "caption": "node1" }, { "id": "node2", "sub": ["node21", "node22", "node23", "node24"], "caption": "node2"}])
                .onItemSelected("_dtreebar_onitemselected")
            , "before");

                    host.ly.append(
                (new linb.UI.TreeGrid)
                .setHost(host, "atreegrid")
                .setSelMode("multibycheckbox")
                .setAltRowsBg(true)
                .setRowNumbered(true)
                .setHeaderHeight(25)
                .setRowHeight(25)
                .setHeader([{ "id": "col1", "width": 120, "type": "input", "caption": "账户" }, { "id": "col2", "width": 120, "type": "input", "caption": "城市" }, { "id": "col3", "width": 140, "type": "input", "caption": "负责人" }, { "id": "col4", "width": 140, "type": "input", "caption": "信用额" }, { "id": "col4", "width": 120, "type": "input", "caption": "可用金额"}])
                .setValue("")
                .onRowSelected("_atreegrid_onrowselected")
            , "main");

                    host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pct")
                .setDock("top")
                .setHeight(50)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                    host.pct.append(
                (new linb.UI.SLabel)
                .setHost(host, "sl1")
                .setLeft(20)
                .setTop(20)
                .setCaption("<span style='font-size:16px;font-weight:bolder;color:#666666'>城市列表</span>")
            );

                    host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "pcl")
                .setDock("left")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                    host.ly.append(
                (new linb.UI.Pane)
                .setHost(host, "ptr")
                .setDock("right")
                .setWidth(12)
                .setCustomStyle({ "KEY": "background:#f2f2f2" })
            , "before");

                    host.pane.append(
                (new linb.UI.Dialog)
                .setHost(host, "dlg")
                .setLeft(270)
                .setTop(130)
                .setWidth(630)
                .setHeight(260)
                .setDisplay("none")
                .setCaption("账户")
                .setMinBtn(false)
                .setMaxBtn(false)
            );

                    host.dlg.append(
                (new linb.UI.ToolBar)
                .setHost(host, "cstoolbar")
                .setItems([{ "id": "grp1", "sub": [{ "id": "a1", "caption": "确定" }, { "id": "a2", "type": "split", "split": true }, { "id": "a3", "caption": "取消"}], "caption": "grp1"}])
                .onClick("_cstoolbar_onclick")
            );

                    host.dlg.append(
                (new linb.UI.Input)
                .setHost(host, "acode")
                .setDataBinder("binder")
                .setDataField("acode")
                .setReadonly(true)
                .setLeft(330)
                .setTop(50)
                .setWidth(240)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999;'>账户编码</span>")
                .setLabelHAlign("left")
            );

                    host.dlg.append(
                (new linb.UI.Input)
                .setHost(host, "dname")
                .setDataBinder("binder")
                .setDataField("dname")
                .setReadonly(true)
                .setLeft(50)
                .setTop(100)
                .setWidth(240)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999;'>城市</span>")
                .setLabelHAlign("left")
            );

                    host.dlg.append(
                (new linb.UI.Input)
                .setHost(host, "dcode")
                .setDataBinder("binder")
                .setDataField("dcode")
                .setReadonly(true)
                .setLeft(330)
                .setTop(100)
                .setWidth(240)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999;'>编码</span>")
                .setLabelHAlign("left")
            );

                    host.dlg.append(
                (new linb.UI.Input)
                .setHost(host, "manager")
                .setDataBinder("binder")
                .setDataField("manager")
                .setLeft(50)
                .setTop(150)
                .setWidth(240)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999;'>负责人</span>")
                .setLabelHAlign("left")
            );

                    host.dlg.append(
                (new linb.UI.Input)
                .setHost(host, "telephone")
                .setDataBinder("binder")
                .setDataField("telephone")
                .setLeft(330)
                .setTop(150)
                .setWidth(240)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999;'>联系方式</span>")
                .setLabelHAlign("left")
            );

                    host.dlg.append(
                (new linb.UI.ComboInput)
                .setHost(host, "atype")
                .setDataBinder("binder")
                .setDataField("atype")
                .setLeft(340)
                .setTop(210)
                .setWidth(225)
                .setHeight(47)
                .setDisplay("none")
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("账户类型")
                .setLabelHAlign("left")
                .setType("listbox")
                .setItems([{ "id": "通用", "caption": "通用" }, { "id": "木门", "caption": "木门" }, { "id": "木作", "caption": "木作" }, { "id": "五金", "caption": "五金" }, { "id": "退款", "caption": "退款"}])
                .setValue("a")
            );

                    host.dlg.append(
                (new linb.UI.Input)
                .setHost(host, "id")
                .setDataBinder("binder")
                .setDataField("id")
                .setReadonly(true)
                .setLeft(110)
                .setTop(180)
                .setWidth(370)
                .setHeight(25)
                .setDisplay("none")
                .setLabelSize(60)
                .setLabelCaption("城市编码")
                .setValue("0")
            );

                    host.dlg.append(
                (new linb.UI.Input)
                .setHost(host, "aname")
                .setDataBinder("binder")
                .setDataField("aname")
                .setReadonly(true)
                .setLeft(50)
                .setTop(50)
                .setWidth(240)
                .setHeight(47)
                .setLabelSize(20)
                .setLabelPos("top")
                .setLabelCaption("<span style='font-size:14px;color:#999999;'>账户</span>")
                .setLabelHAlign("left")
            );

                    return children;
                    // ]]code created by jsLinb UI Builder
                },

                iniExComs: function (com, threadid) {
                },

                customAppend: function (parent, subId, left, top) {

                    return false;
                },

                events: { "onReady": "_onready" },
                _onready: function () {
                    ns = this;
                    preurl = "../../../CityAccount";
                    IdepItemsByAtrr("cs", ns.dtreebar)
                },

                _toolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    var cv = ns.dtreebar.getUIValue();
                    var av = ns.atreegrid.getUIValue();
                    if (item.id == "a1") {
                        if (cv == "" || cv == null) {
                            linb.warn("请选择城市");
                            return
                        }
                        ns.dlg.setDisplay("block");
                        Init(cv, "")
                    }
                    if (item.id == "a3") {
                        if (av == "" || av == null) {
                            linb.warn("请选择账户");
                            return
                        }
                        ns.dlg.setDisplay("block");
                        Init("", av)
                    }
                    if (item.id == "a4") {
                        if (av == "" || av == null) {
                            linb.warn("请选择账户");
                            return
                        }
                        linb.confirms("确定删除？","DelAcc('" + av + "')")
                    }
                },
                _dtreebar_onitemselected: function (profile, item, e, src, type) {
                    var ns = this, uictrl = profile.boxing();
                    QueryList();
                },
                _cstoolbar_onclick: function (profile, item, group, e, src) {
                    var ns = this, uictrl = profile.boxing();
                    if (item.id == "a1") {
                        Save();
                    }
                    if (item.id == "a3") {
                        ns.dlg.setDisplay("none");
                    }

                },
                _atreegrid_onrowselected: function (profile, row, e, src, type) {
                    var ns = this, uictrl = profile.boxing();
                    ns.atreegrid.setValue(row.id)
                }
            },
            Static: {
                viewSize: { "width": 1280, "height": 1024 }
            }
        });
        linb.UI.setTheme(themes);
        linb.Com.load('App', function () { linb('loading').remove(); }, 'en');
        function Init(dv,av) {
            var o = { "dcode": dv, "acode": av }
            var url = preurl + "/InitAccount"
            var b = AjaxExb(url, o);
            var r = BackVad(b, "", false)
            if (r) {
                ns.acode.setValue(r.acode);
                ns.aname.setValue(r.aname);
                ns.dname.setValue(r.dname);
                ns.dcode.setValue(r.dcode);
                ns.manager.setValue(r.manager);
                ns.telephone.setValue(r.telephone);
                ns.atype.setValue(r.atype);
                ns.id.setValue(r.id)
            }
        }
        function Save() {
            if (!CheckInput(ns, ns.manager, true, "", "负责人不能为空！", "", "", "")) {
                return
            }
            if (!CheckInput(ns, ns.telephone, true, "telephone", "电话不能为空！", "正确输入电话号码！", "", "")) {
                return
            }
            var url = preurl + "/SaveAccount"
            var db = linb.DataBinder.getFromName("binder");
            var o= db.updateDataFromUI().getData();
            var b = AjaxExb(url, o)
            BackVad(b, "QueryList()", false);
            ns.dlg.setDisplay("none");
        }
        function QueryList() {
            var spv = ns.dtreebar.getUIValue();
            var url = preurl + "/QueryList";
            var o={dcode:spv}
            var b = AjaxExb(url,o);
            var r = BackVad(b, "", false)
            if (r) {
                ns.atreegrid.removeAllRows();
                var arr = new Array();
                for (i = 1; i < r.length; i++) {
                    var cel = r[i].toString().split(',')
                    arr.push({ "id": cel[0], "cells": [{ "value": cel[1] }, { "value": cel[2] }, { "value": cel[3] }, { "value": cel[4] }, { "value": cel[5] }, { "value": cel[6] }] })
                }
                ns.atreegrid.setRows(arr)
            }
        }
        function DelAcc(v) {
            var o = { "acode": v }
            var url = preurl + "/DelAccount"
            var b = AjaxExb(url, o);
            BackVad(b, "QueryList()", false)
        }
    </script>
</body>
</html>
